var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,1.016,1,1.921]],["body/injectables/AccessTokenGuard.html",[0,1.807,1,3.417,2,2.52,3,0.255,4,0.229,5,0.203,6,5.125,7,3.801,8,6.022,9,0.331,10,0.015,11,0.862,12,5.125,13,3.649,14,0.255,15,0.234,16,0.013,17,0.013]],["title/controllers/AppController.html",[18,1.4,19,2.786]],["body/controllers/AppController.html",[3,0.241,4,0.216,5,0.192,9,0.32,10,0.015,11,0.814,14,0.241,15,0.221,16,0.013,17,0.013,18,2.407,19,4.789,20,2.001,21,4.839,22,0.64,23,2.129,24,6.476,25,1.29,26,0.814,27,5.584,28,1.701,29,1.023,30,4.444,31,3.689,32,2.892,33,2.613,34,1.843,35,5.584]],["title/modules/AppModule.html",[36,0.737,37,2.786]],["body/modules/AppModule.html",[3,0.129,4,0.116,5,0.103,9,0.373,10,0.016,11,0.436,14,0.129,15,0.118,16,0.008,17,0.008,19,3.742,20,1.582,30,3.99,31,1.977,34,0.988,36,0.991,37,5.732,38,1.732,39,1.167,40,1.55,41,1.55,42,1.401,43,2.718,44,1.072,45,2.593,46,2.593,47,2.593,48,4.272,49,3.99,50,3.537,51,3.99,52,3.99,53,3.749,54,3.99,55,4.272,56,3.749,57,4.272,58,3.749,59,3.349,60,4.272,61,3.99,62,3.749,63,3.537,64,2.287,65,1.55,66,1.472,67,4.416,68,3.467,69,2.165,70,1.472,71,0.691,72,2.593,73,2.993,74,2.993,75,2.993,76,2.993,77,4.548,78,4.77,79,1.977,80,3.149,81,1.977,82,2.993,83,2.993,84,2.993,85,1.735,86,2.593,87,2.33,88,1.401,89,1.637,90,3.659,91,1.977,92,1.846,93,2.33,94,1.472,95,1.55,96,2.33,97,2.134,98,2.993,99,1.275,100,2.993,101,2.33,102,1.637,103,2.993,104,2.33,105,2.993,106,2.993,107,2.993,108,1.637,109,2.593,110,2.993,111,0.949,112,2.593,113,2.33,114,1.977,115,2.993,116,3.827,117,1.882,118,4.416,119,1.977,120,2.993,121,3.439,122,2.993,123,2.993,124,2.993,125,2.993,126,0.988,127,2.993,128,0.988,129,2.993]],["title/injectables/AppService.html",[0,1.016,30,2.411]],["body/injectables/AppService.html",[0,1.774,2,2.444,3,0.247,4,0.222,5,0.197,9,0.273,10,0.015,11,0.836,14,0.247,15,0.227,16,0.013,17,0.013,22,0.657,23,2.164,24,6.534,26,0.836,28,1.747,29,1.04,30,4.211,34,1.893,130,4.971,131,5.737,132,4.971,133,5.737,134,4.971]],["title/controllers/AuthController.html",[18,1.4,68,2.581]],["body/controllers/AuthController.html",[1,1.775,3,0.156,4,0.14,5,0.124,9,0.337,10,0.016,11,0.526,14,0.156,15,0.143,16,0.01,17,0.01,18,1.293,20,1.293,22,0.413,23,1.602,25,1.591,26,1.004,28,2.099,29,0.77,32,1.869,34,2.383,62,3.38,68,3.338,135,3.128,136,2.092,137,2.81,138,6.317,139,5.366,140,4.379,141,5.053,142,4.379,143,5.053,144,3.128,145,3.609,146,3.128,147,3.271,148,5.053,149,3.609,150,2.195,151,0.969,152,0.925,153,1.871,154,6.256,155,3.609,156,3.598,157,3.609,158,3.609,159,4.158,160,3.609,161,3.455,162,5.053,163,3.935,164,3.609,165,3.128,166,3.271,167,5.053,168,3.609,169,3.609,170,3.569,171,5.053,172,2.153,173,3.609,174,2.092,175,2.227,176,2.092,177,3.128,178,3.128,179,3.38,180,1.293,181,3.609,182,3.603,183,5.053,184,3.609,185,3.609,186,3.609,187,3.609,188,3.609,189,3.609,190,3.609,191,3.609,192,3.609,193,3.609,194,3.609,195,3.609,196,1.191,197,2.81,198,3.609,199,3.609,200,3.609,201,3.609,202,3.609,203,3.609,204,3.609,205,3.609,206,1.869,207,3.609,208,2.227,209,3.128,210,3.609]],["title/modules/AuthModule.html",[36,0.737,48,2.581]],["body/modules/AuthModule.html",[3,0.173,4,0.156,5,0.138,9,0.375,10,0.016,11,0.586,13,2.483,14,0.173,15,0.159,16,0.01,17,0.01,20,1.951,36,1.165,38,1.328,39,1.569,40,2.084,41,2.084,42,1.883,43,3.197,44,1.442,48,5.246,51,4.396,56,4.13,59,3.69,62,4.13,63,3.897,64,2.82,65,2.084,66,1.979,68,4.078,69,2.035,70,1.979,71,0.929,80,3.883,81,2.658,90,2.979,92,2.483,94,1.979,95,2.084,177,3.487,211,3.487,212,4.024,213,3.487,214,4.707,215,4.707,216,4.024,217,4.024,218,5.446,219,4.024,220,4.024,221,4.024,222,4.024,223,4.024,224,4.024,225,3.598,226,1.979,227,3.487,228,4.024,229,1.979,230,2.332,231,1.383,232,2.658,233,4.024,234,4.024,235,4.024,236,4.024]],["title/injectables/AuthService.html",[0,1.016,62,2.265]],["body/injectables/AuthService.html",[0,0.776,2,0.773,3,0.078,4,0.07,5,0.062,9,0.285,10,0.016,11,0.264,14,0.078,15,0.072,16,0.006,17,0.006,22,0.208,23,0.946,26,0.899,28,1.826,29,1.094,34,2.037,62,1.73,63,3.029,71,0.419,80,3.736,81,1.198,91,1.198,93,1.412,94,0.892,95,1.969,111,1.205,117,3.079,121,1.412,126,1.608,139,2.324,140,2.586,142,2.586,146,2.586,147,2.282,150,2.037,151,0.922,152,0.859,153,1.737,154,2.586,165,2.586,166,2.282,170,2.523,172,2.554,178,1.571,196,2.4,197,5.401,206,0.939,227,1.571,231,2.359,237,1.571,238,2.984,239,3.079,240,2.984,241,2.984,242,4.08,243,2.984,244,2.984,245,2.984,246,1.331,247,1.571,248,2.711,249,3.354,250,3.295,251,1.813,252,2.984,253,1.813,254,2.984,255,2.984,256,1.813,257,3.736,258,3.475,259,1.813,260,2.395,261,2.984,262,1.813,263,2.984,264,1.813,265,2.984,266,1.813,267,2.868,268,1.813,269,2.984,270,1.813,271,2.984,272,1.813,273,1.293,274,1.813,275,1.293,276,1.412,277,2.586,278,1.119,279,1.119,280,1.813,281,1.571,282,1.571,283,1.051,284,1.119,285,1.293,286,1.412,287,1.293,288,1.571,289,2.984,290,3.575,291,2.984,292,1.813,293,2.984,294,2.984,295,1.813,296,3.699,297,2.889,298,1.813,299,1.571,300,2.324,301,2.984,302,1.051,303,1.813,304,2.984,305,1.632,306,3.802,307,3.295,308,3.802,309,3.295,310,2.961,311,1.813,312,3.802,313,3.802,314,3.802,315,2.586,316,4.221,317,0.892,318,1.813,319,4.407,320,3.802,321,2.961,322,1.412,323,1.813,324,1.198,325,1.813,326,1.813,327,3.802,328,1.571,329,2.984,330,1.813,331,1.813,332,1.813,333,2.984,334,1.571,335,2.984,336,1.813,337,2.586,338,1.813,339,2.984,340,1.813,341,2.984,342,1.813,343,3.295,344,2.523,345,1.813,346,1.571,347,1.412,348,2.984,349,1.813,350,1.813,351,1.813,352,1.412,353,1.198,354,2.711,355,2.961,356,1.571,357,2.586,358,1.73,359,1.813,360,1.813,361,1.293,362,1.813,363,1.571,364,1.813,365,2.984,366,1.571,367,2.984,368,1.813,369,1.119,370,1.813,371,1.813,372,1.813,373,1.412,374,1.813,375,1.813,376,1.571,377,2.984,378,1.571,379,1.571,380,1.119,381,2.984,382,1.813,383,1.813,384,1.119,385,1.813,386,1.813,387,1.813,388,1.571,389,2.984,390,1.813,391,1.813,392,1.841,393,1.813,394,4.407,395,0.939,396,1.813,397,1.632,398,1.813,399,3.802,400,1.115,401,1.813,402,1.293,403,1.813,404,1.813,405,1.412,406,1.813,407,1.813,408,1.813]],["title/classes/CreateDependencyDTO.html",[15,0.155,409,2.581]],["body/classes/CreateDependencyDTO.html",[3,0.233,4,0.209,5,0.186,9,0.314,10,0.015,14,0.233,15,0.261,16,0.013,17,0.013,22,0.62,25,1.25,26,0.788,29,1.127,151,1.035,152,0.989,180,1.939,409,4.353,410,1.522,411,5.71,412,4.69,413,1.782,414,4.384,415,2.803,416,2.443,417,3.24,418,4.699,419,5.412,420,4.214,421,4.214,422,2.661,423,3.413,424,2.415]],["title/classes/CreateVulnerabilityDTO.html",[15,0.155,425,2.581]],["body/classes/CreateVulnerabilityDTO.html",[3,0.219,4,0.196,5,0.174,9,0.302,10,0.015,14,0.219,15,0.251,16,0.012,17,0.012,22,0.581,25,1.462,26,0.922,29,1.186,151,1.053,152,1.056,180,1.818,410,1.427,413,1.712,414,4.259,415,3.279,416,2.177,417,3.555,418,3.617,422,2.494,423,3.575,424,2.825,425,4.183,426,5.982,427,4.395,428,5.794,429,5.072,430,5.072,431,5.072,432,5.072,433,4.259,434,3.617]],["title/controllers/DependenciesController.html",[18,1.4,435,2.786]],["body/controllers/DependenciesController.html",[1,2.358,3,0.207,4,0.186,5,0.165,9,0.348,10,0.016,11,0.699,14,0.207,15,0.19,16,0.012,17,0.012,18,1.718,20,1.718,22,0.549,23,1.937,25,1.411,26,0.89,28,1.861,29,1.025,32,2.483,33,2.244,34,2.017,39,1.87,136,2.779,150,2.017,151,0.89,152,0.85,153,1.719,174,2.779,175,2.958,176,2.779,179,3.899,180,1.718,208,3.77,409,4.941,435,4.357,436,4.155,437,3.342,438,4.357,439,4.155,440,4.155,441,4.795,442,4.155,443,4.795,444,4.795,445,3.342,446,3.419,447,3.308,448,3.734,449,2.958,450,3.734,451,4.155,452,4.795,453,4.155,454,4.155,455,4.795,456,4.795,457,4.795,458,4.795]],["title/modules/DependenciesModule.html",[36,0.737,49,2.411]],["body/modules/DependenciesModule.html",[3,0.207,4,0.186,5,0.165,9,0.362,10,0.016,11,0.699,14,0.207,15,0.19,16,0.012,17,0.012,20,2.19,36,1.269,38,1.583,39,1.87,40,2.483,41,2.483,42,2.244,43,3.483,44,2.41,49,4.794,50,4.091,64,3.165,65,2.483,66,2.358,69,2.284,90,2.622,99,2.043,101,3.734,102,2.622,151,0.699,225,4.037,226,2.358,416,1.648,435,4.796,447,3.896,448,3.734,459,4.155,460,4.795,461,4.155,462,4.155,463,4.795,464,4.795,465,2.043,466,4.357,467,4.795,468,4.155]],["title/injectables/DependenciesService.html",[0,1.016,447,1.921]],["body/injectables/DependenciesService.html",[0,0.873,2,0.894,3,0.145,4,0.081,5,0.072,9,0.308,10,0.016,11,0.306,14,0.09,15,0.083,16,0.006,17,0.006,22,0.24,23,1.065,26,0.919,28,1.863,29,1.069,33,0.981,34,2.019,71,0.484,99,0.894,102,1.147,111,1.522,117,3.074,126,0.692,132,4.857,150,2.082,151,0.919,152,0.878,153,1.775,196,1.943,226,1.031,239,2.247,246,1.498,249,3.412,260,2.583,275,2.995,283,1.216,290,3.182,296,2.072,297,2.623,310,2.615,324,2.218,358,1.216,380,3.458,384,1.294,392,1.294,397,2.626,402,1.495,409,3.889,414,3.458,416,1.651,424,2.501,434,2.995,437,1.837,438,2.394,439,2.91,442,2.91,445,3.539,447,1.651,450,1.633,451,1.817,465,1.431,469,1.817,470,3.358,471,3.358,472,3.358,473,4.2,474,3.358,475,3.358,476,1.495,477,3.997,478,4.2,479,4.2,480,4.2,481,4.161,482,2.097,483,2.097,484,3.358,485,3.424,486,2.097,487,2.097,488,3.358,489,2.097,490,3.358,491,3.892,492,2.097,493,2.097,494,4.802,495,4.802,496,2.097,497,3.358,498,2.097,499,3.64,500,2.903,501,4.365,502,2.008,503,3.64,504,3.64,505,3.64,506,3.358,507,2.097,508,3.64,509,3.64,510,2.097,511,1.633,512,1.817,513,1.385,514,2.995,515,1.385,516,1.216,517,1.495,518,1.495,519,2.097,520,2.097,521,2.097,522,2.097,523,2.995,524,2.394,525,2.097,526,1.817,527,1.817,528,1.817,529,2.097,530,2.615,531,3.358,532,1.651,533,3.358,534,2.097,535,4.2,536,2.097,537,3.64,538,2.097,539,2.097,540,2.097,541,2.097,542,1.651,543,3.358,544,1.817,545,2.097,546,1.817,547,1.817,548,2.097,549,2.097,550,4.2,551,2.097,552,2.097,553,3.64,554,2.097,555,2.097,556,2.097,557,4.2,558,4.2,559,2.097,560,3.358,561,2.097,562,3.358,563,2.097,564,2.097,565,2.097,566,2.097,567,2.097,568,2.097,569,2.097,570,2.097,571,2.097,572,2.097,573,1.817,574,2.097,575,5.886,576,1.633,577,2.097,578,2.097,579,2.097,580,3.358,581,2.097,582,2.097,583,2.097,584,3.358,585,2.097,586,2.097,587,2.097,588,2.097,589,2.097,590,2.097,591,2.097,592,2.097,593,2.097,594,2.097,595,2.097]],["title/classes/Dependency.html",[15,0.155,416,1.343]],["body/classes/Dependency.html",[3,0.128,4,0.115,5,0.102,9,0.209,10,0.016,14,0.225,15,0.118,16,0.008,17,0.008,22,0.34,25,1.705,26,1.075,29,1.176,71,0.686,111,1.657,126,0.981,128,0.981,151,0.64,152,1.086,153,2.171,172,1.872,196,0.981,317,3.869,380,2.711,410,0.836,413,1.188,414,3.225,416,1.797,424,2.332,428,4.07,434,4.394,465,3.173,485,2.119,500,2.707,501,4.07,502,1.873,503,4.529,504,4.529,505,4.529,508,4.529,509,4.529,596,2.119,597,3.225,598,3.63,599,2.971,600,2.971,601,2.971,602,2.461,603,2.971,604,3.453,605,4.497,606,2.971,607,2.971,608,2.902,609,2.971,610,2.971,611,2.971,612,1.461,613,2.971,614,2.971,615,2.971,616,2.971,617,2.056,618,3.662,619,1.461,620,2.16,621,1.461,622,3.63,623,3.807,624,2.971,625,4.992,626,2.575,627,2.971,628,2.971,629,4.393,630,2.971,631,2.971,632,2.971,633,2.971,634,4.393,635,2.971,636,2.971,637,2.971,638,2.971,639,2.971,640,2.971,641,2.119,642,2.575]],["title/classes/DependencyConsumer.html",[15,0.155,466,2.786]],["body/classes/DependencyConsumer.html",[3,0.208,4,0.13,5,0.116,7,1.844,9,0.292,10,0.016,11,0.491,14,0.145,15,0.133,16,0.009,17,0.009,22,0.386,23,1.527,25,1.497,26,1.034,28,2.053,29,0.988,32,1.746,33,2.868,102,1.844,117,2.394,150,2.29,151,1.011,152,1.019,153,1.952,239,2.629,246,1.505,297,2.254,358,1.954,384,2.08,397,2.634,410,0.949,413,1.302,416,1.159,447,3.314,448,2.626,466,3.434,513,2.228,602,2.052,604,3.182,643,2.922,644,4.772,645,4.173,646,4.173,647,4.173,648,4.173,649,4.173,650,4.173,651,3.372,652,4.816,653,2.08,654,4.816,655,4.173,656,6.834,657,4.173,658,3.372,659,4.282,660,4.173,661,4.173,662,3.372,663,4.173,664,4.173,665,3.372,666,4.173,667,4.173,668,3.372,669,4.173,670,4.173,671,3.372,672,4.868,673,4.173,674,3.372,675,2.922,676,2.922,677,2.922,678,4.173,679,3.372,680,2.922,681,2.922,682,4.173,683,4.173,684,2.922,685,2.922,686,2.922,687,2.626,688,2.922,689,1.578,690,2.922,691,2.404,692,2.626,693,3.75,694,4.868,695,4.868,696,4.173,697,2.922,698,4.173,699,2.922,700,4.868,701,2.922,702,2.922,703,2.922,704,2.922,705,2.922,706,2.922,707,2.922,708,2.922,709,3.372,710,4.173]],["title/classes/DependencyRepository.html",[15,0.155,711,2.581]],["body/classes/DependencyRepository.html",[3,0.186,4,0.167,5,0.148,9,0.272,10,0.015,14,0.276,15,0.171,16,0.011,17,0.011,22,0.495,25,1.572,26,0.992,29,0.87,71,0.998,99,3.017,111,2.415,126,1.426,128,1.885,152,1.079,196,1.426,402,3.081,410,1.216,413,1.545,416,2.341,445,3.5,465,3.017,502,2.658,598,3.348,602,2.434,612,3.348,617,2.673,618,3.481,619,2.125,620,2.809,621,2.125,622,3.348,711,4.227,712,3.081,713,5.545,714,6.399,715,5.545,716,5.433,717,4.487,718,4.321,719,4.321,720,4.321,721,4.321,722,3.081,723,3.081,724,3.081,725,3.745]],["title/modules/DependencyRepositorySchemaModule.html",[36,0.737,726,2.581]],["body/modules/DependencyRepositorySchemaModule.html",[3,0.241,4,0.216,5,0.192,9,0.343,10,0.015,11,0.814,14,0.241,15,0.221,16,0.013,17,0.013,36,1.267,38,1.843,44,2.001,69,2.087,70,3.303,71,1.29,99,2.379,128,1.843,151,0.814,416,1.92,465,2.379,502,2.407,711,3.689,724,4.789,726,4.437,727,3.054,728,4.348,729,3.054,730,5.584]],["title/modules/DependencySchemaModule.html",[36,0.737,50,2.137]],["body/modules/DependencySchemaModule.html",[3,0.235,4,0.21,5,0.187,9,0.353,10,0.016,11,0.793,14,0.235,15,0.215,16,0.013,17,0.013,36,1.248,38,1.795,44,1.949,50,3.615,69,2.033,70,3.251,71,1.256,99,2.318,128,2.182,151,0.963,416,2.273,465,2.318,516,3.153,518,3.879,641,4.714,727,2.975,729,2.975,731,5.44,732,4.714,733,5.44,734,5.44]],["title/classes/DependencyVersion.html",[15,0.155,516,2.265]],["body/classes/DependencyVersion.html",[3,0.196,4,0.176,5,0.156,9,0.282,10,0.015,14,0.283,15,0.18,16,0.011,17,0.011,22,0.522,25,1.605,26,1.012,29,1.059,71,1.052,99,3.068,111,2.44,126,1.504,128,1.952,152,1.045,196,1.504,380,3.648,410,1.282,413,1.599,416,2.033,445,3.591,465,3.068,491,4.051,516,3.805,517,3.248,537,5.689,553,5.689,598,3.417,612,2.24,617,2.767,618,3.541,619,2.24,620,2.908,621,2.24,622,3.417,716,4.681,717,3.648,722,3.248,732,3.248,735,3.01,736,3.948,737,4.556,738,4.556,739,4.556,740,3.948]],["title/controllers/EmailController.html",[18,1.4,741,2.786]],["body/controllers/EmailController.html",[3,0.26,4,0.233,5,0.207,9,0.287,10,0.015,11,0.879,14,0.26,15,0.239,16,0.013,17,0.013,18,2.162,20,2.162,136,3.497,172,2.571,741,5.013,742,5.228,743,6.033]],["title/classes/EmailDTO.html",[15,0.155,161,2.137]],["body/classes/EmailDTO.html",[3,0.144,4,0.13,5,0.115,9,0.228,10,0.016,14,0.279,15,0.266,16,0.009,17,0.009,22,0.384,25,0.774,26,0.488,29,1.15,147,1.735,151,0.816,152,0.9,161,2.622,166,1.735,170,1.735,172,3.239,180,1.201,206,1.735,231,2.435,258,1.942,267,3.483,302,1.942,305,3.788,344,3.483,369,2.067,395,2.483,400,1.791,410,0.943,413,1.296,415,1.735,417,3.597,422,1.648,423,3.789,424,3.217,433,4.273,532,1.648,689,3.148,744,2.067,745,4.449,746,3.698,747,2.903,748,4.984,749,3.062,750,3.454,751,3.342,752,2.903,753,4.15,754,3.35,755,4.443,756,4.271,757,3.698,758,2.213,759,2.213,760,2.213,761,2.213,762,2.213,763,3.167,764,2.213,765,2.213,766,3.167,767,3.77,768,2.067,769,2.213,770,2.213,771,2.213,772,3.167,773,3.167,774,3.245,775,3.167,776,3.167,777,3.167,778,2.213,779,2.213,780,2.213,781,2.213,782,2.213,783,2.213,784,1.942,785,2.213,786,2.213,787,2.213,788,2.067,789,2.067,790,2.213]],["title/modules/EmailModule.html",[36,0.737,51,2.411]],["body/modules/EmailModule.html",[3,0.185,4,0.166,5,0.147,9,0.353,10,0.016,11,0.626,14,0.185,15,0.17,16,0.011,17,0.011,20,2.039,36,1.204,38,1.418,39,1.675,40,2.224,41,2.224,42,2.01,43,3.304,44,1.539,51,4.741,56,4.208,59,3.76,63,3.971,64,2.946,65,2.224,66,2.112,69,2.384,77,4.93,78,4.843,79,2.837,90,3.112,92,2.65,94,2.112,95,2.224,109,3.722,112,3.722,113,3.344,114,2.837,116,3.722,121,3.344,137,3.344,229,2.112,230,2.49,231,1.477,602,1.83,625,2.837,741,4.549,791,4.295,792,4.295,793,4.295,794,4.295,795,4.295,796,4.295,797,4.295,798,3.344,799,3.344,800,4.295,801,4.295,802,4.295,803,4.295,804,4.295,805,5.689,806,4.295,807,5.689,808,4.295,809,3.344,810,4.93,811,5.689,812,3.722,813,4.295,814,4.295,815,4.295,816,3.722,817,4.295,818,4.295,819,4.295]],["title/injectables/EmailService.html",[0,1.016,63,2.137]],["body/injectables/EmailService.html",[0,1.238,2,1.414,3,0.143,4,0.128,5,0.114,9,0.336,10,0.016,11,0.483,14,0.143,15,0.131,16,0.009,17,0.009,22,0.38,23,1.509,26,0.886,28,1.696,29,1.022,33,2.606,34,1.838,63,2.604,71,0.766,78,4.781,79,2.192,91,2.192,93,2.584,94,1.632,95,1.719,111,1.052,117,2.857,126,1.095,150,1.838,151,0.811,152,0.775,153,1.566,172,2.029,196,2.279,231,1.914,239,3.416,242,4.336,246,2.125,248,3.97,249,4.003,250,4.825,260,2.341,267,3.726,273,2.366,275,2.366,279,2.048,283,1.924,284,2.048,286,2.584,287,2.366,288,2.876,290,3.297,296,2.938,297,2.847,299,4.126,300,4.336,315,2.876,324,2.192,352,3.708,354,5.129,355,2.584,363,4.825,366,2.876,379,4.126,380,2.048,388,2.876,392,2.938,437,1.815,749,1.815,768,2.048,798,2.584,799,2.584,820,2.876,821,4.761,822,6.084,823,4.761,824,3.319,825,6.906,826,3.319,827,4.761,828,3.319,829,3.319,830,4.761,831,3.319,832,3.97,833,3.319,834,3.319,835,2.876,836,4.761,837,4.761,838,3.319,839,3.319,840,3.319,841,3.319,842,4.761,843,2.192,844,4.761,845,3.319,846,3.319,847,3.319,848,3.319,849,3.319,850,3.319,851,3.319,852,3.319,853,3.319,854,3.319,855,3.319,856,3.319,857,3.319,858,3.319,859,3.319,860,3.319,861,2.584,862,3.319,863,2.876,864,3.319]],["title/classes/EmailTemplate.html",[15,0.155,832,2.786]],["body/classes/EmailTemplate.html",[3,0.218,4,0.196,5,0.174,10,0.015,14,0.218,15,0.2,16,0.012,17,0.012,22,0.58,23,2.004,26,0.737,28,1.541,29,1.185,34,1.67,150,1.67,151,0.737,152,0.704,153,1.424,156,3.122,163,3.94,172,2.694,305,2.768,309,4.385,354,3.608,358,2.933,373,3.94,410,1.424,745,3.122,749,2.768,751,2.768,784,2.933,789,3.122,832,4.508,861,3.94,865,5.479,866,4.385,867,6.895,868,6.895,869,5.06,870,6.895,871,5.06,872,6.322,873,5.06,874,5.06,875,5.06,876,3.94,877,5.06,878,5.06,879,5.06,880,5.06,881,5.06,882,5.06,883,5.06,884,5.06,885,5.06,886,5.06,887,5.479,888,5.06,889,5.06,890,5.06]],["title/classes/GithubApp.html",[15,0.155,891,2.265]],["body/classes/GithubApp.html",[3,0.187,4,0.168,5,0.149,7,2.378,9,0.325,10,0.015,14,0.277,15,0.172,16,0.011,17,0.011,22,0.498,25,1.576,26,0.994,29,1.04,71,1.004,88,3.32,111,2.355,126,1.435,128,2.118,152,0.987,196,1.435,231,2.669,279,2.683,317,3.488,344,2.252,395,2.252,410,1.223,413,1.551,542,2.138,597,3.96,598,3.156,602,2.444,617,3.004,618,3.488,619,2.138,620,2.82,621,2.138,622,3.488,717,3.539,891,3.72,892,4.112,893,3.101,894,5.562,895,4.577,896,4.348,897,4.348,898,4.348,899,3.386,900,4.09,901,4.348,902,2.873,903,3.386,904,4.09,905,3.101,906,3.768]],["title/controllers/GithubAppController.html",[18,1.4,907,2.786]],["body/controllers/GithubAppController.html",[1,1.809,3,0.159,4,0.142,5,0.126,9,0.303,10,0.016,11,0.536,14,0.159,15,0.146,16,0.01,17,0.01,18,1.318,20,1.318,22,0.421,23,1.623,25,1.471,26,0.928,28,1.94,29,1.123,31,2.43,32,1.905,34,2.288,85,3.881,89,2.801,117,3.241,136,2.132,144,3.188,150,2.102,151,0.928,152,0.886,153,1.792,156,4.546,159,5.253,174,2.132,175,3.16,176,2.132,179,3.692,180,1.318,208,3.635,209,3.188,260,3.132,290,3.293,397,3.222,400,2.201,449,2.27,502,1.318,895,4.542,904,2.623,907,3.651,908,4.424,909,3.188,910,4.438,911,5.121,912,5.891,913,5.891,914,3.679,915,3.988,916,3.679,917,3.679,918,3.679,919,3.679,920,3.679,921,3.679,922,3.679,923,4.587,924,3.679,925,5.121,926,3.679,927,6.164,928,2.623,929,2.865,930,3.414,931,3.679,932,3.679,933,3.679,934,3.679,935,3.679,936,3.188,937,3.679,938,3.679,939,3.679,940,3.679,941,3.679,942,3.679,943,3.679,944,3.679,945,3.679,946,3.679,947,3.679]],["title/modules/GithubAppModule.html",[36,0.737,52,2.411]],["body/modules/GithubAppModule.html",[3,0.198,4,0.177,5,0.157,9,0.358,10,0.015,11,0.668,14,0.198,15,0.182,16,0.011,17,0.011,20,2.128,31,3.029,36,1.243,38,1.513,39,1.788,40,2.375,41,2.375,42,2.146,43,3.411,44,2.36,52,4.883,53,4.285,58,4.285,59,3.828,64,3.075,65,2.375,66,2.255,69,2.219,72,3.974,85,2.658,88,2.146,89,2.508,90,3.602,92,2.829,97,3.27,225,3.923,226,2.255,229,2.255,400,2.219,892,2.658,907,4.696,908,3.029,930,4.564,948,3.974,949,4.585,950,3.974,951,3.974,952,4.585,953,2.658]],["title/modules/GithubAppSchemaModule.html",[36,0.737,53,2.265]],["body/modules/GithubAppSchemaModule.html",[3,0.241,4,0.217,5,0.192,9,0.343,10,0.015,11,0.816,14,0.241,15,0.222,16,0.013,17,0.013,36,1.269,38,1.848,44,2.006,53,3.899,69,2.092,70,3.308,71,1.293,88,2.62,89,3.062,128,1.848,151,0.816,400,2.092,727,3.062,729,3.062,891,3.245,892,3.245,905,4.797,954,3.992,955,5.599]],["title/injectables/GithubAppService.html",[0,1.016,930,2.265]],["body/injectables/GithubAppService.html",[0,0.912,2,0.943,3,0.095,4,0.086,5,0.076,9,0.313,10,0.016,11,0.323,14,0.095,15,0.088,16,0.007,17,0.007,22,0.254,23,1.112,26,0.936,28,1.899,29,1.138,33,1.036,34,1.895,71,0.511,85,3.813,87,1.724,88,1.036,89,2.708,91,1.463,96,1.724,111,1.38,117,3.128,126,0.731,150,2.059,151,0.909,152,0.868,153,1.755,175,2.164,196,2.366,226,1.089,231,2.262,239,3.079,242,5.581,246,1.565,248,3.104,249,3.813,257,4.093,260,2.957,273,1.579,278,1.366,279,1.366,283,1.283,287,1.579,290,3.158,296,2.164,297,2.525,300,2.73,307,1.919,317,2.654,344,2.564,361,1.579,373,3.39,376,1.919,378,1.919,384,1.366,392,2.686,395,2.255,397,1.918,400,0.827,437,1.211,476,1.579,477,4.093,502,1.774,511,1.724,514,3.104,515,1.463,524,1.579,532,2.141,542,1.089,597,3.055,753,2.164,843,1.463,891,3.327,894,1.919,895,4.691,902,1.463,904,3.104,908,4.346,910,3.039,923,3.856,927,3.039,928,2.5,929,1.724,930,2.032,954,1.579,956,1.919,957,3.506,958,3.506,959,3.506,960,4.952,961,3.506,962,3.506,963,4.354,964,2.214,965,3.506,966,2.214,967,3.506,968,2.214,969,3.506,970,2.214,971,3.506,972,2.214,973,2.214,974,2.214,975,2.214,976,2.214,977,2.214,978,2.214,979,2.214,980,3.848,981,1.919,982,1.724,983,1.724,984,2.214,985,1.463,986,1.919,987,1.919,988,1.919,989,4.952,990,2.214,991,2.214,992,1.724,993,2.214,994,2.214,995,2.214,996,2.214,997,2.214,998,1.919,999,2.214,1000,2.214,1001,3.506,1002,2.214,1003,2.214,1004,1.919,1005,2.214,1006,2.214,1007,2.214,1008,2.214,1009,2.5,1010,2.214,1011,3.506,1012,3.506,1013,3.506,1014,3.506,1015,2.73,1016,3.039,1017,2.73,1018,3.039,1019,5.74,1020,3.506,1021,2.214,1022,2.5,1023,2.5,1024,2.214,1025,3.506,1026,2.214,1027,1.724,1028,3.039,1029,3.506,1030,2.214,1031,1.919,1032,1.919,1033,1.919,1034,2.214,1035,2.214,1036,2.214,1037,3.506,1038,2.214,1039,1.919,1040,2.214,1041,2.214,1042,1.919,1043,1.919,1044,1.579,1045,2.214,1046,2.214,1047,2.214,1048,3.039,1049,3.506,1050,2.214,1051,2.214]],["title/classes/GithubTokenDTO.html",[15,0.155,206,2.023]],["body/classes/GithubTokenDTO.html",[3,0.146,4,0.131,5,0.116,9,0.23,10,0.016,14,0.28,15,0.267,16,0.009,17,0.009,22,0.387,25,0.78,26,0.492,29,1.151,147,1.749,151,0.819,152,0.853,161,1.847,166,1.749,170,1.749,172,3.16,180,1.21,206,2.497,231,2.387,258,3.259,267,3.176,302,1.958,305,3.797,344,3.676,369,2.084,395,3.176,400,2.292,410,0.95,413,1.304,415,1.749,417,3.604,422,1.661,423,3.795,424,3.223,433,4.283,532,1.661,689,3.156,744,2.084,745,4.379,746,3.185,748,4.948,749,2.637,750,2.975,751,3.354,753,4.161,755,4.455,756,4.284,757,3.715,758,2.231,759,2.231,760,2.231,761,2.231,762,2.231,763,3.185,764,2.231,765,2.231,766,3.185,767,3.784,768,2.084,769,2.231,770,2.231,771,2.231,772,3.185,773,3.185,774,3.259,775,3.185,776,3.185,777,3.185,778,2.231,779,2.231,780,2.231,781,2.231,782,2.231,783,2.231,784,1.958,785,2.231,786,2.231,787,2.231,788,2.084,789,2.084,790,2.231,1052,3.377,1053,3.377]],["title/injectables/JWTRefreshTokenStrategy.html",[0,1.016,214,2.581]],["body/injectables/JWTRefreshTokenStrategy.html",[0,1.531,2,1.929,3,0.195,4,0.175,5,0.155,7,3.221,9,0.342,10,0.016,11,0.659,13,2.793,14,0.195,15,0.179,16,0.011,17,0.011,22,0.519,23,1.867,26,0.858,28,1.378,32,2.344,34,1.494,80,5.252,81,2.99,95,2.344,111,1.435,150,1.943,151,0.858,152,0.819,153,1.657,156,4.277,159,3.227,172,1.929,196,1.943,197,4.585,214,3.89,246,2.02,247,3.922,276,3.525,296,2.793,297,2.118,337,5.103,343,3.922,344,2.344,346,3.922,347,4.585,353,3.89,418,3.227,691,3.227,980,4.667,992,5.397,1054,5.672,1055,3.922,1056,5.672,1057,5.096,1058,4.526,1059,5.888,1060,4.526,1061,3.922,1062,3.525,1063,4.526,1064,3.922,1065,3.922,1066,3.922,1067,4.526,1068,4.526,1069,4.526,1070,5.888]],["title/injectables/JwtStrategy.html",[0,1.016,215,2.581]],["body/injectables/JwtStrategy.html",[0,1.656,2,2.182,3,0.221,4,0.198,5,0.176,7,3.484,9,0.33,10,0.016,11,0.746,13,3.16,14,0.221,15,0.203,16,0.012,17,0.012,22,0.587,23,2.019,26,0.928,28,1.56,34,1.69,117,2.954,150,1.69,151,0.746,152,0.713,153,1.441,172,2.182,215,4.208,246,3.094,257,3.652,260,2.519,334,4.438,353,4.208,691,3.652,980,4.944,992,3.988,1056,4.438,1057,3.988,1061,4.438,1062,3.988,1064,4.438,1065,4.438,1066,4.438,1071,4.438,1072,6.37,1073,5.122,1074,6.37,1075,5.122,1076,5.122,1077,5.122,1078,5.122]],["title/classes/License.html",[15,0.155,500,2.023]],["body/classes/License.html",[3,0.14,4,0.126,5,0.112,9,0.223,10,0.016,14,0.237,15,0.129,16,0.009,17,0.009,22,0.373,25,1.733,26,1.093,29,1.197,71,0.751,111,2.026,126,1.073,128,1.073,151,0.802,152,1.082,153,2.21,196,1.073,317,3.863,410,0.915,413,1.269,500,2.851,598,3.691,604,2.148,605,3.654,608,3.982,612,1.599,617,2.196,618,3.72,619,1.599,620,2.307,621,1.599,622,3.691,625,3.1,903,4.287,1079,4.384,1080,2.319,1081,5.505,1082,5.505,1083,5.505,1084,4.771,1085,5.505,1086,5.505,1087,5.505,1088,3.925,1089,5.505,1090,4.287,1091,5.505,1092,3.252,1093,3.252,1094,3.252,1095,3.252,1096,3.252,1097,3.252,1098,3.252,1099,3.252,1100,3.252,1101,3.252,1102,3.252,1103,3.252,1104,3.252,1105,2.319,1106,3.252,1107,3.252,1108,3.252,1109,2.319,1110,2.818]],["title/modules/LicenseSchemaModule.html",[36,0.737,54,2.411]],["body/modules/LicenseSchemaModule.html",[3,0.244,4,0.219,5,0.194,9,0.345,10,0.015,11,0.825,14,0.244,15,0.224,16,0.013,17,0.013,36,1.278,38,1.868,44,2.028,54,4.177,69,2.115,70,3.329,71,1.307,104,4.407,128,1.868,151,0.825,500,2.931,727,3.095,729,3.095,1079,3.28,1109,4.827,1111,5.659,1112,5.659]],["title/controllers/LicensesController.html",[18,1.4,1113,2.786]],["body/controllers/LicensesController.html",[1,2.453,3,0.215,4,0.193,5,0.171,9,0.342,10,0.016,11,0.727,14,0.215,15,0.197,16,0.012,17,0.012,18,1.787,20,1.787,22,0.571,23,1.986,25,1.447,26,0.913,28,1.908,29,1.044,32,2.583,33,2.334,34,2.068,136,2.891,150,1.646,151,0.727,152,0.694,153,1.403,174,2.891,176,2.891,179,3.971,180,1.787,208,3.866,437,3.93,438,4.468,446,3.557,449,3.078,1113,4.468,1114,4.322,1115,4.322,1116,4.988,1117,4.988,1118,4.322,1119,4.988,1120,4.988,1121,5.43,1122,4.227,1123,4.322,1124,4.988,1125,4.988,1126,4.988,1127,4.988,1128,4.988,1129,4.988]],["title/modules/LicensesModule.html",[36,0.737,55,2.581]],["body/modules/LicensesModule.html",[3,0.224,4,0.201,5,0.178,9,0.347,10,0.015,11,0.757,14,0.224,15,0.206,16,0.012,17,0.012,20,2.303,36,1.317,38,1.716,39,2.027,40,2.692,41,2.692,42,2.432,43,3.615,44,1.862,54,4.71,55,5.164,64,3.329,65,2.692,66,2.556,69,2.402,90,2.843,104,4.047,1079,3.013,1113,4.977,1122,4.71,1123,4.504,1130,4.504,1131,4.504,1132,5.198,1133,5.198,1134,5.198]],["title/injectables/LicensesService.html",[0,1.016,1122,2.411]],["body/injectables/LicensesService.html",[0,1.516,1,2.193,2,1.9,3,0.192,4,0.173,5,0.2,9,0.356,10,0.016,11,0.65,14,0.192,15,0.177,16,0.011,17,0.011,22,0.511,23,1.848,26,0.947,28,1.776,29,0.99,34,1.925,71,1.03,117,3.126,126,1.472,150,1.925,151,0.85,152,0.811,153,1.64,174,2.585,176,2.585,179,2.585,180,1.598,196,1.472,239,2.087,246,2.602,249,3.994,260,2.867,282,3.864,283,2.585,290,2.867,438,4.158,446,3.179,449,2.751,500,2.309,774,2.585,876,3.472,1079,2.585,1084,3.864,1105,3.179,1115,3.864,1118,5.053,1121,3.864,1122,3.598,1135,3.864,1136,7.151,1137,4.459,1138,4.459,1139,5.831,1140,4.459,1141,4.459,1142,4.459,1143,5.831,1144,4.459,1145,4.459,1146,4.459,1147,4.459,1148,4.459,1149,4.459,1150,4.459,1151,3.864,1152,4.459,1153,4.459,1154,4.459,1155,4.459,1156,4.459,1157,4.459,1158,4.459,1159,4.459]],["title/classes/LoginDto.html",[15,0.155,147,2.023]],["body/classes/LoginDto.html",[3,0.14,4,0.126,5,0.112,9,0.223,10,0.016,14,0.276,15,0.264,16,0.009,17,0.009,22,0.373,25,1.084,26,0.684,29,1.153,147,2.43,151,0.802,152,0.889,161,1.779,166,1.684,170,1.684,172,3.198,180,1.165,206,1.684,231,2.461,258,1.885,267,3.448,302,1.885,305,4.025,344,3.448,369,2.006,395,2.43,400,1.753,410,0.915,413,1.269,415,2.43,417,3.619,422,1.599,423,3.764,424,3.194,433,4.235,532,1.599,689,3.35,744,2.006,745,4.484,746,3.1,748,4.997,749,2.566,750,2.895,751,3.011,753,3.943,755,4.399,756,4.222,757,3.637,758,2.148,759,2.148,760,2.148,761,2.148,762,2.148,763,3.1,764,2.148,765,2.148,766,3.1,767,4.108,768,2.006,769,2.148,770,2.148,771,2.148,772,3.1,773,3.1,774,3.493,775,3.637,776,3.637,777,3.637,778,2.148,779,2.148,780,2.148,781,2.148,782,2.148,783,2.148,784,1.885,785,2.148,786,2.148,787,2.148,788,2.895,789,2.006,790,2.148,1160,2.818,1161,3.252,1162,3.252,1163,3.252]],["title/classes/OTPSecret.html",[15,0.155,284,2.411]],["body/classes/OTPSecret.html",[3,0.195,4,0.175,5,0.155,7,2.47,9,0.28,10,0.015,14,0.282,15,0.179,16,0.011,17,0.011,22,0.517,25,1.599,26,1.009,29,1.055,71,1.043,94,3.531,95,3.386,111,2.376,126,1.491,128,1.491,152,1.043,196,1.491,230,4.162,267,3.386,284,4.034,285,3.22,380,4.69,410,1.271,413,1.59,598,2.891,602,2.951,612,2.891,617,3.06,618,3.531,619,2.221,620,2.891,621,2.221,622,2.891,899,4.579,1164,3.22,1165,6.538,1166,6.538,1167,4.516,1168,5.095,1169,4.516,1170,4.516,1171,4.516,1172,5.88,1173,3.22,1174,3.914]],["title/modules/OTPSecretSchemaModule.html",[36,0.737,56,2.265]],["body/modules/OTPSecretSchemaModule.html",[3,0.241,4,0.217,5,0.192,9,0.343,10,0.015,11,0.816,14,0.241,15,0.222,16,0.013,17,0.013,36,1.269,38,1.848,44,2.006,56,3.899,69,2.092,70,3.308,71,1.293,94,2.753,95,2.9,128,1.848,151,0.816,163,4.36,230,3.245,284,3.455,286,4.36,727,3.062,729,3.062,1173,4.797,1175,5.599]],["title/injectables/RefreshTokenGuard.html",[0,1.016,182,2.786]],["body/injectables/RefreshTokenGuard.html",[0,1.801,2,2.506,3,0.254,4,0.228,5,0.202,7,3.788,8,6.002,9,0.33,10,0.015,11,0.857,12,5.096,13,3.629,14,0.254,15,0.233,16,0.013,17,0.013,182,4.939,347,5.393,1176,5.096]],["title/classes/Repository.html",[15,0.155,502,1.4]],["body/classes/Repository.html",[3,0.143,4,0.128,5,0.114,9,0.29,10,0.016,14,0.24,15,0.131,16,0.009,17,0.009,22,0.38,25,1.724,26,1.088,29,1.157,71,0.766,88,1.553,111,2.488,119,2.192,126,1.095,128,1.572,152,1.063,196,1.095,231,2.51,279,2.048,317,3.168,400,1.24,410,0.934,413,1.288,502,2.308,597,3.436,598,3.474,602,2.029,608,4.429,617,2.228,618,3.704,619,1.632,620,2.341,621,1.632,622,3.671,717,3.754,816,2.876,891,4.17,899,3.708,900,4.338,903,2.584,953,4.366,954,2.366,985,2.192,1177,2.366,1178,5.568,1179,5.568,1180,5.568,1181,4.825,1182,5.568,1183,5.568,1184,5.568,1185,5.568,1186,5.568,1187,3.319,1188,3.319,1189,3.319,1190,4.761,1191,3.319,1192,3.319,1193,3.319,1194,3.319,1195,3.319,1196,3.319,1197,3.319,1198,3.319,1199,3.319,1200,2.584,1201,2.366,1202,2.366,1203,2.876]],["title/controllers/RepositoryController.html",[18,1.4,1204,2.786]],["body/controllers/RepositoryController.html",[1,2.3,3,0.14,4,0.125,5,0.111,9,0.326,10,0.016,11,0.472,14,0.14,15,0.128,16,0.009,17,0.009,18,1.16,20,1.16,22,0.371,23,1.482,25,1.535,26,0.969,28,2.025,29,1.16,32,1.676,34,2.194,39,1.824,117,3.296,136,1.876,150,2.194,151,0.969,152,0.925,153,1.87,156,4.585,159,5.426,174,1.876,175,1.997,176,1.876,179,3.973,180,1.16,208,4.102,260,3.269,290,1.592,405,2.521,449,2.885,542,1.592,929,2.521,936,4.758,1204,3.335,1205,2.805,1206,2.521,1207,4.758,1208,5.491,1209,4.677,1210,4.677,1211,4.053,1212,4.053,1213,3.237,1214,5.465,1215,3.237,1216,3.237,1217,5.177,1218,3.237,1219,4.677,1220,4.677,1221,3.237,1222,3.237,1223,3.237,1224,3.237,1225,4.758,1226,3.237,1227,6.648,1228,3.237,1229,3.237,1230,3.237,1231,3.973,1232,3.237,1233,3.237,1234,4.677,1235,3.237,1236,4.392,1237,3.237,1238,3.388,1239,2.805,1240,3.237,1241,3.237,1242,3.237,1243,3.237,1244,3.237,1245,4.677,1246,4.677,1247,3.237,1248,4.677,1249,3.237,1250,3.237,1251,3.237,1252,3.237,1253,3.237,1254,3.237,1255,3.237,1256,3.237,1257,3.237,1258,3.237,1259,3.237]],["title/modules/RepositoryModule.html",[36,0.737,57,2.581]],["body/modules/RepositoryModule.html",[3,0.175,4,0.157,5,0.139,9,0.368,10,0.016,11,0.591,14,0.236,15,0.16,16,0.01,17,0.01,20,1.962,36,1.17,38,1.807,39,1.581,40,2.1,41,2.1,42,1.898,43,3.21,44,2.221,49,4.406,50,2.218,52,4.406,53,4.139,57,5.266,58,4.139,59,3.698,64,2.835,65,2.1,66,1.994,69,2.316,85,2.35,86,3.514,88,1.898,89,2.218,90,3.79,92,2.502,97,2.891,99,2.333,225,4.384,226,1.994,229,1.994,400,1.515,465,2.333,502,1.962,726,4.718,892,2.35,953,2.35,1204,4.419,1238,4.769,1239,3.514,1260,3.514,1261,3.514,1262,3.514,1263,3.514,1264,4.055,1265,4.055,1266,4.055,1267,3.514,1268,4.055,1269,3.514]],["title/modules/RepositorySchemaModule.html",[36,0.737,58,2.265]],["body/modules/RepositorySchemaModule.html",[3,0.243,4,0.218,5,0.193,9,0.344,10,0.015,11,0.82,14,0.243,15,0.223,16,0.013,17,0.013,36,1.274,38,1.858,44,2.017,58,3.912,69,2.104,70,3.318,71,1.3,97,4.014,128,1.858,151,0.82,502,2.017,727,3.079,728,4.383,729,3.079,953,3.263,1202,4.812,1270,5.629]],["title/injectables/RepositoryService.html",[0,1.016,1238,2.411]],["body/injectables/RepositoryService.html",[0,0.603,2,0.573,3,0.058,4,0.052,5,0.046,9,0.279,10,0.016,11,0.196,14,0.058,15,0.053,16,0.004,17,0.006,22,0.266,23,0.735,26,0.853,28,1.735,29,1.097,31,0.888,33,1.431,34,1.754,39,0.904,71,0.311,85,0.779,87,1.047,88,0.629,89,0.735,91,0.888,96,1.047,99,0.573,111,1.61,117,2.896,126,0.444,150,1.821,151,0.804,152,0.768,153,1.552,196,2.47,226,0.661,231,2.013,239,2.806,246,1.035,248,2.18,249,3.475,257,4.365,258,2.108,260,2.364,273,0.959,275,1.654,276,1.047,278,0.83,279,0.83,281,1.165,283,0.779,287,0.959,290,3.312,296,3.405,297,3.01,310,4.297,316,1.165,317,2.801,324,3.176,355,1.047,356,1.165,361,1.654,392,2.244,400,1.359,405,1.806,414,0.83,416,0.462,445,0.735,447,1.788,465,0.573,476,0.959,477,3.199,491,2.532,502,2.271,511,1.047,514,2.18,515,0.888,523,2.593,524,0.959,530,2.381,532,2.714,542,1.504,544,1.165,546,1.165,547,1.165,576,1.806,597,2.966,602,1.303,608,2.02,617,0.629,625,4.044,653,1.887,659,1.532,689,2.377,711,0.888,713,1.165,715,1.165,723,0.959,728,1.047,751,1.268,788,0.83,809,1.047,812,1.165,843,2.403,863,2.01,891,2.378,902,0.888,928,1.654,930,2.787,954,0.959,985,0.888,986,1.165,987,1.165,988,1.165,998,3.151,1009,2.593,1015,1.806,1016,2.01,1017,1.806,1018,2.01,1022,2.593,1023,3.935,1027,1.806,1028,2.01,1033,1.165,1039,2.01,1042,1.165,1043,1.165,1044,0.959,1048,3.151,1088,0.959,1181,3.556,1201,0.959,1206,3.956,1207,2.65,1211,2.01,1212,2.01,1214,4.668,1217,2.832,1225,2.65,1238,1.431,1271,1.165,1272,2.319,1273,3.058,1274,3.637,1275,2.319,1276,2.319,1277,2.319,1278,1.806,1279,3.637,1280,3.058,1281,3.058,1282,3.058,1283,3.058,1284,1.345,1285,2.319,1286,3.058,1287,1.345,1288,2.319,1289,1.345,1290,1.345,1291,5.08,1292,3.637,1293,1.345,1294,1.345,1295,2.319,1296,1.345,1297,2.319,1298,1.345,1299,2.319,1300,1.345,1301,2.319,1302,1.345,1303,2.319,1304,1.345,1305,3.637,1306,2.319,1307,1.345,1308,3.058,1309,1.345,1310,1.047,1311,1.345,1312,1.047,1313,1.345,1314,1.345,1315,1.345,1316,2.01,1317,2.01,1318,1.345,1319,1.345,1320,1.345,1321,2.319,1322,1.345,1323,1.345,1324,1.345,1325,2.319,1326,1.345,1327,1.345,1328,1.345,1329,1.345,1330,2.01,1331,1.345,1332,1.345,1333,1.345,1334,3.637,1335,3.637,1336,1.345,1337,1.345,1338,1.345,1339,1.345,1340,1.345,1341,1.345,1342,1.345,1343,1.345,1344,1.345,1345,1.345,1346,1.345,1347,2.319,1348,1.345,1349,1.345,1350,1.345,1351,1.345,1352,1.345,1353,1.345,1354,1.165,1355,3.058,1356,2.319,1357,2.319,1358,3.637,1359,4.487,1360,2.01,1361,2.319,1362,1.345,1363,1.345,1364,1.345,1365,1.165,1366,1.345,1367,2.319,1368,1.345,1369,2.319,1370,3.637,1371,2.319,1372,3.637,1373,2.319,1374,2.319,1375,1.345,1376,1.345,1377,1.345,1378,2.319,1379,1.047,1380,2.319,1381,1.345,1382,1.345,1383,1.345,1384,1.345,1385,1.345,1386,1.345,1387,3.058,1388,1.345,1389,2.319,1390,1.345,1391,1.345,1392,1.345,1393,1.345,1394,1.345,1395,0.888,1396,2.319,1397,1.345,1398,1.345,1399,2.319,1400,2.319,1401,2.319,1402,2.319,1403,1.345,1404,2.01,1405,2.319,1406,2.319,1407,2.319,1408,2.319,1409,2.319,1410,3.058,1411,2.319,1412,1.345,1413,1.345,1414,1.345,1415,1.345,1416,1.345,1417,1.345,1418,1.345,1419,1.345,1420,3.058,1421,1.345,1422,1.165,1423,1.345,1424,1.345,1425,1.345,1426,1.345,1427,1.345,1428,1.345,1429,1.345,1430,1.165,1431,1.165,1432,1.345,1433,1.345,1434,1.345,1435,1.345,1436,1.345,1437,1.345,1438,1.345,1439,1.345,1440,2.319,1441,1.345,1442,1.345,1443,1.345,1444,1.345,1445,1.345,1446,1.345,1447,1.345]],["title/classes/SelectRepoUrlSingleDTO.html",[15,0.155,1231,2.581]],["body/classes/SelectRepoUrlSingleDTO.html",[3,0.206,4,0.185,5,0.164,9,0.29,10,0.015,14,0.263,15,0.266,16,0.012,17,0.012,22,0.547,25,1.102,26,0.695,29,1.138,111,1.513,119,4.671,152,0.984,180,1.71,353,4.025,410,1.343,413,1.648,415,2.472,417,3.301,420,4.745,421,5.227,422,2.347,423,3.476,424,2.719,502,2.405,542,2.996,900,5.042,1200,3.717,1201,5.209,1231,4.025,1236,3.153,1278,3.717,1379,3.717,1448,3.717,1449,5.816,1450,6.128,1451,4.773,1452,4.773,1453,6.128,1454,4.136,1455,4.136,1456,4.136,1457,5.28,1458,4.136,1459,4.345,1460,4.136]],["title/classes/SelectRepoUrlsDto.html",[15,0.155,1236,2.581]],["body/classes/SelectRepoUrlsDto.html",[3,0.205,4,0.184,5,0.163,9,0.289,10,0.015,14,0.262,15,0.265,16,0.012,17,0.012,22,0.544,25,1.097,26,0.692,29,1.112,111,1.926,119,4.425,152,0.982,180,1.702,353,4.014,410,1.337,413,1.643,415,2.461,417,3.294,420,4.731,421,5.215,422,2.336,423,3.469,424,2.711,502,2.4,542,2.988,612,2.336,900,5.034,1200,3.7,1201,5.202,1231,3.139,1236,4.014,1278,5.215,1379,3.7,1448,3.7,1449,4.117,1450,6.117,1453,6.322,1454,5.265,1455,4.117,1456,4.117,1457,5.265,1458,4.117,1459,4.332,1460,4.117,1461,4.751,1462,4.751]],["title/classes/SignupDto.html",[15,0.155,166,2.023]],["body/classes/SignupDto.html",[3,0.132,4,0.118,5,0.105,9,0.214,10,0.016,14,0.269,15,0.258,16,0.009,17,0.009,22,0.35,25,1.227,26,0.774,29,1.149,147,1.584,151,0.95,152,0.907,161,1.673,166,2.324,170,1.584,172,3.162,180,1.096,206,1.584,231,2.464,258,1.772,267,3.375,302,3.081,305,4.019,344,3.375,369,1.887,395,2.324,400,1.677,410,0.86,413,1.213,415,2.752,417,3.614,422,1.504,423,3.711,424,3.145,433,4.156,532,2.206,689,3.299,744,1.887,745,4.421,746,2.964,748,4.982,749,2.454,750,2.768,751,2.907,753,3.847,755,4.306,756,4.119,757,3.511,758,2.964,759,2.02,760,2.02,761,2.964,762,2.964,763,3.868,764,2.964,765,2.964,766,2.964,767,4.021,768,2.768,769,2.964,770,2.964,771,2.964,772,2.964,773,2.964,774,3.614,775,3.511,776,3.511,777,3.511,778,2.964,779,2.964,780,2.964,781,2.964,782,2.964,783,2.964,784,2.601,785,2.964,786,2.964,787,2.964,788,1.887,789,1.887,790,2.02,1160,2.65,1463,3.058,1464,3.058,1465,3.058,1466,3.058,1467,3.058,1468,3.058]],["title/classes/User.html",[15,0.155,231,1.343]],["body/classes/User.html",[3,0.169,4,0.152,5,0.135,9,0.255,10,0.016,14,0.282,15,0.155,16,0.01,17,0.01,22,0.45,25,1.672,26,1.055,29,1.123,71,0.907,111,2.418,126,1.296,128,1.296,152,1.025,196,1.296,229,3.623,231,2.096,232,2.594,267,3.157,278,2.422,302,3.533,305,3.334,317,3.716,321,5.737,322,4.17,400,2.001,410,1.104,413,1.448,597,3.761,598,3.56,602,3.14,608,4.326,612,1.931,617,2.506,618,3.623,619,1.931,620,2.634,621,1.931,622,3.56,1168,4.641,1469,2.594,1470,6.096,1471,6.096,1472,3.926,1473,3.926,1474,3.926,1475,3.926,1476,3.926,1477,6.096,1478,3.926,1479,3.926,1480,3.926,1481,3.402]],["title/modules/UserSchemaModule.html",[36,0.737,59,2.023]],["body/modules/UserSchemaModule.html",[3,0.244,4,0.219,5,0.194,9,0.345,10,0.015,11,0.825,14,0.244,15,0.224,16,0.013,17,0.013,36,1.278,38,1.868,44,2.028,59,3.506,69,2.115,70,3.329,71,1.307,92,3.492,128,1.868,151,0.825,229,2.783,231,1.946,232,4.473,727,3.095,729,3.095,1482,5.659,1483,5.659]],["title/classes/VerifyEmailDto.html",[15,0.155,170,2.023]],["body/classes/VerifyEmailDto.html",[3,0.14,4,0.126,5,0.112,9,0.223,10,0.016,14,0.276,15,0.264,16,0.009,17,0.009,22,0.373,25,1.084,26,0.684,29,1.153,147,1.684,151,0.802,152,0.955,161,1.779,166,1.684,170,2.43,172,3.245,180,1.165,206,1.684,231,2.416,258,1.885,267,3.448,302,1.885,305,3.754,344,3.764,369,2.006,395,2.43,400,1.753,410,0.915,413,1.269,415,2.43,417,3.619,422,1.599,423,3.764,424,3.194,433,4.235,532,1.599,689,3.116,744,2.006,745,4.417,746,3.637,747,2.818,748,4.958,749,3.011,750,3.397,751,3.296,752,2.818,753,4.235,755,4.399,756,4.222,757,3.637,758,2.148,759,2.148,760,2.148,761,2.148,762,2.148,763,3.1,764,2.148,765,2.148,766,3.1,767,3.719,768,2.006,769,2.148,770,2.148,771,2.148,772,3.1,773,3.1,774,3.191,775,3.1,776,3.1,777,3.1,778,2.148,779,2.148,780,2.148,781,2.148,782,2.148,783,2.148,784,1.885,785,2.148,786,2.148,787,2.148,788,2.006,789,2.895,790,3.1,1484,3.252,1485,3.252,1486,3.252]],["title/controllers/VulnerabilitiesController.html",[18,1.4,1487,2.786]],["body/controllers/VulnerabilitiesController.html",[1,2.347,3,0.206,4,0.185,5,0.164,9,0.348,10,0.016,11,0.695,14,0.206,15,0.189,16,0.012,17,0.012,18,1.71,20,1.71,22,0.547,23,1.932,25,1.407,26,0.888,28,1.856,29,1.023,33,2.234,34,2.011,136,2.766,150,2.011,151,0.888,152,0.848,153,1.714,174,2.766,175,2.945,176,2.766,179,3.89,180,1.71,208,3.759,239,2.234,246,2.13,425,4.935,437,3.333,440,4.136,446,3.403,449,2.945,450,3.717,453,4.136,454,4.136,1487,4.345,1488,4.136,1489,3.403,1490,5.28,1491,4.136,1492,4.773,1493,4.136,1494,4.773,1495,4.773,1496,4.745,1497,3.89,1498,3.717,1499,4.773,1500,4.773,1501,4.773,1502,4.773,1503,4.773,1504,4.773]],["title/modules/VulnerabilitiesModule.html",[36,0.737,60,2.581]],["body/modules/VulnerabilitiesModule.html",[3,0.197,4,0.177,5,0.157,9,0.367,10,0.016,11,0.667,14,0.197,15,0.181,16,0.011,17,0.011,20,2.125,36,1.242,38,1.51,39,1.785,40,2.37,41,2.37,42,2.141,43,3.407,44,1.64,50,4.041,60,5.2,61,4.558,64,3.071,65,2.37,66,2.25,69,2.216,90,3.243,99,1.95,101,3.563,102,2.502,108,2.502,151,0.864,225,3.917,226,2.25,416,1.573,447,3.633,465,1.95,468,5.139,1312,3.563,1487,4.691,1489,3.263,1497,4.282,1498,3.563,1505,3.965,1506,3.965,1507,4.575,1508,4.575,1509,4.575,1510,4.228,1511,4.575,1512,2.502]],["title/injectables/VulnerabilitiesService.html",[0,1.016,1497,2.265]],["body/injectables/VulnerabilitiesService.html",[0,0.62,2,0.592,3,0.135,4,0.209,5,0.048,9,0.275,10,0.016,11,0.203,14,0.06,15,0.055,16,0.005,17,0.005,22,0.159,23,0.756,26,0.863,28,1.703,29,0.975,33,2.138,34,2.001,71,0.321,78,3.486,79,0.918,102,0.76,108,0.76,111,1.709,117,2.802,126,0.459,150,1.904,151,0.863,152,0.803,153,1.623,196,2.112,226,0.683,239,2.523,246,1.065,249,2.834,260,1.542,283,0.806,290,3.042,297,1.74,324,2.766,358,1.383,384,1.472,392,2.583,397,2.034,402,2.652,413,0.645,414,3.327,416,1.439,425,1.576,428,2.896,437,1.305,445,2.29,447,2.404,476,0.991,477,3.258,481,3.223,491,3.451,499,1.204,512,1.204,513,0.918,514,2.235,515,0.918,516,1.817,518,0.991,523,2.985,524,2.985,526,3.223,527,2.068,528,2.068,530,1.858,532,2.537,542,1.829,573,1.204,576,1.858,602,0.592,612,2.059,644,2.896,653,0.858,659,0.918,692,2.441,693,3.26,751,0.76,767,0.858,784,0.806,843,2.071,915,2.441,928,0.991,1009,1.701,1017,1.082,1022,1.701,1023,3.679,1027,1.082,1044,1.701,1088,1.701,1090,1.858,1312,1.082,1316,1.204,1330,1.204,1395,0.918,1422,2.068,1430,2.717,1431,2.717,1459,0.991,1489,2.985,1490,2.068,1491,2.068,1493,2.068,1496,4.614,1497,1.383,1512,1.305,1513,1.204,1514,2.386,1515,2.386,1516,2.386,1517,2.386,1518,2.386,1519,2.386,1520,2.386,1521,2.386,1522,3.135,1523,3.135,1524,3.135,1525,2.386,1526,1.39,1527,2.386,1528,1.39,1529,1.39,1530,5.16,1531,4.186,1532,4.186,1533,1.39,1534,2.386,1535,5.392,1536,1.39,1537,2.386,1538,1.39,1539,2.386,1540,1.39,1541,1.39,1542,3.223,1543,3.223,1544,3.135,1545,3.223,1546,2.068,1547,2.068,1548,2.068,1549,2.068,1550,2.386,1551,1.39,1552,2.386,1553,4.569,1554,4.186,1555,1.39,1556,2.386,1557,1.39,1558,2.386,1559,4.186,1560,1.39,1561,4.186,1562,2.386,1563,2.499,1564,0.991,1565,1.39,1566,0.918,1567,0.991,1568,1.39,1569,1.39,1570,1.39,1571,2.386,1572,1.39,1573,1.39,1574,2.386,1575,1.39,1576,1.39,1577,1.39,1578,1.39,1579,2.386,1580,1.39,1581,1.39,1582,3.628,1583,1.39,1584,1.39,1585,1.39,1586,1.39,1587,1.39,1588,1.39,1589,1.39,1590,1.39,1591,1.39,1592,1.39,1593,1.39,1594,1.39,1595,1.39,1596,1.39,1597,1.39,1598,1.39,1599,1.39,1600,1.39,1601,1.39,1602,1.39,1603,1.39,1604,3.719,1605,2.386,1606,1.858,1607,2.386,1608,1.39,1609,2.068,1610,2.386,1611,2.068,1612,1.39,1613,2.068,1614,1.39,1615,1.39,1616,1.39,1617,1.39,1618,1.39,1619,1.39,1620,1.39,1621,1.39,1622,1.39,1623,1.39,1624,1.39,1625,2.386,1626,2.386,1627,1.39,1628,3.135,1629,1.39,1630,1.39,1631,1.39,1632,1.39,1633,1.39,1634,1.39,1635,2.386,1636,2.386,1637,1.39,1638,1.39,1639,1.39,1640,1.39,1641,1.39,1642,1.39,1643,1.39,1644,2.386,1645,2.386,1646,1.39,1647,1.39,1648,1.39,1649,1.39,1650,1.39,1651,1.39,1652,2.068,1653,1.39,1654,1.39,1655,1.39,1656,2.386,1657,1.39,1658,2.386,1659,2.386,1660,1.39,1661,1.39,1662,1.39,1663,2.386,1664,3.719,1665,1.39,1666,3.223,1667,1.39,1668,3.223,1669,3.719,1670,2.386,1671,2.386,1672,2.386,1673,2.386,1674,2.386,1675,1.39,1676,1.39,1677,2.386,1678,1.39,1679,1.39,1680,1.39,1681,2.386,1682,1.39,1683,1.39,1684,1.39,1685,1.39,1686,1.39,1687,1.39,1688,5.16,1689,1.39,1690,1.39,1691,1.39,1692,1.39,1693,1.39,1694,1.39,1695,1.39,1696,1.39,1697,1.39,1698,1.204,1699,1.39,1700,1.39,1701,1.39,1702,1.39,1703,2.386,1704,2.386,1705,1.39,1706,2.386,1707,1.39,1708,1.39,1709,1.39,1710,1.39,1711,1.39,1712,1.39,1713,1.39,1714,1.39,1715,3.135,1716,1.39,1717,3.135,1718,1.39,1719,1.39,1720,1.39,1721,1.39]],["title/classes/Vulnerability.html",[15,0.155,1563,2.137]],["body/classes/Vulnerability.html",[3,0.112,4,0.225,5,0.089,9,0.189,10,0.016,14,0.207,15,0.102,16,0.008,17,0.008,22,0.296,25,1.675,26,1.057,29,1.248,71,0.598,111,1.524,126,0.854,128,1.307,152,1.09,153,2.106,196,0.854,317,3.811,410,0.728,413,1.071,416,1.361,445,2.946,491,3.323,542,2.364,598,3.567,604,1.709,605,3.083,612,2.649,617,1.853,618,3.601,619,1.272,620,1.947,621,1.272,622,3.567,625,3.558,689,1.211,716,3.429,717,2.443,722,1.845,1088,3.429,1090,3.744,1496,3.744,1512,4.005,1542,4.167,1543,4.167,1545,4.167,1546,2.242,1547,2.242,1548,2.242,1549,2.242,1563,2.63,1564,1.845,1606,3.744,1609,4.167,1611,4.167,1613,4.167,1652,4.167,1666,4.668,1668,4.668,1698,4.167,1722,1.845,1723,2.587,1724,2.587,1725,2.587,1726,2.587,1727,2.587,1728,2.587,1729,2.587,1730,2.587,1731,2.587,1732,2.587,1733,2.587,1734,2.587,1735,2.587,1736,2.587,1737,5.386,1738,5.386,1739,5.386,1740,5.386,1741,5.386,1742,5.386,1743,5.386,1744,5.386,1745,5.386,1746,5.386,1747,1.845,1748,2.242,1749,2.587]],["title/classes/VulnerabilityConsumer.html",[15,0.155,1510,2.786]],["body/classes/VulnerabilityConsumer.html",[3,0.237,4,0.125,5,0.111,7,1.773,9,0.287,10,0.016,11,0.472,14,0.14,15,0.128,16,0.009,17,0.009,22,0.371,23,1.484,25,1.474,26,1.023,28,2.026,29,0.973,32,1.679,33,2.817,102,1.773,117,2.342,150,2.263,151,0.999,152,1.011,153,1.929,239,2.572,246,1.447,290,2.302,297,2.191,358,1.879,384,2,397,2.561,410,0.912,413,1.266,513,2.142,602,1.995,604,3.093,644,4.686,645,4.057,646,4.057,647,4.057,648,4.057,649,4.057,650,4.057,653,2,655,4.057,656,6.825,657,4.057,659,4.217,660,4.057,661,4.057,663,4.057,664,4.057,666,4.057,667,4.057,669,4.057,670,4.057,672,4.762,673,4.057,675,2.809,676,2.809,677,2.809,678,4.057,680,2.809,681,2.809,682,4.057,683,4.057,684,2.809,685,2.809,686,2.809,687,2.524,688,2.809,689,1.517,690,2.809,691,2.312,692,2.524,693,4.279,694,4.762,695,5.215,696,2.809,697,2.809,698,4.057,699,2.809,700,4.762,701,2.809,702,2.809,703,2.809,704,2.809,705,2.809,706,2.809,707,2.809,708,4.057,710,4.762,1009,2.312,1022,2.312,1023,2.312,1044,2.312,1497,3.855,1498,2.524,1510,3.338,1563,1.773,1582,2.809,1750,2.809,1751,3.242,1752,4.682,1753,4.682,1754,3.242,1755,3.242,1756,3.242,1757,3.242,1758,3.242,1759,3.242,1760,3.242,1761,3.242,1762,3.242,1763,3.242,1764,3.242,1765,3.242,1766,3.242,1767,3.242,1768,3.242]],["title/modules/VulnerabilitySchemaModule.html",[36,0.737,61,2.411]],["body/modules/VulnerabilitySchemaModule.html",[3,0.235,4,0.21,5,0.187,9,0.353,10,0.016,11,0.793,14,0.235,15,0.215,16,0.013,17,0.013,36,1.248,38,1.795,44,1.949,61,4.079,69,2.033,70,3.251,71,1.256,108,2.975,128,2.182,151,0.963,518,3.879,727,2.975,729,2.975,1512,2.975,1563,3.615,1566,3.594,1747,4.714,1769,5.44,1770,4.714,1771,5.44,1772,5.44]],["title/classes/VulnerabilityVersion.html",[15,0.155,1566,2.581]],["body/classes/VulnerabilityVersion.html",[3,0.175,4,0.257,5,0.139,9,0.261,10,0.016,14,0.267,15,0.16,16,0.01,17,0.01,22,0.465,25,1.6,26,1.01,29,1.011,71,0.936,108,3.906,111,2.314,126,1.338,128,1.807,152,1.076,196,1.338,317,3.263,410,1.141,413,1.48,416,1.882,445,3.79,516,4.017,598,3.408,602,2.828,612,3.048,617,2.562,618,3.512,619,1.994,620,2.692,621,1.994,622,3.408,689,3.105,716,5.364,717,4.406,722,2.891,735,2.679,736,3.514,915,4.826,1512,3.906,1563,3.992,1566,4.094,1567,2.891,1770,2.891,1773,4.055,1774,4.055,1775,4.055,1776,4.055,1777,3.514,1778,6.197]],["title/coverage.html",[1779,4.626]],["body/coverage.html",[0,1.848,1,1.287,5,0.09,6,2.267,10,0.015,15,0.303,16,0.008,17,0.008,18,2.363,19,1.866,21,2.267,30,1.614,42,1.224,62,1.517,63,1.431,68,1.729,85,2.314,88,2.266,94,2.381,99,2.62,108,2.648,130,2.267,135,2.267,147,1.355,152,0.975,161,1.431,166,1.355,170,1.355,182,1.866,206,1.355,214,1.729,215,1.729,229,2.381,230,2.806,231,0.9,232,1.729,237,2.267,278,1.614,284,1.614,285,1.866,297,1.224,352,4.218,409,1.729,411,2.267,412,2.267,416,0.9,425,1.729,426,2.267,427,2.267,435,1.866,436,2.267,447,1.287,465,2.879,466,1.866,469,2.267,485,1.866,500,1.355,502,1.941,516,1.517,517,1.866,532,4.007,596,3.452,641,1.866,643,2.267,711,1.729,712,3.452,723,1.866,724,1.866,732,1.866,735,4.062,741,1.866,742,2.267,744,3.599,820,2.267,832,1.866,865,2.267,866,2.267,891,1.517,892,2.806,893,3.452,902,1.729,905,1.866,907,1.866,908,3.579,909,2.267,930,1.517,953,2.806,956,2.267,982,2.037,983,2.037,985,1.729,1054,2.267,1055,2.267,1071,2.267,1079,2.806,1080,3.452,1105,1.866,1109,1.866,1113,1.866,1114,2.267,1122,1.614,1135,2.267,1164,3.452,1173,1.866,1176,2.267,1177,3.452,1202,1.866,1204,1.866,1205,2.267,1231,1.729,1236,1.729,1238,1.614,1271,2.267,1310,2.037,1448,3.109,1469,3.198,1487,1.866,1488,2.267,1497,1.517,1510,1.866,1512,3.363,1513,2.267,1563,1.431,1564,1.866,1566,1.729,1567,1.866,1722,3.452,1747,1.866,1750,2.267,1770,1.866,1779,2.267,1780,2.267,1781,2.616,1782,2.616,1783,6.594,1784,6.149,1785,6.893,1786,7.783,1787,5.974,1788,3.993,1789,4.841,1790,2.616,1791,2.616,1792,2.616,1793,2.267,1794,3.993,1795,2.616,1796,6.594,1797,3.993,1798,3.993,1799,3.993,1800,3.46,1801,2.267,1802,2.616,1803,2.616]],["title/dependencies.html",[39,1.833,1395,2.154]],["body/dependencies.html",[10,0.016,11,0.744,13,3.152,15,0.252,16,0.012,17,0.012,39,1.993,71,1.18,79,3.375,81,3.375,102,2.794,126,1.686,137,3.979,180,1.831,226,2.512,277,4.428,418,3.643,422,2.512,513,3.375,515,3.375,798,3.979,799,3.979,980,3.643,981,4.428,1062,4.953,1151,4.428,1804,5.109,1805,6.36,1806,5.109,1807,6.926,1808,5.109,1809,5.109,1810,5.109,1811,5.109,1812,5.109,1813,5.109,1814,5.109,1815,5.109,1816,5.109,1817,5.109,1818,5.109,1819,5.109,1820,5.109,1821,5.109,1822,5.109,1823,5.109,1824,5.109,1825,5.109,1826,5.109,1827,5.109,1828,5.109,1829,5.109,1830,4.428,1831,5.109,1832,5.109]],["title/miscellaneous/enumerations.html",[1833,1.783,1834,4.073]],["body/miscellaneous/enumerations.html",[10,0.015,16,0.013,17,0.013,22,0.695,229,2.984,321,5.493,322,5.493,400,2.636,653,4.352,1469,4.009,1833,3.319,1834,5.258,1835,4.725]],["title/miscellaneous/functions.html",[1833,1.783,1836,4.073]],["body/miscellaneous/functions.html",[10,0.015,16,0.013,17,0.013,22,0.635,28,2.036,42,3.359,150,2.369,151,1.046,152,0.999,153,2.019,659,4.416,895,3.95,908,3.66,923,4.314,982,5.205,983,5.205,1031,4.801,1032,4.801,1214,5.205,1217,4.314,1310,5.205,1360,4.801,1793,4.801,1800,4.801,1801,4.801,1833,3.03,1836,4.801,1837,5.54,1838,6.684,1839,5.54]],["title/index.html",[22,0.373,1840,2.825,1841,2.825]],["body/index.html",[4,0.107,5,0.216,10,0.012,16,0.008,17,0.008,29,0.422,39,2.176,66,1.363,89,3.886,95,1.435,113,2.158,114,1.831,119,3.686,134,4.346,139,2.158,151,0.404,153,0.78,156,2.573,231,0.953,239,2.611,297,1.297,328,2.402,354,3.576,357,2.402,358,1.607,361,1.976,395,1.435,397,1.516,400,2.69,416,1.434,417,2.744,434,1.976,437,2.743,500,2.16,501,2.158,502,1.495,523,3.978,542,2.051,623,2.402,626,2.402,687,2.158,689,1.297,749,1.516,750,1.71,809,2.158,810,2.402,835,4.346,843,1.831,861,2.158,876,2.158,887,5.951,904,1.976,1004,3.614,1015,2.158,1057,3.248,1206,3.248,1267,4.346,1269,2.402,1317,4.835,1354,4.346,1365,2.402,1395,1.831,1404,2.402,1459,1.976,1489,2.974,1563,1.516,1606,2.158,1780,5.185,1787,2.402,1830,2.402,1840,2.402,1841,2.402,1842,2.772,1843,2.772,1844,2.772,1845,2.772,1846,2.772,1847,5.579,1848,2.772,1849,2.772,1850,4.171,1851,2.772,1852,2.772,1853,2.772,1854,4.171,1855,2.772,1856,2.772,1857,6.287,1858,2.772,1859,2.772,1860,2.772,1861,2.772,1862,2.772,1863,2.772,1864,2.772,1865,6.287,1866,4.171,1867,2.772,1868,2.772,1869,4.171,1870,2.772,1871,2.772,1872,4.171,1873,2.772,1874,2.772,1875,2.772,1876,2.772,1877,5.579,1878,2.772,1879,2.772,1880,2.772,1881,2.772,1882,4.171,1883,2.772,1884,2.772,1885,4.171,1886,2.772,1887,2.772,1888,2.772,1889,5.579,1890,5.579,1891,2.772,1892,4.171,1893,4.171,1894,2.772,1895,2.772,1896,2.772,1897,4.171,1898,2.772,1899,5.579,1900,2.772,1901,2.772,1902,2.772,1903,2.772,1904,4.171,1905,5.983,1906,2.772,1907,4.171,1908,5.015,1909,5.015,1910,2.772,1911,2.772,1912,2.772,1913,2.772,1914,4.171,1915,5.015,1916,2.772,1917,5.015,1918,4.171,1919,2.772,1920,2.772,1921,2.772,1922,4.171,1923,2.772,1924,2.772,1925,4.171,1926,2.772,1927,2.772,1928,2.772,1929,2.772,1930,2.772,1931,2.772,1932,2.772,1933,2.772,1934,2.772,1935,2.772,1936,2.772,1937,2.772,1938,2.772,1939,2.772,1940,2.772,1941,2.772,1942,2.772,1943,2.772,1944,2.772,1945,2.772,1946,2.772,1947,2.772,1948,2.772,1949,4.171,1950,4.171,1951,5.579,1952,5.579,1953,2.772,1954,2.772,1955,2.772,1956,4.171,1957,4.171,1958,2.772,1959,2.772,1960,2.772,1961,2.772,1962,2.772,1963,5.579,1964,2.772,1965,2.772,1966,2.772,1967,2.772,1968,7.471,1969,2.772,1970,2.772,1971,2.772,1972,4.171,1973,4.171,1974,2.772,1975,2.772,1976,2.772,1977,4.171,1978,2.772,1979,2.772,1980,2.772,1981,2.772,1982,2.772,1983,4.171,1984,2.772,1985,2.772,1986,2.772,1987,2.772,1988,2.772,1989,2.772,1990,5.015,1991,4.171,1992,5.015,1993,2.772,1994,2.772,1995,2.772,1996,2.772,1997,2.772,1998,2.772,1999,2.772,2000,2.772,2001,2.772,2002,2.772,2003,2.772,2004,2.772,2005,2.772,2006,2.772,2007,2.772,2008,2.772,2009,2.772,2010,2.772,2011,4.171,2012,5.015,2013,2.772,2014,2.772,2015,2.772,2016,2.772,2017,4.171,2018,2.772,2019,2.772,2020,2.772,2021,2.772,2022,2.772,2023,2.772,2024,2.772,2025,2.772]],["title/modules.html",[38,1.762]],["body/modules.html",[10,0.012,16,0.012,17,0.012,37,3.715,38,1.72,48,3.442,49,3.215,50,2.85,51,3.215,52,3.215,53,3.02,54,3.215,55,3.442,56,3.02,57,3.442,58,3.02,59,2.698,60,3.442,61,3.215,726,3.442,2026,7.82,2027,7.82,2028,7.82,2029,8.11,2030,7.82,2031,7.82]],["title/overview.html",[2032,4.626]],["body/overview.html",[2,1.437,10,0.016,16,0.009,17,0.009,20,1.208,30,3.466,36,0.636,37,5.766,38,1.113,39,1.315,40,1.746,41,1.746,42,1.578,43,1.746,44,1.208,45,2.922,46,2.922,47,2.922,48,5.114,49,4.455,50,3.545,51,4.52,52,4.66,53,3.757,54,3.781,55,4.584,56,3.757,57,5.137,58,3.757,59,3.593,60,4.898,61,3.781,62,3.552,63,3.545,64,2.494,65,1.746,66,1.658,211,2.922,213,2.922,214,3.711,215,3.711,410,0.949,447,3.489,459,2.922,461,2.922,462,2.922,726,3.711,774,1.954,930,4.022,948,2.922,950,2.922,951,2.922,1122,3.466,1130,2.922,1131,2.922,1238,4.281,1260,2.922,1261,2.922,1262,2.922,1263,2.922,1497,3.256,1505,2.922,1506,2.922,2032,2.922,2033,3.372,2034,3.372,2035,3.372]],["title/properties.html",[413,1.271,1395,2.154]],["body/properties.html",[10,0.015,16,0.014,17,0.014,413,1.665,424,2.747,491,3.799,500,3.188,2036,6.157,2037,6.157,2038,6.157]],["title/miscellaneous/typealiases.html",[1833,1.783,2039,4.7]],["body/miscellaneous/typealiases.html",[10,0.012,16,0.012,17,0.012,22,0.609,88,2.488,94,2.614,99,2.777,108,2.908,152,0.74,229,2.614,230,3.081,278,4.022,285,4.648,465,3.004,485,4.648,502,1.905,517,4.648,596,3.791,712,4.648,723,4.648,735,4.855,892,3.081,893,4.648,902,4.306,953,3.081,985,4.306,1079,3.081,1080,3.791,1105,4.648,1164,4.648,1177,3.791,1469,3.512,1512,3.565,1564,4.648,1567,4.648,1722,3.791,1833,2.908,1835,4.139,2040,5.316,2041,4.607,2042,5.648,2043,4.607,2044,4.607,2045,4.607,2046,4.607,2047,4.607,2048,4.607]],["title/miscellaneous/variables.html",[114,3.105,1833,1.783]],["body/miscellaneous/variables.html",[10,0.015,16,0.012,17,0.012,22,0.554,88,2.264,94,2.379,99,2.619,108,2.646,114,3.197,229,2.379,230,2.805,232,4.061,465,2.878,502,1.734,596,3.45,602,3.342,641,4.383,642,4.193,653,4.839,712,4.383,724,4.383,725,4.193,732,4.383,735,4.695,740,4.193,892,2.805,893,4.383,905,4.383,906,4.193,953,2.805,1079,2.805,1080,3.45,1109,4.383,1110,4.193,1164,4.383,1173,4.383,1174,4.193,1177,3.45,1202,4.383,1203,4.193,1469,3.197,1481,4.193,1512,3.362,1722,3.45,1747,4.383,1748,4.193,1770,4.383,1777,4.193,1833,2.646,1835,3.768,2041,4.193,2042,5.326,2043,4.193,2044,4.193,2045,4.193,2046,4.193,2047,4.193,2048,4.193]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":532,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/EmailDTO.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"injectables/VulnerabilitiesService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2036,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":689,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"index.html":{}}}],["1.7.9",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":998,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["1000",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/GithubAppService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["10000",{"_index":1643,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["1000ms",{"_index":688,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["11",{"_index":1407,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["11.0.0",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2034,"title":{},"body":{"overview.html":{}}}],["120",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["16",{"_index":2033,"title":{},"body":{"overview.html":{}}}],["2",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"classes/EmailTemplate.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"index.html":{}}}],["2.0",{"_index":1676,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["2.0.2",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["20000",{"_index":1689,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["2022",{"_index":1406,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["2025",{"_index":890,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["22",{"_index":2035,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1573,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["28",{"_index":1408,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["3",{"_index":1934,"title":{},"body":{"index.html":{}}}],["3.0",{"_index":1531,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["3.0.0",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":1532,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["4",{"_index":1943,"title":{},"body":{"index.html":{}}}],["4.0",{"_index":1667,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["4.0.0",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["465",{"_index":811,"title":{},"body":{"modules/EmailModule.html":{}}}],["5",{"_index":683,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["5.1.1",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["5.41.9",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1692,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["587",{"_index":808,"title":{},"body":{"modules/EmailModule.html":{}}}],["6",{"_index":836,"title":{},"body":{"injectables/EmailService.html":{}}}],["60",{"_index":1574,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["600",{"_index":996,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["65b2a4e8a4b2d5c123456789",{"_index":1457,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["65b2a4e8a4b2d5c123456789'})@ismongoid",{"_index":1451,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{}}}],["65b2a4e8a4b2d5c987654321",{"_index":1458,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["6sense",{"_index":857,"title":{},"body":{"injectables/EmailService.html":{}}}],["7.8.1",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":774,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"overview.html":{}}}],["8.10.1",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["9.15.1",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["900000).tostring",{"_index":840,"title":{},"body":{"injectables/EmailService.html":{}}}],["_id",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{}}}],["abc123xyz",{"_index":790,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["above",{"_index":1947,"title":{},"body":{"index.html":{}}}],["accept",{"_index":1017,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["access",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{}}}],["accesstoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{},"coverage.html":{}}}],["account",{"_index":768,"title":{},"body":{"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["action",{"_index":946,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["add",{"_index":1267,"title":{},"body":{"modules/RepositoryModule.html":{},"index.html":{}}}],["added",{"_index":1149,"title":{},"body":{"injectables/LicensesService.html":{}}}],["additional",{"_index":2002,"title":{},"body":{"index.html":{}}}],["address",{"_index":745,"title":{},"body":{"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["address'})@isnotempty({message",{"_index":752,"title":{},"body":{"classes/EmailDTO.html":{},"classes/VerifyEmailDto.html":{}}}],["addressplease",{"_index":875,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["adhere",{"_index":2009,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["aff.database_specific?.source",{"_index":1622,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["aff.ranges?.map((range",{"_index":1624,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["affected",{"_index":1554,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["affected.ranges.fixed",{"_index":1707,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["affected.ranges.introduced",{"_index":1705,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["affected.source",{"_index":1717,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["aggregate",{"_index":540,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["aggregate.push",{"_index":543,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["algorithm",{"_index":1007,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["alias",{"_index":1787,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["aliases",{"_index":2040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all')@apibearerauth()@useguards(accesstokenguard",{"_index":1228,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["alldependencies",{"_index":1414,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["allow",{"_index":684,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["allowed",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["allrepos[0].repo",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["alreadyexists",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["analysis",{"_index":1860,"title":{},"body":{"index.html":{}}}],["analyze",{"_index":1845,"title":{},"body":{"index.html":{}}}],["api",{"_index":1405,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["apibearerauth",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["apikey",{"_index":1639,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["apiproperty",{"_index":423,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["apiproperty({description",{"_index":415,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["app",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"index.html":{}}}],["app.controller",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubAppModule.html":{}}}],["app.controller.ts",{"_index":909,"title":{},"body":{"controllers/GithubAppController.html":{},"coverage.html":{}}}],["app.controller.ts:21",{"_index":922,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["app.controller.ts:36",{"_index":916,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["app.controller.ts:43",{"_index":919,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["app.controller.ts:48",{"_index":926,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["app.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/RepositoryModule.html":{}}}],["app.module.ts",{"_index":952,"title":{},"body":{"modules/GithubAppModule.html":{}}}],["app.schema",{"_index":954,"title":{},"body":{"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{}}}],["app.schema.ts",{"_index":893,"title":{},"body":{"classes/GithubApp.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["app.schema.ts:10",{"_index":901,"title":{},"body":{"classes/GithubApp.html":{}}}],["app.schema.ts:13",{"_index":896,"title":{},"body":{"classes/GithubApp.html":{}}}],["app.schema.ts:16",{"_index":897,"title":{},"body":{"classes/GithubApp.html":{}}}],["app.schema.ts:19",{"_index":898,"title":{},"body":{"classes/GithubApp.html":{}}}],["app.service",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"injectables/RepositoryService.html":{}}}],["app.service.ts",{"_index":956,"title":{},"body":{"injectables/GithubAppService.html":{},"coverage.html":{}}}],["app.service.ts:139",{"_index":979,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:18",{"_index":964,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:191",{"_index":966,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:202",{"_index":970,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:25",{"_index":973,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:255",{"_index":975,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:324",{"_index":977,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:43",{"_index":968,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app.service.ts:67",{"_index":972,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["app/github",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"injectables/GithubAppService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"coverage.html":{}}}],["app/validator/validate.ts",{"_index":1800,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["appconfig",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":19,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appinstallationaccesstoken",{"_index":894,"title":{},"body":{"classes/GithubApp.html":{},"injectables/GithubAppService.html":{}}}],["application",{"_index":1962,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1641,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["application/vnd.github.v3+json",{"_index":1018,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":1907,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":30,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":1453,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["assigning",{"_index":1988,"title":{},"body":{"index.html":{}}}],["assuming",{"_index":1581,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["async",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["atob(dependencyfile.content",{"_index":1411,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["attackcomplexity",{"_index":1740,"title":{},"body":{"classes/Vulnerability.html":{}}}],["attackvector",{"_index":1739,"title":{},"body":{"classes/Vulnerability.html":{}}}],["attempts",{"_index":527,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["auth",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"modules/EmailModule.html":{},"dependencies.html":{}}}],["auth.controller",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.js",{"_index":1871,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/guards/accesstoken.guard",{"_index":449,"title":{},"body":{"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["authcode",{"_index":923,"title":{},"body":{"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"miscellaneous/functions.html":{}}}],["authcontroller",{"_index":68,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1869,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2038,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1015,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"index.html":{}}}],["authservice",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["availabilityimpact",{"_index":1746,"title":{},"body":{"classes/Vulnerability.html":{}}}],["available",{"_index":2031,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":1470,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["axios",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["backoff",{"_index":1690,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["badrequestexception",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["badrequestexception('github",{"_index":1045,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["badrequestexception('invalid",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":1364,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["badrequestexception('token",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":851,"title":{},"body":{"injectables/EmailService.html":{}}}],["base64",{"_index":1004,"title":{},"body":{"injectables/GithubAppService.html":{},"index.html":{}}}],["basescore",{"_index":1737,"title":{},"body":{"classes/Vulnerability.html":{}}}],["baseseverity",{"_index":1738,"title":{},"body":{"classes/Vulnerability.html":{}}}],["bcrypt",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(dto.password",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptjs",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1016,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["before",{"_index":1890,"title":{},"body":{"index.html":{}}}],["below",{"_index":1970,"title":{},"body":{"index.html":{}}}],["beta",{"_index":1888,"title":{},"body":{"index.html":{}}}],["body",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["boolean",{"_index":608,"title":{},"body":{"classes/Dependency.html":{},"classes/License.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1865,"title":{},"body":{"index.html":{}}}],["branches",{"_index":1854,"title":{},"body":{"index.html":{}}}],["branching",{"_index":1882,"title":{},"body":{"index.html":{}}}],["branding",{"_index":628,"title":{},"body":{"classes/Dependency.html":{}}}],["break",{"_index":710,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["browse",{"_index":2029,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2026,"title":{},"body":{"modules.html":{}}}],["buffer.from",{"_index":1002,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["building",{"_index":2004,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":1420,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["bulkops",{"_index":1027,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["bulkops.length",{"_index":1436,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["bullmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/DependenciesModule.html":{},"modules/VulnerabilitiesModule.html":{}}}],["bullmodule.forrootasync",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":468,"title":{},"body":{"modules/DependenciesModule.html":{},"modules/VulnerabilitiesModule.html":{}}}],["bullmq",{"_index":513,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"dependencies.html":{}}}],["callback",{"_index":1938,"title":{},"body":{"index.html":{}}}],["carefulness",{"_index":624,"title":{},"body":{"classes/Dependency.html":{}}}],["case",{"_index":708,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["catch",{"_index":1022,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["category",{"_index":1106,"title":{},"body":{"classes/License.html":{}}}],["change",{"_index":1325,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["changes",{"_index":1317,"title":{},"body":{"injectables/RepositoryService.html":{},"index.html":{}}}],["changestream",{"_index":1318,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["changestream.on('change",{"_index":1324,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["changestream.on('error",{"_index":1344,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["character",{"_index":781,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["check",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/RepositoryService.html":{}}}],["checklogin",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkstatus",{"_index":910,"title":{},"body":{"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{}}}],["checkstatus(@req",{"_index":937,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["checkstatus(req",{"_index":914,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["checkstatus(userid",{"_index":965,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["checkuser",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser(email",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":15,"title":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"classes/GithubTokenDTO.html":{},"classes/License.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":410,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"classes/GithubTokenDTO.html":{},"classes/License.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"overview.html":{}}}],["cli",{"_index":1973,"title":{},"body":{"index.html":{}}}],["cli:example",{"_index":1974,"title":{},"body":{"index.html":{}}}],["click",{"_index":1908,"title":{},"body":{"index.html":{}}}],["client",{"_index":1889,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dependenciesmodule",{"_index":459,"title":{},"body":{"modules/DependenciesModule.html":{},"overview.html":{}}}],["cluster_dependenciesmodule_exports",{"_index":461,"title":{},"body":{"modules/DependenciesModule.html":{},"overview.html":{}}}],["cluster_dependenciesmodule_imports",{"_index":460,"title":{},"body":{"modules/DependenciesModule.html":{}}}],["cluster_dependenciesmodule_providers",{"_index":462,"title":{},"body":{"modules/DependenciesModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":791,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_emailmodule_imports",{"_index":792,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_emailmodule_providers",{"_index":793,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_githubappmodule",{"_index":948,"title":{},"body":{"modules/GithubAppModule.html":{},"overview.html":{}}}],["cluster_githubappmodule_exports",{"_index":950,"title":{},"body":{"modules/GithubAppModule.html":{},"overview.html":{}}}],["cluster_githubappmodule_imports",{"_index":949,"title":{},"body":{"modules/GithubAppModule.html":{}}}],["cluster_githubappmodule_providers",{"_index":951,"title":{},"body":{"modules/GithubAppModule.html":{},"overview.html":{}}}],["cluster_licensesmodule",{"_index":1130,"title":{},"body":{"modules/LicensesModule.html":{},"overview.html":{}}}],["cluster_licensesmodule_imports",{"_index":1132,"title":{},"body":{"modules/LicensesModule.html":{}}}],["cluster_licensesmodule_providers",{"_index":1131,"title":{},"body":{"modules/LicensesModule.html":{},"overview.html":{}}}],["cluster_repositorymodule",{"_index":1260,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_repositorymodule_exports",{"_index":1261,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_repositorymodule_imports",{"_index":1262,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_repositorymodule_providers",{"_index":1263,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_vulnerabilitiesmodule",{"_index":1505,"title":{},"body":{"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["cluster_vulnerabilitiesmodule_imports",{"_index":1507,"title":{},"body":{"modules/VulnerabilitiesModule.html":{}}}],["cluster_vulnerabilitiesmodule_providers",{"_index":1506,"title":{},"body":{"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["code",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"index.html":{}}}],["codecy",{"_index":1872,"title":{},"body":{"index.html":{}}}],["commit",{"_index":2019,"title":{},"body":{"index.html":{}}}],["commitsfrequency",{"_index":636,"title":{},"body":{"classes/Dependency.html":{}}}],["communityinterest",{"_index":630,"title":{},"body":{"classes/Dependency.html":{}}}],["completed",{"_index":704,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["comprehensive",{"_index":1876,"title":{},"body":{"index.html":{}}}],["concurrency",{"_index":680,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["confidentialityimpact",{"_index":1744,"title":{},"body":{"classes/Vulnerability.html":{}}}],["configmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{}}}],["configmodule.forroot",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{}}}],["configservice",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["configservice.get('email_host",{"_index":803,"title":{},"body":{"modules/EmailModule.html":{}}}],["configservice.get('email_password",{"_index":815,"title":{},"body":{"modules/EmailModule.html":{}}}],["configservice.get('email_service_port",{"_index":807,"title":{},"body":{"modules/EmailModule.html":{}}}],["configservice.get('email_username",{"_index":813,"title":{},"body":{"modules/EmailModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_url",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1897,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1898,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception('user",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error('change",{"_index":1345,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["console.error('error",{"_index":1043,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["console.error('unexpected",{"_index":1375,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["console.error(error",{"_index":1439,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["console.log",{"_index":1033,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["console.log('repository",{"_index":1342,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["console.log(`error",{"_index":1024,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["console.log(`installation",{"_index":1021,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["console.log(change",{"_index":1326,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["console.log(error",{"_index":1042,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["console.log(error.message",{"_index":1026,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["console.log(githubapps",{"_index":1051,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["console.log(installationid",{"_index":1010,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["console.log(payload",{"_index":1076,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(repo",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(response",{"_index":1041,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["console.log(timedifference",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(userid",{"_index":1050,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["const",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"classes/License.html":{},"injectables/LicensesService.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["constructor",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LicensesService.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["constructor(configservice",{"_index":824,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(dependenciesservice",{"_index":651,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["constructor(httpservice",{"_index":476,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["constructor(jwtservice",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{}}}],["constructor(licensemodel",{"_index":1137,"title":{},"body":{"injectables/LicensesService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"classes/DependencyConsumer.html":{},"controllers/GithubAppController.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"controllers/LicensesController.html":{},"controllers/RepositoryController.html":{},"classes/VulnerabilityConsumer.html":{}}}],["constructor(vulnerabilitiesservice",{"_index":1751,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["contact",{"_index":883,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["contain",{"_index":763,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["contents",{"_index":1913,"title":{},"body":{"index.html":{}}}],["contents/package.json",{"_index":1443,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["contributing",{"_index":2006,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":2014,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":2008,"title":{},"body":{"index.html":{}}}],["controller",{"_index":18,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/EmailController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/EmailController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('dependencies",{"_index":452,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["controller('email",{"_index":743,"title":{},"body":{"controllers/EmailController.html":{}}}],["controller('github",{"_index":931,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["controller('licenses",{"_index":1124,"title":{},"body":{"controllers/LicensesController.html":{}}}],["controller('repositories",{"_index":1243,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["controller('vulnerabilities",{"_index":1500,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["controllers",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["convention",{"_index":1894,"title":{},"body":{"index.html":{}}}],["conventions",{"_index":2010,"title":{},"body":{"index.html":{}}}],["convert",{"_index":1923,"title":{},"body":{"index.html":{}}}],["convert]::tobase64string([io.file]::readallbytes(\"private",{"_index":1931,"title":{},"body":{"index.html":{}}}],["copy",{"_index":1915,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":1945,"title":{},"body":{"index.html":{}}}],["count",{"_index":1356,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["coverage",{"_index":1779,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":437,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"controllers/LicensesController.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"index.html":{}}}],["create(@body",{"_index":454,"title":{},"body":{"controllers/DependenciesController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["create(createdependencydto",{"_index":439,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{}}}],["create(createvulnerabilitydto",{"_index":1491,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{}}}],["createdat",{"_index":1165,"title":{},"body":{"classes/OTPSecret.html":{}}}],["createdependencydto",{"_index":409,"title":{"classes/CreateDependencyDTO.html":{}},"body":{"classes/CreateDependencyDTO.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"coverage.html":{}}}],["createinstallationtoken",{"_index":957,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["createinstallationtoken(installationid",{"_index":967,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["createvulnerabilitydto",{"_index":425,"title":{"classes/CreateVulnerabilityDTO.html":{}},"body":{"classes/CreateVulnerabilityDTO.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"coverage.html":{}}}],["creating",{"_index":1025,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["credential",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["credentials",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["criteria",{"_index":771,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["current",{"_index":991,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["currenttime",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["currenttime.gettime",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentversion",{"_index":504,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{}}}],["custom",{"_index":1989,"title":{},"body":{"index.html":{}}}],["cve",{"_index":1582,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["cvedata",{"_index":1579,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.descriptions?.find((desc",{"_index":1585,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv2",{"_index":1597,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv2.length",{"_index":1598,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv2[0",{"_index":1599,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv30",{"_index":1594,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv30.length",{"_index":1595,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv30[0",{"_index":1596,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv31",{"_index":1591,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv31.length",{"_index":1592,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv31[0",{"_index":1593,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv40",{"_index":1588,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv40.length",{"_index":1589,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.metrics?.cvssmetricv40[0",{"_index":1590,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.vulnstatus",{"_index":1584,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvedata.weaknesses?.map",{"_index":1600,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cveid",{"_index":1496,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["cveinfo",{"_index":1645,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cveinfo.error",{"_index":1647,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cveinfo.metrices",{"_index":1653,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cveinfo.nvddescription",{"_index":1650,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cveinfo.nvdvulnstatus",{"_index":1649,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cveinfo.weaknesses",{"_index":1651,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvss",{"_index":1530,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvss_v2",{"_index":1675,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvss_v3",{"_index":1671,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvss_v4",{"_index":1665,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvssdata",{"_index":1666,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["cvssmetricv2",{"_index":1549,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["cvssmetricv30",{"_index":1548,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["cvssmetricv31",{"_index":1547,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["cvssmetricv40",{"_index":1546,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["cvssseverities",{"_index":1559,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvssseverities.length",{"_index":1662,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvssseverity",{"_index":1619,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvssvector",{"_index":1529,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cvssvector.match(/^cvss:(\\d+\\.\\d",{"_index":1660,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["cweid",{"_index":1611,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["d",{"_index":1927,"title":{},"body":{"index.html":{}}}],["danger",{"_index":1153,"title":{},"body":{"injectables/LicensesService.html":{}}}],["data",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"index.html":{}}}],["data.currentversion",{"_index":585,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.description",{"_index":550,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.email",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.evaluation",{"_index":592,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.homepage",{"_index":558,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.lastpublishdate",{"_index":586,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.license",{"_index":557,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.maintainers",{"_index":560,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.name",{"_index":549,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.npm",{"_index":590,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.repository",{"_index":584,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.repository.url",{"_index":559,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.score",{"_index":593,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.time",{"_index":555,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.time[data['dist",{"_index":563,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.time[version",{"_index":556,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.versions.foreach(async",{"_index":578,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.versions[version]._id",{"_index":554,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data.vulns.map((vuln",{"_index":1603,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["data['collected']['metadata']['description",{"_index":564,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['collected']['metadata']['license",{"_index":565,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['collected']['metadata']['links']['homepage",{"_index":566,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['collected']['metadata']['links']['npm",{"_index":567,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['collected']['metadata']['links']['repository",{"_index":568,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['dist",{"_index":561,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['evaluation",{"_index":569,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["data['score",{"_index":570,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["database",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["database/dependency",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["database/githubapp",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["database/license",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["database/otpsecret",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["database/repository",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["database/user",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["database/vulnerability",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyVersion.html":{},"injectables/EmailService.html":{},"classes/OTPSecret.html":{}}}],["date.now",{"_index":1172,"title":{},"body":{"classes/OTPSecret.html":{}}}],["db",{"_index":1316,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["db_severity",{"_index":1615,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["debugging",{"_index":1887,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["decoded",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"classes/GithubTokenDTO.html":{},"classes/License.html":{},"controllers/LicensesController.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{}}}],["default",{"_index":602,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/EmailModule.html":{},"classes/GithubApp.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"miscellaneous/variables.html":{}}}],["defaultbranch",{"_index":1178,"title":{},"body":{"classes/Repository.html":{}}}],["defaults",{"_index":816,"title":{},"body":{"modules/EmailModule.html":{},"classes/Repository.html":{}}}],["defined",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{}}}],["delay",{"_index":526,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["delayed",{"_index":703,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["delete",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleted",{"_index":1387,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["deletegithubapp",{"_index":958,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["deletegithubapp(userid",{"_index":969,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["dep",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"injectables/DependenciesService.html":{}}}],["dep._id",{"_index":581,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dep.dependencyname",{"_index":595,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dep.length",{"_index":531,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dep.package",{"_index":1425,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dep[0",{"_index":533,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependencies.consumer",{"_index":467,"title":{},"body":{"modules/DependenciesModule.html":{}}}],["dependencies.controller",{"_index":464,"title":{},"body":{"modules/DependenciesModule.html":{}}}],["dependencies.service",{"_index":448,"title":{},"body":{"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"classes/DependencyConsumer.html":{}}}],["dependencies/dependencies.module",{"_index":1266,"title":{},"body":{"modules/RepositoryModule.html":{}}}],["dependencies/dependencies.service",{"_index":1312,"title":{},"body":{"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{}}}],["dependenciescontroller",{"_index":435,"title":{"controllers/DependenciesController.html":{}},"body":{"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"coverage.html":{}}}],["dependenciesmodule",{"_index":49,"title":{"modules/DependenciesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DependenciesModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["dependenciesservice",{"_index":447,"title":{"injectables/DependenciesService.html":{}},"body":{"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["dependency",{"_index":416,"title":{"classes/Dependency.html":{}},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"index.html":{}}}],["dependency._id",{"_index":1688,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["dependency.dto",{"_index":451,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{}}}],["dependency.dto.ts",{"_index":412,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"coverage.html":{}}}],["dependency.dto.ts:10",{"_index":419,"title":{},"body":{"classes/CreateDependencyDTO.html":{}}}],["dependency.name",{"_index":733,"title":{},"body":{"modules/DependencySchemaModule.html":{}}}],["dependency.schema",{"_index":731,"title":{},"body":{"modules/DependencySchemaModule.html":{}}}],["dependencyconsumer",{"_index":466,"title":{"classes/DependencyConsumer.html":{}},"body":{"modules/DependenciesModule.html":{},"classes/DependencyConsumer.html":{},"coverage.html":{}}}],["dependencydocument",{"_index":485,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dependencyentries",{"_index":1421,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyentries.map((entry",{"_index":1429,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyfile",{"_index":1409,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyfilecontentdecoded",{"_index":1410,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyid",{"_index":445,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["dependencyjson",{"_index":1412,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyjson['dependencies",{"_index":1415,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyjson['devdependencies",{"_index":1416,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencymodel",{"_index":478,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dependencyname",{"_index":414,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["dependencyqueue",{"_index":480,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dependencyrepository",{"_index":711,"title":{"classes/DependencyRepository.html":{}},"body":{"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"coverage.html":{}}}],["dependencyrepository.name",{"_index":730,"title":{},"body":{"modules/DependencyRepositorySchemaModule.html":{}}}],["dependencyrepositorydocument",{"_index":723,"title":{},"body":{"classes/DependencyRepository.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dependencyrepositorymodel",{"_index":1283,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyrepositoryschema",{"_index":724,"title":{},"body":{"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencyrepositoryschemamodule",{"_index":726,"title":{"modules/DependencyRepositorySchemaModule.html":{}},"body":{"modules/DependencyRepositorySchemaModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["dependencyschema",{"_index":641,"title":{},"body":{"classes/Dependency.html":{},"modules/DependencySchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencyschemamodule",{"_index":50,"title":{"modules/DependencySchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DependenciesModule.html":{},"modules/DependencySchemaModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["dependencyservice",{"_index":1280,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["dependencyversion",{"_index":516,"title":{"classes/DependencyVersion.html":{}},"body":{"injectables/DependenciesService.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{}}}],["dependencyversion.name",{"_index":734,"title":{},"body":{"modules/DependencySchemaModule.html":{}}}],["dependencyversiondocument",{"_index":517,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/DependencyVersion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dependencyversionmodel",{"_index":479,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dependencyversions",{"_index":545,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["dependencyversionschema",{"_index":732,"title":{},"body":{"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependentscount",{"_index":633,"title":{},"body":{"classes/Dependency.html":{}}}],["deploy:example",{"_index":1979,"title":{},"body":{"index.html":{}}}],["deployed",{"_index":1964,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1972,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1963,"title":{},"body":{"index.html":{}}}],["deployment:example",{"_index":1981,"title":{},"body":{"index.html":{}}}],["depshield",{"_index":887,"title":{},"body":{"classes/EmailTemplate.html":{},"index.html":{}}}],["depshieldquestions",{"_index":881,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["desc.lang",{"_index":1586,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["description",{"_index":424,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"properties.html":{}}}],["designed",{"_index":1844,"title":{},"body":{"index.html":{}}}],["detail",{"_index":640,"title":{},"body":{"classes/Dependency.html":{}}}],["details",{"_index":1606,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"index.html":{}}}],["detailsurl",{"_index":1081,"title":{},"body":{"classes/License.html":{}}}],["detect",{"_index":1864,"title":{},"body":{"index.html":{}}}],["detectcvssversionfromscore",{"_index":1514,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["detectcvssversionfromscore(cvssvector",{"_index":1527,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["developer",{"_index":1906,"title":{},"body":{"index.html":{}}}],["development",{"_index":1857,"title":{},"body":{"index.html":{}}}],["difference",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["different",{"_index":1853,"title":{},"body":{"index.html":{}}}],["digit",{"_index":837,"title":{},"body":{"injectables/EmailService.html":{}}}],["directory",{"_index":1978,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":911,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["disconnect(@req",{"_index":940,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["disconnect(req",{"_index":917,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["displayname",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{}}}],["dns",{"_index":1993,"title":{},"body":{"index.html":{}}}],["document",{"_index":617,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["documentation",{"_index":1780,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentkey",{"_index":1327,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["documentkey._id",{"_index":1329,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["documentkey._id.tostring",{"_index":1331,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["doe",{"_index":759,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["doe'})@isstring()@isnotempty({message",{"_index":1463,"title":{},"body":{"classes/SignupDto.html":{}}}],["domain",{"_index":1990,"title":{},"body":{"index.html":{}}}],["domain:example",{"_index":1998,"title":{},"body":{"index.html":{}}}],["domains",{"_index":1991,"title":{},"body":{"index.html":{}}}],["done",{"_index":1438,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["don’t",{"_index":1954,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":1921,"title":{},"body":{"index.html":{}}}],["downloadsacceleration",{"_index":632,"title":{},"body":{"classes/Dependency.html":{}}}],["downloadscount",{"_index":631,"title":{},"body":{"classes/Dependency.html":{}}}],["drive",{"_index":1152,"title":{},"body":{"injectables/LicensesService.html":{}}}],["dto",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.accesstoken",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.displayname",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.emailaddress",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.password",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/auth.dto",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/bulkselect.dto",{"_index":1240,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["dto/create",{"_index":450,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"controllers/VulnerabilitiesController.html":{}}}],["dto/github.dto",{"_index":1242,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["duplication",{"_index":1875,"title":{},"body":{"index.html":{}}}],["duration",{"_index":686,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["e.g",{"_index":1909,"title":{},"body":{"index.html":{}}}],["each",{"_index":1459,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"injectables/VulnerabilitiesService.html":{},"index.html":{}}}],["ecosystem",{"_index":428,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{},"classes/Dependency.html":{},"injectables/VulnerabilitiesService.html":{}}}],["efficiently",{"_index":1868,"title":{},"body":{"index.html":{}}}],["email",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Dependency.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["email.controller",{"_index":795,"title":{},"body":{"modules/EmailModule.html":{}}}],["email.service",{"_index":796,"title":{},"body":{"modules/EmailModule.html":{}}}],["email.template",{"_index":834,"title":{},"body":{"injectables/EmailService.html":{}}}],["email.template.ts",{"_index":866,"title":{},"body":{"classes/EmailTemplate.html":{},"coverage.html":{}}}],["email.template.ts:2",{"_index":871,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["email.thank",{"_index":879,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["email/email.module",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["email/email.service",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["email_sender",{"_index":818,"title":{},"body":{"modules/EmailModule.html":{}}}],["emailaddress",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{}}}],["emailcontroller",{"_index":741,"title":{"controllers/EmailController.html":{}},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{},"coverage.html":{}}}],["emaildto",{"_index":161,"title":{"classes/EmailDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["emailmodule",{"_index":51,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailservice",{"_index":63,"title":{"injectables/EmailService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["emailtemplate",{"_index":832,"title":{"classes/EmailTemplate.html":{}},"body":{"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"coverage.html":{}}}],["emailtemplate.userverificationotpemailtemplate",{"_index":854,"title":{},"body":{"injectables/EmailService.html":{}}}],["empty",{"_index":753,"title":{},"body":{"classes/EmailDTO.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["empty'})@matches(/^[a",{"_index":1464,"title":{},"body":{"classes/SignupDto.html":{}}}],["en')?.value",{"_index":1587,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["ensure",{"_index":809,"title":{},"body":{"modules/EmailModule.html":{},"injectables/RepositoryService.html":{},"index.html":{}}}],["ensures",{"_index":1878,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":1855,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1937,"title":{},"body":{"index.html":{}}}],["entries",{"_index":1419,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["entry",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["entry._id",{"_index":1432,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["enum",{"_index":1477,"title":{},"body":{"classes/User.html":{}}}],["enumerations",{"_index":1834,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1899,"title":{},"body":{"index.html":{}}}],["environment",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"index.html":{}}}],["environment:example",{"_index":1985,"title":{},"body":{"index.html":{}}}],["environments",{"_index":1984,"title":{},"body":{"index.html":{}}}],["equal",{"_index":1323,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["error",{"_index":1023,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["error('failed",{"_index":1035,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["error.message",{"_index":1044,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["error.stack",{"_index":1659,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["errors",{"_index":1874,"title":{},"body":{"index.html":{}}}],["evaluation",{"_index":508,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{}}}],["event",{"_index":927,"title":{},"body":{"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{}}}],["event.fixed)?.fixed",{"_index":1629,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["event.introduced)?.introduced",{"_index":1627,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["example",{"_index":417,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{}}}],["exec",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RepositoryService.html":{}}}],["exist",{"_index":1634,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["existingentry",{"_index":842,"title":{},"body":{"injectables/EmailService.html":{}}}],["existingentry.save",{"_index":846,"title":{},"body":{"injectables/EmailService.html":{}}}],["existingentry.secret",{"_index":845,"title":{},"body":{"injectables/EmailService.html":{}}}],["exists",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{}}}],["exp",{"_index":995,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["expiration",{"_index":997,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["expired",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["exponential",{"_index":1691,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["export",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules/VulnerabilitySchemaModule.html":{},"overview.html":{}}}],["express",{"_index":418,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"dependencies.html":{}}}],["express'})@isnotempty",{"_index":429,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"classes/DependencyConsumer.html":{},"classes/GithubApp.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/OTPSecret.html":{},"injectables/RefreshTokenGuard.html":{},"classes/VulnerabilityConsumer.html":{}}}],["extract",{"_index":1330,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["extractjwt",{"_index":1061,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1065,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["facet",{"_index":1352,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["failed",{"_index":1046,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["false",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"classes/Dependency.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/License.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["faq",{"_index":882,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["feature",{"_index":2017,"title":{},"body":{"index.html":{}}}],["feature/new",{"_index":2018,"title":{},"body":{"index.html":{}}}],["features",{"_index":1859,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1332,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["fetchallrepos",{"_index":959,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["fetchallrepos(user",{"_index":971,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["fetching",{"_index":1343,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1444,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["filter",{"_index":1431,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["final",{"_index":639,"title":{},"body":{"classes/Dependency.html":{}}}],["find",{"_index":1039,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["findbyidandupdate(userid",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["findone",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["finished",{"_index":1687,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["first",{"_index":1631,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["firstvaluefrom",{"_index":514,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["fixed",{"_index":1628,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["fixedversion",{"_index":1706,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["fixedversion._id",{"_index":1720,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["fixedversion.publishdate",{"_index":1714,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["fixedversion.version",{"_index":1709,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["fixedversiondate",{"_index":495,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["follow",{"_index":1955,"title":{},"body":{"index.html":{}}}],["following",{"_index":876,"title":{},"body":{"classes/EmailTemplate.html":{},"injectables/LicensesService.html":{},"index.html":{}}}],["follows",{"_index":1883,"title":{},"body":{"index.html":{}}}],["foreignfield",{"_index":547,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{}}}],["fork",{"_index":2016,"title":{},"body":{"index.html":{}}}],["format",{"_index":788,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["format.password",{"_index":779,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["formatdependencies",{"_index":1272,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["formatdependencies(dependencies",{"_index":1285,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["formatteddependencies",{"_index":1417,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["formatteddependencies.map((dep",{"_index":1423,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["formatteddependencies[index].version",{"_index":1433,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["found",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["framework",{"_index":1949,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1143,"title":{},"body":{"injectables/LicensesService.html":{}}}],["full",{"_index":1333,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["function",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"coverage.html":{}}}],["functions",{"_index":1836,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1975,"title":{},"body":{"index.html":{}}}],["generate",{"_index":835,"title":{},"body":{"injectables/EmailService.html":{},"index.html":{}}}],["generateandstorecode",{"_index":821,"title":{},"body":{"injectables/EmailService.html":{}}}],["generateandstorecode(emailaddress",{"_index":827,"title":{},"body":{"injectables/EmailService.html":{}}}],["generatecode",{"_index":822,"title":{},"body":{"injectables/EmailService.html":{}}}],["generatejwt",{"_index":960,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["generatetokens",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokens(userid",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":456,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["get(':id')@apibearerauth()@useguards(accesstokenguard",{"_index":443,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["get(':spdxid",{"_index":1127,"title":{},"body":{"controllers/LicensesController.html":{}}}],["get(':spdxid')@apibearerauth()@useguards(accesstokenguard",{"_index":1119,"title":{},"body":{"controllers/LicensesController.html":{}}}],["get('check",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GithubAppController.html":{}}}],["get('cveid/:cveid",{"_index":1502,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["get('cveid/:cveid')@apibearerauth()@useguards(accesstokenguard",{"_index":1494,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["get('disconnect",{"_index":939,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["get('install",{"_index":932,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["get('read",{"_index":1257,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["get('repos",{"_index":1244,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["get('repos')@apibearerauth()@useguards(accesstokenguard",{"_index":1215,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["get('selected",{"_index":1219,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["getallrepos",{"_index":1207,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{}}}],["getallrepos(page",{"_index":1213,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["getallrepos(userid",{"_index":1288,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getbycveid",{"_index":1490,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{}}}],["getbycveid(@param('cveid",{"_index":1503,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["getbycveid(cveid",{"_index":1493,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{}}}],["getcveinfofromnvd",{"_index":1515,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["getcveinfofromnvd(dependencyid",{"_index":1534,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["getdependencyinfo",{"_index":470,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getdependencyinfo(dep",{"_index":484,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getdetails",{"_index":438,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{}}}],["getdetails(@param('id",{"_index":457,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["getdetails(@param('spdxid",{"_index":1128,"title":{},"body":{"controllers/LicensesController.html":{}}}],["getdetails(dependencyid",{"_index":442,"title":{},"body":{"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{}}}],["getdetails(spdxid",{"_index":1118,"title":{},"body":{"controllers/LicensesController.html":{},"injectables/LicensesService.html":{}}}],["getdetailsbydependencyname",{"_index":471,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getdetailsbydependencyname(dependencyname",{"_index":488,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["gethello",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinstall",{"_index":912,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["getinstall(authcode",{"_index":920,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["getrepositoriespipeline",{"_index":1273,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getrepositoriespipeline(userid",{"_index":1290,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getselectedrepos",{"_index":1208,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["getselectedrepos(page",{"_index":1218,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["getting",{"_index":1840,"title":{"index.html":{}},"body":{"index.html":{}}}],["getversionbydepversion",{"_index":472,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getversionbydepversion(dependencyid",{"_index":490,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getversionsinpublishrange",{"_index":473,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getversionsinpublishrange(dependencyid",{"_index":493,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["getvulnerabilityinfofromosv",{"_index":1516,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["getvulnerabilityinfofromosv(dependencyname",{"_index":1537,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["github",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/Repository.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["github_app_client_id",{"_index":1941,"title":{},"body":{"index.html":{}}}],["github_app_client_id=your_client_id",{"_index":1901,"title":{},"body":{"index.html":{}}}],["github_app_client_secret",{"_index":1942,"title":{},"body":{"index.html":{}}}],["github_app_client_secret=your_client_secret",{"_index":1902,"title":{},"body":{"index.html":{}}}],["github_app_id",{"_index":1916,"title":{},"body":{"index.html":{}}}],["github_app_id=your_app_id",{"_index":1900,"title":{},"body":{"index.html":{}}}],["github_private_key",{"_index":1933,"title":{},"body":{"index.html":{}}}],["github_private_key=your_base64_encoded_private_keystep",{"_index":1903,"title":{},"body":{"index.html":{}}}],["githubaccesstoken",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["githubapp",{"_index":891,"title":{"classes/GithubApp.html":{}},"body":{"classes/GithubApp.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"coverage.html":{}}}],["githubapp.isdeleted",{"_index":1351,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["githubapp.name",{"_index":955,"title":{},"body":{"modules/GithubAppSchemaModule.html":{}}}],["githubappcontroller",{"_index":907,"title":{"controllers/GithubAppController.html":{}},"body":{"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"coverage.html":{}}}],["githubappdocument",{"_index":902,"title":{},"body":{"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["githubappinfo",{"_index":1037,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["githubappmodel",{"_index":1282,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["githubappmodule",{"_index":52,"title":{"modules/GithubAppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["githubapps",{"_index":1028,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["githubapps.length",{"_index":1363,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["githubappschema",{"_index":905,"title":{},"body":{"classes/GithubApp.html":{},"modules/GithubAppSchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubappschemamodule",{"_index":53,"title":{"modules/GithubAppSchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["githubappservice",{"_index":930,"title":{"injectables/GithubAppService.html":{}},"body":{"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"overview.html":{}}}],["githubinstallationaccesstoken",{"_index":1019,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["githublogin(@body",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["githublogin(dto",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["githubservice",{"_index":1268,"title":{},"body":{"modules/RepositoryModule.html":{}}}],["githubtokendto",{"_index":206,"title":{"classes/GithubTokenDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["gitignore",{"_index":1150,"title":{},"body":{"injectables/LicensesService.html":{}}}],["gmail",{"_index":864,"title":{},"body":{"injectables/EmailService.html":{}}}],["go",{"_index":1919,"title":{},"body":{"index.html":{}}}],["google",{"_index":1151,"title":{},"body":{"injectables/LicensesService.html":{},"dependencies.html":{}}}],["graph",{"_index":2030,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":538,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["guards/accesstoken.guard",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/refreshtoken.guard",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["guidance",{"_index":2005,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1956,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":2015,"title":{},"body":{"index.html":{}}}],["handleappinstallations",{"_index":961,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["handleappinstallations(data",{"_index":974,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["handlegithubrepositoryoperations",{"_index":962,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["handlegithubrepositoryoperations(data",{"_index":976,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["hashedpassword",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedrefreshtoken",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":928,"title":{},"body":{"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["headers('x",{"_index":942,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["health",{"_index":627,"title":{},"body":{"classes/Dependency.html":{}}}],["hello",{"_index":873,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["here",{"_index":706,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["homepage",{"_index":501,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"index.html":{}}}],["host",{"_index":802,"title":{},"body":{"modules/EmailModule.html":{}}}],["html",{"_index":862,"title":{},"body":{"injectables/EmailService.html":{}}}],["htmlurl",{"_index":1179,"title":{},"body":{"classes/Repository.html":{}}}],["http://localhost:3000",{"_index":1961,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api/auth/callback",{"_index":1939,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{}}}],["https://api.github.com/app/installations/${installationid}/access_tokens",{"_index":1014,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["https://api.npms.io/v2/package/${encodeuricomponent(dep.dependencyname",{"_index":574,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["https://services.nvd.nist.gov/rest/json/cves/2.0",{"_index":1637,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["httpservice",{"_index":477,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["iat",{"_index":993,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["id",{"_index":542,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"index.html":{}}}],["identifier",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":1861,"title":{},"body":{"index.html":{}}}],["ids",{"_index":1379,"title":{},"body":{"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["ignore",{"_index":878,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["import",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules/VulnerabilitySchemaModule.html":{}}}],["including",{"_index":1967,"title":{},"body":{"index.html":{}}}],["increase",{"_index":1693,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1200,"title":{},"body":{"classes/Repository.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{}}}],["information",{"_index":886,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["inject",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LicensesService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LicensesService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LicensesService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"overview.html":{}}}],["injectmodel",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/LicensesService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["injectmodel(dependency.name",{"_index":519,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["injectmodel(dependencyrepository.name",{"_index":1313,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["injectmodel(dependencyversion.name",{"_index":520,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["injectmodel(githubapp.name",{"_index":987,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["injectmodel(license.name",{"_index":1144,"title":{},"body":{"injectables/LicensesService.html":{}}}],["injectmodel(otpsecret.name",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["injectmodel(repository.name",{"_index":988,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["injectmodel(user.name",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["injectmodel(vulnerability.name",{"_index":1569,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["injectmodel(vulnerabilityversion.name",{"_index":1570,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["injectqueue",{"_index":512,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["injectqueue('dependency",{"_index":521,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["injectqueue('vulnerabilities",{"_index":1568,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["insert",{"_index":1427,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["insert/update",{"_index":1435,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["inspect",{"_index":1999,"title":{},"body":{"index.html":{}}}],["install",{"_index":1951,"title":{},"body":{"index.html":{}}}],["installapp",{"_index":963,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["installapp(authcode",{"_index":978,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["installation",{"_index":904,"title":{},"body":{"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"index.html":{}}}],["installation_repositories",{"_index":943,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["installationid",{"_index":895,"title":{},"body":{"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"miscellaneous/functions.html":{}}}],["installed",{"_index":1365,"title":{},"body":{"injectables/RepositoryService.html":{},"index.html":{}}}],["installedversion",{"_index":713,"title":{},"body":{"classes/DependencyRepository.html":{},"injectables/RepositoryService.html":{}}}],["installstart",{"_index":1958,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1995,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":1848,"title":{},"body":{"index.html":{}}}],["integrityimpact",{"_index":1745,"title":{},"body":{"classes/Vulnerability.html":{}}}],["intensity",{"_index":1698,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["internal",{"_index":1886,"title":{},"body":{"index.html":{}}}],["introduced",{"_index":1625,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["introducedversion",{"_index":1703,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["introducedversion._id",{"_index":1716,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["introducedversion.publishdate",{"_index":1713,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["introducedversion.version",{"_index":1708,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["introducedversiondate",{"_index":494,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["invalid",{"_index":767,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"injectables/VulnerabilitiesService.html":{}}}],["invoke",{"_index":1034,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["isarray",{"_index":420,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["isconnected",{"_index":1049,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["isdeleted",{"_index":597,"title":{},"body":{"classes/Dependency.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{}}}],["isdeprecatedlicenseid",{"_index":1082,"title":{},"body":{"classes/License.html":{}}}],["isemail",{"_index":756,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isglobal",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":421,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["isnotempty",{"_index":433,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isosiapproved",{"_index":1083,"title":{},"body":{"classes/License.html":{}}}],["isprivate",{"_index":1180,"title":{},"body":{"classes/Repository.html":{}}}],["iss",{"_index":999,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["isselected",{"_index":1181,"title":{},"body":{"classes/Repository.html":{},"injectables/RepositoryService.html":{}}}],["isstring",{"_index":755,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isstrongpassword",{"_index":757,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["issued",{"_index":994,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["issuesdistribution",{"_index":638,"title":{},"body":{"classes/Dependency.html":{}}}],["isvalidated",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["isverified",{"_index":1471,"title":{},"body":{"classes/User.html":{}}}],["it's",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RepositoryService.html":{}}}],["iteration",{"_index":1896,"title":{},"body":{"index.html":{}}}],["jest",{"_index":1880,"title":{},"body":{"index.html":{}}}],["job",{"_index":656,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["job.data",{"_index":696,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["job.data.dependency",{"_index":1765,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["job.data.dependencyname",{"_index":1762,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["job.data.ecosystem",{"_index":1763,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["job.data.vuln",{"_index":1767,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["job.data.vuln.cveid",{"_index":1766,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["job.id",{"_index":694,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["job.jobid",{"_index":699,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["job.name",{"_index":695,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["jobid",{"_index":672,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["jobs",{"_index":685,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["john",{"_index":758,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["johndoe@example.com",{"_index":766,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["johndoe@example.com'})@isemail",{"_index":1160,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["json.parse(dependencyfilecontentdecoded",{"_index":1413,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["json.parse(fs.readfilesync('spdx.json",{"_index":1146,"title":{},"body":{"injectables/LicensesService.html":{}}}],["jsondata",{"_index":1145,"title":{},"body":{"injectables/LicensesService.html":{}}}],["jsonwebtoken",{"_index":981,"title":{},"body":{"injectables/GithubAppService.html":{},"dependencies.html":{}}}],["jwt",{"_index":980,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.sign(payload",{"_index":1006,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["jwtfromrequest",{"_index":1064,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtobject",{"_index":1070,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["jwtrefreshtokenstrategy",{"_index":214,"title":{"injectables/JWTRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{}}}],["jwtstrategy",{"_index":215,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":1918,"title":{},"body":{"index.html":{}}}],["key.pem",{"_index":1925,"title":{},"body":{"index.html":{}}}],["keys",{"_index":1920,"title":{},"body":{"index.html":{}}}],["koyeb",{"_index":1969,"title":{},"body":{"index.html":{}}}],["lastpublishdate",{"_index":505,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{}}}],["latest",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["letters",{"_index":764,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["library",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["license",{"_index":500,"title":{"classes/License.html":{}},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"injectables/LicensesService.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["license.name",{"_index":1112,"title":{},"body":{"modules/LicenseSchemaModule.html":{}}}],["license.schema",{"_index":1111,"title":{},"body":{"modules/LicenseSchemaModule.html":{}}}],["licensedocument",{"_index":1105,"title":{},"body":{"classes/License.html":{},"injectables/LicensesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["licensefamily",{"_index":1107,"title":{},"body":{"classes/License.html":{}}}],["licenseid",{"_index":1084,"title":{},"body":{"classes/License.html":{},"injectables/LicensesService.html":{}}}],["licensemodel",{"_index":1139,"title":{},"body":{"injectables/LicensesService.html":{}}}],["licenserisk",{"_index":1108,"title":{},"body":{"classes/License.html":{}}}],["licenses",{"_index":1115,"title":{},"body":{"controllers/LicensesController.html":{},"injectables/LicensesService.html":{}}}],["licenses.controller",{"_index":1134,"title":{},"body":{"modules/LicensesModule.html":{}}}],["licenses.service",{"_index":1123,"title":{},"body":{"controllers/LicensesController.html":{},"modules/LicensesModule.html":{}}}],["licenseschema",{"_index":1109,"title":{},"body":{"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["licenseschemamodule",{"_index":54,"title":{"modules/LicenseSchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"modules.html":{},"overview.html":{}}}],["licensescontroller",{"_index":1113,"title":{"controllers/LicensesController.html":{}},"body":{"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"coverage.html":{}}}],["licensesmodule",{"_index":55,"title":{"modules/LicensesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LicensesModule.html":{},"modules.html":{},"overview.html":{}}}],["licensesservice",{"_index":1122,"title":{"injectables/LicensesService.html":{}},"body":{"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"coverage.html":{},"overview.html":{}}}],["licensetext",{"_index":1085,"title":{},"body":{"classes/License.html":{}}}],["licensetexthtml",{"_index":1086,"title":{},"body":{"classes/License.html":{}}}],["limit",{"_index":1214,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"miscellaneous/functions.html":{}}}],["limitations",{"_index":1850,"title":{},"body":{"index.html":{}}}],["limiter",{"_index":681,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["limitnum",{"_index":1359,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["listed",{"_index":1445,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["listen",{"_index":1322,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["listent",{"_index":1315,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["listing",{"_index":1447,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["literal",{"_index":604,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/License.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{}}}],["load",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{}}}],["localfield",{"_index":546,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{}}}],["log",{"_index":1976,"title":{},"body":{"index.html":{}}}],["logged",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":644,"title":{},"body":{"classes/DependencyConsumer.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["logger(dependencyconsumer.name",{"_index":654,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["logger(vulnerabilitiesservice.name",{"_index":1562,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["logger(vulnerabilityconsumer.name",{"_index":1753,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["logging",{"_index":2000,"title":{},"body":{"index.html":{}}}],["logic",{"_index":705,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["login",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["login(@body",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":147,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["logintype",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["logintype.credential",{"_index":1480,"title":{},"body":{"classes/User.html":{}}}],["logout",{"_index":2001,"title":{},"body":{"index.html":{}}}],["long",{"_index":782,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["lookup",{"_index":544,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{}}}],["lt",{"_index":539,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["macos/linux:example",{"_index":1924,"title":{},"body":{"index.html":{}}}],["mailermodule",{"_index":797,"title":{},"body":{"modules/EmailModule.html":{}}}],["mailermodule.forrootasync",{"_index":800,"title":{},"body":{"modules/EmailModule.html":{}}}],["mailerservice",{"_index":825,"title":{},"body":{"injectables/EmailService.html":{}}}],["maintainers",{"_index":503,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{}}}],["maintenance",{"_index":634,"title":{},"body":{"classes/Dependency.html":{}}}],["manager",{"_index":1953,"title":{},"body":{"index.html":{}}}],["map((version",{"_index":552,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["mark",{"_index":1391,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["match",{"_index":530,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["match[1",{"_index":1661,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["matchconditions",{"_index":1347,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matchconditions.isselected",{"_index":1348,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matched",{"_index":1378,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matchedids",{"_index":1380,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matchedids.includes(id",{"_index":1385,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matchedrepos",{"_index":1376,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matchedrepos.map((repo",{"_index":1381,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["matches",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["matches(/^[a",{"_index":760,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(100000",{"_index":838,"title":{},"body":{"injectables/EmailService.html":{}}}],["math.floor(date.now",{"_index":990,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["math.random",{"_index":839,"title":{},"body":{"injectables/EmailService.html":{}}}],["max",{"_index":682,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["meaningful",{"_index":2020,"title":{},"body":{"index.html":{}}}],["meet",{"_index":769,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["merging):example",{"_index":1986,"title":{},"body":{"index.html":{}}}],["message",{"_index":748,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["messages",{"_index":2021,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":1830,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["methods",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["metrices",{"_index":1544,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["minimum",{"_index":783,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["minlength",{"_index":773,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["minlowercase",{"_index":775,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["minnumbers",{"_index":778,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["minsymbols",{"_index":777,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["minuppercase",{"_index":776,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["minute",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["minutes",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubAppService.html":{}}}],["minutes.${otpcode}if",{"_index":877,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["miscellaneous",{"_index":1833,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/LicensesService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules/VulnerabilitySchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules/VulnerabilitySchemaModule.html":{},"overview.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules/VulnerabilitySchemaModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.controller",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.service",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/dependencies/dependencies.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/email/email.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/email/email.service",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/github",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/licenses/licenses.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":799,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["modules/repository/repository.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vulnerabilities/vulnerabilities.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":1450,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["mongoose",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/License.html":{},"injectables/LicensesService.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitySchemaModule.html":{}}}],["mongoosemodule.forfeature",{"_index":729,"title":{},"body":{"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitySchemaModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_uri",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["mongooseschema",{"_index":722,"title":{},"body":{"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["mongooseschema.types.objectid",{"_index":716,"title":{},"body":{"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["monitor",{"_index":1846,"title":{},"body":{"index.html":{}}}],["monitoring",{"_index":1866,"title":{},"body":{"index.html":{}}}],["more",{"_index":885,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["multiple",{"_index":1633,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["mustbe",{"_index":780,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["n",{"_index":1928,"title":{},"body":{"index.html":{}}}],["name",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"modules/OTPSecretSchemaModule.html":{},"controllers/RepositoryController.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["naming",{"_index":1893,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":1904,"title":{},"body":{"index.html":{}}}],["need",{"_index":1155,"title":{},"body":{"injectables/LicensesService.html":{}}}],["needed",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LicensesService.html":{}}}],["nest.js",{"_index":1950,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":798,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"modules/GithubAppModule.html":{},"injectables/GithubAppService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"modules/UserSchemaModule.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/VulnerabilitiesService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"injectables/LicensesService.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"classes/Repository.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AuthModule.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshTokenGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"classes/EmailDTO.html":{},"controllers/GithubAppController.html":{},"classes/GithubTokenDTO.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"controllers/RepositoryController.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"dependencies.html":{}}}],["nestschema",{"_index":620,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["new",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"coverage.html":{},"index.html":{}}}],["none",{"_index":847,"title":{},"body":{"injectables/EmailService.html":{}}}],["notfixedversions",{"_index":1711,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["notfixedversions.map((v",{"_index":1718,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["notfoundexception",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/RepositoryService.html":{}}}],["notfoundexception('could",{"_index":1440,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["notfoundexception('no",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception('repository",{"_index":1400,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["notfoundexception('user",{"_index":850,"title":{},"body":{"injectables/EmailService.html":{}}}],["notfoundexception(`repository",{"_index":1390,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["notfoundids",{"_index":1383,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["notfoundids.join",{"_index":1388,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["notfoundids.length",{"_index":1386,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["now",{"_index":989,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["npm",{"_index":434,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"index.html":{}}}],["npm'})@isnotempty",{"_index":431,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{}}}],["npmsresponse",{"_index":572,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["npmsresponse.data",{"_index":587,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["null",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyRepository.html":{},"injectables/VulnerabilitiesService.html":{}}}],["number",{"_index":625,"title":{},"body":{"classes/Dependency.html":{},"modules/EmailModule.html":{},"classes/License.html":{},"injectables/RepositoryService.html":{},"classes/Vulnerability.html":{}}}],["nvd",{"_index":1636,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["nvd_published_at",{"_index":1613,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["nvddata",{"_index":1541,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["nvddata.vulnerabilities.length",{"_index":1578,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["nvddata.vulnerabilities[0]?.cve",{"_index":1580,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["nvddata?.vulnerabilities",{"_index":1577,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["nvddescription",{"_index":1543,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["nvdvulnstatus",{"_index":1542,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["oauth",{"_index":1936,"title":{},"body":{"index.html":{}}}],["object",{"_index":605,"title":{},"body":{"classes/Dependency.html":{},"classes/License.html":{},"classes/Vulnerability.html":{}}}],["object.entries(dependencies).map(([pkg",{"_index":1394,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["object.keys(data.versions",{"_index":551,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["objectid",{"_index":900,"title":{},"body":{"classes/GithubApp.html":{},"classes/Repository.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["objectids",{"_index":1456,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["onactive",{"_index":645,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onactive(job",{"_index":655,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["oncompleted",{"_index":646,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["oncompleted(job",{"_index":660,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["ondelayed",{"_index":647,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["ondelayed(job",{"_index":663,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["one",{"_index":784,"title":{},"body":{"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"injectables/VulnerabilitiesService.html":{}}}],["oneventactive",{"_index":648,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["oneventactive(job",{"_index":666,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onlyselected",{"_index":1292,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["onmoduleinit",{"_index":1274,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["onqueueevent",{"_index":677,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onqueueevent('active",{"_index":667,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onqueueevent('delayed",{"_index":664,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onqueueevent('waiting",{"_index":670,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onwaiting",{"_index":649,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onwaiting(jobid",{"_index":669,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onworkerevent",{"_index":676,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onworkerevent('active",{"_index":657,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["onworkerevent('completed",{"_index":661,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["open",{"_index":2024,"title":{},"body":{"index.html":{}}}],["openissues",{"_index":637,"title":{},"body":{"classes/Dependency.html":{}}}],["operations",{"_index":1428,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["operationtype",{"_index":1320,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["optimized",{"_index":1856,"title":{},"body":{"index.html":{}}}],["optional",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":1337,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["osv",{"_index":1677,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["otherwise",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["otp",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"classes/EmailTemplate.html":{},"modules/OTPSecretSchemaModule.html":{}}}],["otpcode",{"_index":870,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["otpsecret",{"_index":284,"title":{"classes/OTPSecret.html":{}},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"coverage.html":{}}}],["otpsecret.name",{"_index":1175,"title":{},"body":{"modules/OTPSecretSchemaModule.html":{}}}],["otpsecretdocument",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"classes/OTPSecret.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["otpsecretmodel",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["otpsecretschema",{"_index":1173,"title":{},"body":{"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otpsecretschemamodule",{"_index":56,"title":{"modules/OTPSecretSchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules.html":{},"overview.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1932,"title":{},"body":{"index.html":{}}}],["overview",{"_index":2032,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1182,"title":{},"body":{"classes/Repository.html":{}}}],["ownertype",{"_index":1183,"title":{},"body":{"classes/Repository.html":{}}}],["package",{"_index":1395,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"index.html":{}}}],["package.json",{"_index":1441,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["page",{"_index":1217,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"miscellaneous/functions.html":{}}}],["pagenum",{"_index":1358,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["param",{"_index":446,"title":{},"body":{"controllers/DependenciesController.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/VulnerabilitiesController.html":{}}}],["parameters",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1638,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["parent",{"_index":714,"title":{},"body":{"classes/DependencyRepository.html":{}}}],["parseint",{"_index":806,"title":{},"body":{"modules/EmailModule.html":{}}}],["parseint(process.env.salt_round",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["parsenpmregistrydata",{"_index":474,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["parsenpmregistrydata(data",{"_index":497,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["parsenpmsdata",{"_index":475,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["parsenpmsdata(data",{"_index":506,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["parsenvdresponse",{"_index":1517,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["parsenvdresponse(nvddata",{"_index":1539,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["parseosvdata",{"_index":1518,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["parseosvdata(data",{"_index":1550,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["pass",{"_index":814,"title":{},"body":{"modules/EmailModule.html":{}}}],["passport",{"_index":1062,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1056,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1072,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":1067,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["password",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{}}}],["path",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RepositoryService.html":{}}}],["payload",{"_index":992,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":1078,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":1077,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pem",{"_index":1922,"title":{},"body":{"index.html":{}}}],["per",{"_index":687,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{},"index.html":{}}}],["perform",{"_index":1434,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["performed",{"_index":947,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["permissions",{"_index":1912,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1630,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["pipeline",{"_index":1367,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["pkg",{"_index":1396,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["platforms",{"_index":1966,"title":{},"body":{"index.html":{}}}],["playwright",{"_index":1881,"title":{},"body":{"index.html":{}}}],["please",{"_index":749,"title":{},"body":{"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{}}}],["popularity",{"_index":629,"title":{},"body":{"classes/Dependency.html":{}}}],["populate",{"_index":1338,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["populate('dependencyid",{"_index":1576,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["populate('githubapp",{"_index":1399,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["populate('user",{"_index":1336,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["port",{"_index":805,"title":{},"body":{"modules/EmailModule.html":{}}}],["post",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["post('create",{"_index":453,"title":{},"body":{"controllers/DependenciesController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["post('create')@apibearerauth()@useguards(accesstokenguard",{"_index":440,"title":{},"body":{"controllers/DependenciesController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["post('github",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('seed",{"_index":1125,"title":{},"body":{"controllers/LicensesController.html":{}}}],["post('seed')@apibearerauth()@useguards(accesstokenguard",{"_index":1116,"title":{},"body":{"controllers/LicensesController.html":{}}}],["post('select",{"_index":1227,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["post('send",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('social",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('verify",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('webhook",{"_index":925,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["potential",{"_index":1851,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":1842,"title":{},"body":{"index.html":{}}}],["powershell):example",{"_index":1930,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1987,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/EmailController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["prepare",{"_index":1426,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["preservenullandemptyarrays",{"_index":1350,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["prev",{"_index":697,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["preview",{"_index":1983,"title":{},"body":{"index.html":{}}}],["private",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/LicensesService.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"index.html":{}}}],["privatekey",{"_index":1001,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["privilegesrequired",{"_index":1741,"title":{},"body":{"classes/Vulnerability.html":{}}}],["process",{"_index":650,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["process(job",{"_index":673,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["process.env.github_app_id",{"_index":1000,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["process.env.github_private_key",{"_index":1003,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["process.env.jwt_expire",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expire_refresh_token",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_secret",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["processaffectedversions",{"_index":1519,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["processaffectedversions(dependency",{"_index":1552,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["processed",{"_index":702,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["processing",{"_index":693,"title":{},"body":{"classes/DependencyConsumer.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["processor",{"_index":675,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["processor('dependency",{"_index":679,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["processor('vulnerabilities",{"_index":1760,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["processvulnerability",{"_index":1520,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["processvulnerability(dependency",{"_index":1556,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["prod",{"_index":1982,"title":{},"body":{"index.html":{}}}],["production",{"_index":1980,"title":{},"body":{"index.html":{}}}],["production:example",{"_index":1996,"title":{},"body":{"index.html":{}}}],["project",{"_index":1354,"title":{},"body":{"injectables/RepositoryService.html":{},"index.html":{}}}],["projects",{"_index":858,"title":{},"body":{"injectables/EmailService.html":{}}}],["promise",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.all",{"_index":1422,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["prop",{"_index":618,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["prop({default",{"_index":1190,"title":{},"body":{"classes/Repository.html":{}}}],["prop({required",{"_index":598,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["prop({type",{"_index":899,"title":{},"body":{"classes/GithubApp.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{}}}],["properties",{"_index":413,"title":{"properties.html":{}},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"classes/GithubApp.html":{},"classes/GithubTokenDTO.html":{},"classes/License.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"properties.html":{}}}],["provide",{"_index":750,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{}}}],["provided",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["public",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{}}}],["publishdate",{"_index":537,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/DependencyVersion.html":{}}}],["published",{"_index":1609,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["pull",{"_index":2012,"title":{},"body":{"index.html":{}}}],["quality",{"_index":623,"title":{},"body":{"classes/Dependency.html":{},"index.html":{}}}],["query",{"_index":929,"title":{},"body":{"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"controllers/RepositoryController.html":{}}}],["query('code",{"_index":933,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["query('installation_id",{"_index":934,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["query('limit",{"_index":1246,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["query('page",{"_index":1245,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["queue",{"_index":481,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["range",{"_index":1632,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["range.events?.find((event",{"_index":1626,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["ranges",{"_index":1623,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["read",{"_index":1914,"title":{},"body":{"index.html":{}}}],["readdependencies",{"_index":1275,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["readdependencies(repoid",{"_index":1295,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["readdependency",{"_index":1209,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["readdependency(@query('repo",{"_index":1258,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["readdependency(repoid",{"_index":1222,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"controllers/LicensesController.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["record",{"_index":1286,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["ref",{"_index":717,"title":{},"body":{"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/Repository.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["ref.url",{"_index":1618,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["reference",{"_index":903,"title":{},"body":{"classes/GithubApp.html":{},"classes/License.html":{},"classes/Repository.html":{}}}],["referencenumber",{"_index":1087,"title":{},"body":{"classes/License.html":{}}}],["references",{"_index":1088,"title":{},"body":{"classes/License.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["reflect",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/RefreshTokenGuard.html":{}}}],["refresh.strategy",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":1055,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"coverage.html":{}}}],["refresh.strategy.ts:12",{"_index":1058,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["refresh.strategy.ts:22",{"_index":1060,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["refreshtoken",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{}}}],["refreshtokenguard",{"_index":182,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokens",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokens(@req",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(refreshtoken",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens(req",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["related",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["release",{"_index":1891,"title":{},"body":{"index.html":{}}}],["releasesfrequency",{"_index":635,"title":{},"body":{"classes/Dependency.html":{}}}],["reliability",{"_index":1879,"title":{},"body":{"index.html":{}}}],["removeoncomplete",{"_index":528,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["repeat",{"_index":1572,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["reply",{"_index":817,"title":{},"body":{"modules/EmailModule.html":{}}}],["repo",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{}}}],["repo')@apibearerauth()@useguards(accesstokenguard",{"_index":1232,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["repo._id.tostring",{"_index":1382,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repodescription",{"_index":1184,"title":{},"body":{"classes/Repository.html":{}}}],["repoid",{"_index":1225,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{}}}],["reponame",{"_index":1185,"title":{},"body":{"classes/Repository.html":{}}}],["repos",{"_index":1248,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["repos')@apibearerauth()@useguards(accesstokenguard",{"_index":1220,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["repositories",{"_index":1206,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"index.html":{}}}],["repositories[0].repositories",{"_index":1371,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repositories[0].totalcount.length",{"_index":1373,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repositories[0].totalcount[0].count",{"_index":1374,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repositoriesresult",{"_index":1370,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repository",{"_index":502,"title":{"classes/Repository.html":{}},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"classes/Repository.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["repository._id.tostring",{"_index":1340,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repository.controller",{"_index":1265,"title":{},"body":{"modules/RepositoryModule.html":{}}}],["repository.githubapp.installationid",{"_index":1402,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repository.name",{"_index":1270,"title":{},"body":{"modules/RepositorySchemaModule.html":{}}}],["repository.repourl/contents",{"_index":1446,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repository.schema",{"_index":728,"title":{},"body":{"modules/DependencyRepositorySchemaModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{}}}],["repository.schema.ts",{"_index":712,"title":{},"body":{"classes/DependencyRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["repository.schema.ts:13",{"_index":718,"title":{},"body":{"classes/DependencyRepository.html":{}}}],["repository.schema.ts:20",{"_index":721,"title":{},"body":{"classes/DependencyRepository.html":{}}}],["repository.schema.ts:23",{"_index":719,"title":{},"body":{"classes/DependencyRepository.html":{}}}],["repository.schema.ts:31",{"_index":720,"title":{},"body":{"classes/DependencyRepository.html":{}}}],["repository.service",{"_index":1239,"title":{},"body":{"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{}}}],["repository.user['_id'].tostring",{"_index":1341,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repositorycontroller",{"_index":1204,"title":{"controllers/RepositoryController.html":{}},"body":{"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"coverage.html":{}}}],["repositorydocument",{"_index":985,"title":{},"body":{"injectables/GithubAppService.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["repositoryid",{"_index":715,"title":{},"body":{"classes/DependencyRepository.html":{},"injectables/RepositoryService.html":{}}}],["repositorymodel",{"_index":1281,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["repositorymodule",{"_index":57,"title":{"modules/RepositoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["repositoryschema",{"_index":1202,"title":{},"body":{"classes/Repository.html":{},"modules/RepositorySchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositoryschemamodule",{"_index":58,"title":{"modules/RepositorySchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"modules.html":{},"overview.html":{}}}],["repositoryservice",{"_index":1238,"title":{"injectables/RepositoryService.html":{}},"body":{"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"overview.html":{}}}],["repourl",{"_index":1186,"title":{},"body":{"classes/Repository.html":{}}}],["req",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GithubAppController.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"controllers/RepositoryController.html":{}}}],["req.get('authorization').replace('bearer",{"_index":1068,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["req['user'].refreshtoken",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["req['user'].userid",{"_index":936,"title":{},"body":{"controllers/GithubAppController.html":{},"controllers/RepositoryController.html":{}}}],["request",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"controllers/RepositoryController.html":{},"index.html":{}}}],["requests",{"_index":2013,"title":{},"body":{"index.html":{}}}],["required",{"_index":622,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}],["resources",{"_index":2003,"title":{},"body":{"index.html":{}}}],["response",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["response.data",{"_index":576,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["response.data.login",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":16,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"index.html":{}}}],["retry",{"_index":1694,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["return",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/DependencyConsumer.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":2023,"title":{},"body":{"index.html":{}}}],["risks",{"_index":1852,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":1008,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["run",{"_index":1957,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":515,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"dependencies.html":{}}}],["sanitizeuser",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["sanitizeuser(user",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":1940,"title":{},"body":{"index.html":{}}}],["savedependencies",{"_index":1276,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["savedependencies(repoid",{"_index":1297,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["savedvuln",{"_index":1553,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["savedvuln._id",{"_index":1715,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["savedvuln.id",{"_index":1710,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["scan",{"_index":1867,"title":{},"body":{"index.html":{}}}],["scanning",{"_index":1863,"title":{},"body":{"index.html":{}}}],["scans",{"_index":1849,"title":{},"body":{"index.html":{}}}],["schema",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"modules/GithubAppSchemaModule.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"classes/Repository.html":{},"modules/RepositorySchemaModule.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/Vulnerability.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{}}}],["schema.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{}}}],["schema.module.ts",{"_index":727,"title":{},"body":{"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/OTPSecretSchemaModule.html":{},"modules/RepositorySchemaModule.html":{},"modules/UserSchemaModule.html":{},"modules/VulnerabilitySchemaModule.html":{}}}],["schema/dependency",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/dependency.schema",{"_index":510,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["schema/dependency.schema.ts",{"_index":596,"title":{},"body":{"classes/Dependency.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/dependency.schema.ts:12",{"_index":603,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:15",{"_index":601,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:18",{"_index":611,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:21",{"_index":607,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:24",{"_index":615,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:27",{"_index":614,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:30",{"_index":613,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:33",{"_index":599,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:36",{"_index":610,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:39",{"_index":606,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:61",{"_index":616,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:71",{"_index":609,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/dependency.schema.ts:9",{"_index":600,"title":{},"body":{"classes/Dependency.html":{}}}],["schema/github",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/GithubApp.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/Repository.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/license",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{}}}],["schema/license.schema",{"_index":1142,"title":{},"body":{"injectables/LicensesService.html":{}}}],["schema/license.schema.ts",{"_index":1080,"title":{},"body":{"classes/License.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/license.schema.ts:12",{"_index":1098,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:15",{"_index":1099,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:18",{"_index":1092,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:21",{"_index":1093,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:24",{"_index":1100,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:27",{"_index":1101,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:30",{"_index":1094,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:33",{"_index":1096,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:36",{"_index":1102,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:39",{"_index":1097,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:42",{"_index":1104,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:49",{"_index":1103,"title":{},"body":{"classes/License.html":{}}}],["schema/license.schema.ts:9",{"_index":1095,"title":{},"body":{"classes/License.html":{}}}],["schema/otp",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/repository",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{}}}],["schema/repository.schema",{"_index":986,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["schema/repository.schema.ts",{"_index":1177,"title":{},"body":{"classes/Repository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/repository.schema.ts:11",{"_index":1199,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:14",{"_index":1197,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:17",{"_index":1198,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:20",{"_index":1196,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:23",{"_index":1194,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:26",{"_index":1195,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:29",{"_index":1189,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:32",{"_index":1192,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:35",{"_index":1187,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:38",{"_index":1188,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:41",{"_index":1193,"title":{},"body":{"classes/Repository.html":{}}}],["schema/repository.schema.ts:44",{"_index":1191,"title":{},"body":{"classes/Repository.html":{}}}],["schema/user",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"modules/UserSchemaModule.html":{}}}],["schema/user.schema",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{}}}],["schema/user.schema.ts",{"_index":1469,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/user.schema.ts:14",{"_index":1473,"title":{},"body":{"classes/User.html":{}}}],["schema/user.schema.ts:17",{"_index":1474,"title":{},"body":{"classes/User.html":{}}}],["schema/user.schema.ts:20",{"_index":1479,"title":{},"body":{"classes/User.html":{}}}],["schema/user.schema.ts:23",{"_index":1478,"title":{},"body":{"classes/User.html":{}}}],["schema/user.schema.ts:26",{"_index":1472,"title":{},"body":{"classes/User.html":{}}}],["schema/user.schema.ts:29",{"_index":1476,"title":{},"body":{"classes/User.html":{}}}],["schema/user.schema.ts:32",{"_index":1475,"title":{},"body":{"classes/User.html":{}}}],["schema/vulnerability",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/vulnerability.schema",{"_index":1565,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["schema/vulnerability.schema.ts",{"_index":1722,"title":{},"body":{"classes/Vulnerability.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema/vulnerability.schema.ts:13",{"_index":1725,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:16",{"_index":1727,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:19",{"_index":1735,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:22",{"_index":1726,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:25",{"_index":1723,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:28",{"_index":1732,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:31",{"_index":1724,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:34",{"_index":1729,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:37",{"_index":1728,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:40",{"_index":1733,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:43",{"_index":1731,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:46",{"_index":1730,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:49",{"_index":1736,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schema/vulnerability.schema.ts:55",{"_index":1734,"title":{},"body":{"classes/Vulnerability.html":{}}}],["schemafactory",{"_index":619,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["schemafactory.createforclass(dependency",{"_index":642,"title":{},"body":{"classes/Dependency.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(dependencyrepository",{"_index":725,"title":{},"body":{"classes/DependencyRepository.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(dependencyversion",{"_index":740,"title":{},"body":{"classes/DependencyVersion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(githubapp",{"_index":906,"title":{},"body":{"classes/GithubApp.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(license",{"_index":1110,"title":{},"body":{"classes/License.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(otpsecret",{"_index":1174,"title":{},"body":{"classes/OTPSecret.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(repository",{"_index":1203,"title":{},"body":{"classes/Repository.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1481,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(vulnerability",{"_index":1748,"title":{},"body":{"classes/Vulnerability.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(vulnerabilityversion",{"_index":1777,"title":{},"body":{"classes/VulnerabilityVersion.html":{},"miscellaneous/variables.html":{}}}],["schemasmodule",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["scope",{"_index":1743,"title":{},"body":{"classes/Vulnerability.html":{}}}],["score",{"_index":509,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/Dependency.html":{}}}],["second",{"_index":690,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["seconds",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubAppService.html":{}}}],["secret",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"index.html":{}}}],["secret.schema",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"modules/OTPSecretSchemaModule.html":{}}}],["secret.schema.ts",{"_index":1164,"title":{},"body":{"classes/OTPSecret.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["secret.schema.ts:11",{"_index":1170,"title":{},"body":{"classes/OTPSecret.html":{}}}],["secret.schema.ts:14",{"_index":1167,"title":{},"body":{"classes/OTPSecret.html":{}}}],["secret.schema.ts:17",{"_index":1171,"title":{},"body":{"classes/OTPSecret.html":{}}}],["secret.schema.ts:8",{"_index":1169,"title":{},"body":{"classes/OTPSecret.html":{}}}],["secretorkey",{"_index":1066,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["secure",{"_index":810,"title":{},"body":{"modules/EmailModule.html":{},"index.html":{}}}],["security",{"_index":1847,"title":{},"body":{"index.html":{}}}],["see",{"_index":2025,"title":{},"body":{"index.html":{}}}],["seed",{"_index":1136,"title":{},"body":{"injectables/LicensesService.html":{}}}],["seeded",{"_index":1157,"title":{},"body":{"injectables/LicensesService.html":{}}}],["selectall",{"_index":1277,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["selectall(userid",{"_index":1299,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["selectallrepos",{"_index":1210,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectallrepos(@req",{"_index":1255,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectallrepos(req",{"_index":1226,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selected",{"_index":1201,"title":{},"body":{"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["selectedrepo",{"_index":1449,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["selectedrepos",{"_index":1278,"title":{},"body":{"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["selectedrepos(page",{"_index":1301,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["selectrepo",{"_index":1211,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{}}}],["selectrepo(@body",{"_index":1251,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectrepo(selectrepourlssingledto",{"_index":1230,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectrepo(urlid",{"_index":1303,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["selectrepos",{"_index":1212,"title":{},"body":{"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{}}}],["selectrepos(@body",{"_index":1249,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectrepos(selectrepourlsdto",{"_index":1235,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectrepos(urlids",{"_index":1306,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["selectrepourldto",{"_index":1241,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectrepourlsdto",{"_index":1236,"title":{"classes/SelectRepoUrlsDto.html":{}},"body":{"controllers/RepositoryController.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"coverage.html":{}}}],["selectrepourlsingledto",{"_index":1231,"title":{"classes/SelectRepoUrlSingleDTO.html":{}},"body":{"controllers/RepositoryController.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"coverage.html":{}}}],["selectrepourlssingledto",{"_index":1234,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["selectrepourlssingledto.selectedrepo",{"_index":1253,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["send",{"_index":849,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemail",{"_index":823,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemail(emailaddress",{"_index":830,"title":{},"body":{"injectables/EmailService.html":{}}}],["sender",{"_index":819,"title":{},"body":{"modules/EmailModule.html":{}}}],["sendotp",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendotp(@body",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendotp(dto",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendtoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendtoken(emailaddress",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":1959,"title":{},"body":{"index.html":{}}}],["service",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":523,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"index.html":{}}}],["settings",{"_index":1905,"title":{},"body":{"index.html":{}}}],["severity",{"_index":1652,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["severity['score",{"_index":1669,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["severity['type",{"_index":1664,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["shield",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["shown",{"_index":1946,"title":{},"body":{"index.html":{}}}],["signup",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(dto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":166,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["single",{"_index":1460,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["skip",{"_index":1353,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["skipval",{"_index":1291,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["smtp.gmail.com",{"_index":804,"title":{},"body":{"modules/EmailModule.html":{}}}],["sociallogin(@body",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["sociallogindto",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"controllers/EmailController.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"controllers/LicensesController.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"injectables/RefreshTokenGuard.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"index.html":{}}}],["spaces",{"_index":765,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["spdx.json",{"_index":1148,"title":{},"body":{"injectables/LicensesService.html":{}}}],["spdxid",{"_index":1121,"title":{},"body":{"controllers/LicensesController.html":{},"injectables/LicensesService.html":{}}}],["spdxid.touppercase",{"_index":1159,"title":{},"body":{"injectables/LicensesService.html":{}}}],["special",{"_index":786,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["src/.../dependency",{"_index":2042,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../dependency.schema.ts",{"_index":2041,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../github",{"_index":2043,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../license.schema.ts",{"_index":2044,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../otp",{"_index":2045,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination.validator.ts",{"_index":1839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repository.schema.ts",{"_index":2046,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1835,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../validate.ts",{"_index":1838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../vulnerability",{"_index":2048,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../vulnerability.schema.ts",{"_index":2047,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["src/configuration/app.config",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/database/dependency",{"_index":465,"title":{},"body":{"modules/DependenciesModule.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"modules/DependencyRepositorySchemaModule.html":{},"modules/DependencySchemaModule.html":{},"classes/DependencyVersion.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"modules/VulnerabilitiesModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/githubapp",{"_index":892,"title":{},"body":{"classes/GithubApp.html":{},"modules/GithubAppModule.html":{},"modules/GithubAppSchemaModule.html":{},"modules/RepositoryModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/license",{"_index":1079,"title":{},"body":{"classes/License.html":{},"modules/LicenseSchemaModule.html":{},"modules/LicensesModule.html":{},"injectables/LicensesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/otpsecret",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmailModule.html":{},"classes/OTPSecret.html":{},"modules/OTPSecretSchemaModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/repository",{"_index":953,"title":{},"body":{"modules/GithubAppModule.html":{},"classes/Repository.html":{},"modules/RepositoryModule.html":{},"modules/RepositorySchemaModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/user",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/vulnerability",{"_index":1512,"title":{},"body":{"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1793,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:13",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:17",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:22",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:27",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:34",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:52",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:109",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:130",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:134",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:21",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:30",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:55",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:60",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:79",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:84",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:99",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/auth.dto.ts",{"_index":744,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/auth.dto.ts:106",{"_index":1484,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["src/modules/auth/dto/auth.dto.ts:116",{"_index":754,"title":{},"body":{"classes/EmailDTO.html":{}}}],["src/modules/auth/dto/auth.dto.ts:20",{"_index":1465,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dto/auth.dto.ts:27",{"_index":1466,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dto/auth.dto.ts:49",{"_index":1468,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dto/auth.dto.ts:58",{"_index":1161,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/auth.dto.ts:76",{"_index":1163,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/auth.dto.ts:86",{"_index":1053,"title":{},"body":{"classes/GithubTokenDTO.html":{}}}],["src/modules/auth/dto/auth.dto.ts:97",{"_index":1486,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["src/modules/auth/guards/accesstoken.guard.ts",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/modules/auth/guards/refreshtoken.guard.ts",{"_index":1176,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt",{"_index":1054,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts",{"_index":1071,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:14",{"_index":1075,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:6",{"_index":1073,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts",{"_index":643,"title":{},"body":{"classes/DependencyConsumer.html":{},"coverage.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:19",{"_index":652,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:26",{"_index":658,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:33",{"_index":668,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:38",{"_index":671,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:43",{"_index":665,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:48",{"_index":662,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.consumer.ts:52",{"_index":674,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["src/modules/dependencies/dependencies.controller.ts",{"_index":436,"title":{},"body":{"controllers/DependenciesController.html":{},"coverage.html":{}}}],["src/modules/dependencies/dependencies.controller.ts:14",{"_index":441,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["src/modules/dependencies/dependencies.controller.ts:21",{"_index":444,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["src/modules/dependencies/dependencies.module.ts",{"_index":463,"title":{},"body":{"modules/DependenciesModule.html":{}}}],["src/modules/dependencies/dependencies.service.ts",{"_index":469,"title":{},"body":{"injectables/DependenciesService.html":{},"coverage.html":{}}}],["src/modules/dependencies/dependencies.service.ts:107",{"_index":498,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:125",{"_index":507,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:137",{"_index":486,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:19",{"_index":482,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:29",{"_index":483,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:46",{"_index":489,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:60",{"_index":492,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:67",{"_index":496,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dependencies.service.ts:78",{"_index":487,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["src/modules/dependencies/dto/create",{"_index":411,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"coverage.html":{}}}],["src/modules/email/email.controller.ts",{"_index":742,"title":{},"body":{"controllers/EmailController.html":{},"coverage.html":{}}}],["src/modules/email/email.module.ts",{"_index":794,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/modules/email/email.service.ts",{"_index":820,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/modules/email/email.service.ts:15",{"_index":826,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/email.service.ts:25",{"_index":829,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/email.service.ts:28",{"_index":828,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/email.service.ts:48",{"_index":831,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/templates/otp",{"_index":865,"title":{},"body":{"classes/EmailTemplate.html":{},"coverage.html":{}}}],["src/modules/github",{"_index":908,"title":{},"body":{"controllers/GithubAppController.html":{},"modules/GithubAppModule.html":{},"injectables/GithubAppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/licenses/licenses.controller.ts",{"_index":1114,"title":{},"body":{"controllers/LicensesController.html":{},"coverage.html":{}}}],["src/modules/licenses/licenses.controller.ts:13",{"_index":1117,"title":{},"body":{"controllers/LicensesController.html":{}}}],["src/modules/licenses/licenses.controller.ts:20",{"_index":1120,"title":{},"body":{"controllers/LicensesController.html":{}}}],["src/modules/licenses/licenses.module.ts",{"_index":1133,"title":{},"body":{"modules/LicensesModule.html":{}}}],["src/modules/licenses/licenses.service.ts",{"_index":1135,"title":{},"body":{"injectables/LicensesService.html":{},"coverage.html":{}}}],["src/modules/licenses/licenses.service.ts:13",{"_index":1138,"title":{},"body":{"injectables/LicensesService.html":{}}}],["src/modules/licenses/licenses.service.ts:19",{"_index":1141,"title":{},"body":{"injectables/LicensesService.html":{}}}],["src/modules/licenses/licenses.service.ts:26",{"_index":1140,"title":{},"body":{"injectables/LicensesService.html":{}}}],["src/modules/repository/dto/bulkselect.dto.ts",{"_index":1448,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"coverage.html":{}}}],["src/modules/repository/dto/bulkselect.dto.ts:12",{"_index":1462,"title":{},"body":{"classes/SelectRepoUrlsDto.html":{}}}],["src/modules/repository/dto/bulkselect.dto.ts:22",{"_index":1452,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{}}}],["src/modules/repository/repository.controller.ts",{"_index":1205,"title":{},"body":{"controllers/RepositoryController.html":{},"coverage.html":{}}}],["src/modules/repository/repository.controller.ts:27",{"_index":1216,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["src/modules/repository/repository.controller.ts:41",{"_index":1237,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["src/modules/repository/repository.controller.ts:47",{"_index":1233,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["src/modules/repository/repository.controller.ts:56",{"_index":1221,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["src/modules/repository/repository.controller.ts:70",{"_index":1229,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["src/modules/repository/repository.controller.ts:77",{"_index":1224,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["src/modules/repository/repository.module.ts",{"_index":1264,"title":{},"body":{"modules/RepositoryModule.html":{}}}],["src/modules/repository/repository.service.ts",{"_index":1271,"title":{},"body":{"injectables/RepositoryService.html":{},"coverage.html":{}}}],["src/modules/repository/repository.service.ts:142",{"_index":1289,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:245",{"_index":1307,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:274",{"_index":1304,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:28",{"_index":1284,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:293",{"_index":1302,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:321",{"_index":1300,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:330",{"_index":1287,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:339",{"_index":1298,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:408",{"_index":1296,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:41",{"_index":1294,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:44",{"_index":1309,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/repository.service.ts:90",{"_index":1293,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/modules/repository/validator/pagination.validator.ts",{"_index":1801,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/vulnerabilities/dto/create",{"_index":426,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{},"coverage.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts",{"_index":1750,"title":{},"body":{"classes/VulnerabilityConsumer.html":{},"coverage.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:19",{"_index":1752,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:26",{"_index":1754,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:33",{"_index":1757,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:38",{"_index":1758,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:43",{"_index":1756,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:48",{"_index":1755,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.consumer.ts:52",{"_index":1759,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.controller.ts",{"_index":1488,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"coverage.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.controller.ts:16",{"_index":1492,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.controller.ts:23",{"_index":1495,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.module.ts",{"_index":1508,"title":{},"body":{"modules/VulnerabilitiesModule.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts",{"_index":1513,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"coverage.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:120",{"_index":1536,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:171",{"_index":1528,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:184",{"_index":1560,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:21",{"_index":1525,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:227",{"_index":1538,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:275",{"_index":1557,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:316",{"_index":1555,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:34",{"_index":1526,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:47",{"_index":1533,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:53",{"_index":1540,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/modules/vulnerabilities/vulnerabilities.service.ts:94",{"_index":1551,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["src/schemas/schemas.module",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/schemas/user.schema",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["standardlicensetemplate",{"_index":1089,"title":{},"body":{"classes/License.html":{}}}],["start:devopen",{"_index":1960,"title":{},"body":{"index.html":{}}}],["started",{"_index":1841,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":867,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["status",{"_index":915,"title":{},"body":{"controllers/GithubAppController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityVersion.html":{}}}],["step",{"_index":1917,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1971,"title":{},"body":{"index.html":{}}}],["stored",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy",{"_index":1057,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["strategy/jwt",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["stream",{"_index":1346,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["string",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"classes/License.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"index.html":{}}}],["strings",{"_index":1455,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["string})@isemail",{"_index":747,"title":{},"body":{"classes/EmailDTO.html":{},"classes/VerifyEmailDto.html":{}}}],["string})@isstring()@isnotempty({message",{"_index":1485,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["strong",{"_index":770,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["strongp@ssw0rd",{"_index":772,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["strongp@ssw0rd!'})@isstring()@isnotempty()@isstrongpassword({minlength",{"_index":1467,"title":{},"body":{"classes/SignupDto.html":{}}}],["strongp@ssw0rd!'})@isstring()@isstrongpassword({minlength",{"_index":1162,"title":{},"body":{"classes/LoginDto.html":{}}}],["structure",{"_index":1583,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["structured",{"_index":1884,"title":{},"body":{"index.html":{}}}],["subject",{"_index":860,"title":{},"body":{"injectables/EmailService.html":{}}}],["submit",{"_index":2022,"title":{},"body":{"index.html":{}}}],["submitting",{"_index":2011,"title":{},"body":{"index.html":{}}}],["summary",{"_index":1090,"title":{},"body":{"classes/License.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["super",{"_index":691,"title":{},"body":{"classes/DependencyConsumer.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/VulnerabilityConsumer.html":{}}}],["support",{"_index":2027,"title":{},"body":{"modules.html":{}}}],["support@depshieldio",{"_index":884,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["svg",{"_index":2028,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":707,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["symbol",{"_index":787,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["table",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["tags']?.latest",{"_index":562,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["technologies",{"_index":1948,"title":{},"body":{"index.html":{}}}],["templates/otp",{"_index":833,"title":{},"body":{"injectables/EmailService.html":{}}}],["test",{"_index":1885,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1877,"title":{},"body":{"index.html":{}}}],["tests",{"_index":626,"title":{},"body":{"classes/Dependency.html":{},"index.html":{}}}],["this.appservice.gethello",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.githublogin(dto",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(dto",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(refreshtoken",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.sendtoken(dto.emailaddress",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.sociallogin(dto",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifytoken(verifyemaildto",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.checkuser(dto.emailaddress",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('email_sender",{"_index":859,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('nvd_api_key",{"_index":1640,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.dependenciesservice.create(createdependencydto",{"_index":455,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["this.dependenciesservice.getdependencyinfo(job.data",{"_index":709,"title":{},"body":{"classes/DependencyConsumer.html":{}}}],["this.dependenciesservice.getdetails(dependencyid",{"_index":458,"title":{},"body":{"controllers/DependenciesController.html":{}}}],["this.dependenciesservice.getdetailsbydependencyname",{"_index":1683,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.dependenciesservice.getversionbydepversion",{"_index":1704,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.dependenciesservice.getversionsinpublishrange",{"_index":1712,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.dependencymodel.aggregate",{"_index":529,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencymodel.aggregate(aggregate",{"_index":548,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencymodel.findoneandupdate",{"_index":522,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencymodel.updateone",{"_index":594,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencyqueue.add('get",{"_index":525,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencyrepositorymodel.bulkwrite(bulkops",{"_index":1437,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.dependencyservice.create",{"_index":1424,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.dependencyversionmodel.find",{"_index":536,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencyversionmodel.findone",{"_index":534,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.dependencyversionmodel.updateone",{"_index":579,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.detectcvssversionfromscore(severity['score",{"_index":1672,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.emailservice.sendemail(dto.emailaddress",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendemail(emailaddress",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.fetchallrepos(user",{"_index":1040,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.formatdependencies(alldependencies",{"_index":1418,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.generateandstorecode(emailaddress",{"_index":853,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.generatecode",{"_index":841,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.generatejwt",{"_index":1011,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.generatetokens",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generatetokens(user.id",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getrepositoriespipeline",{"_index":1393,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.getrepositoriespipeline(userid",{"_index":1368,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.githubapp.find",{"_index":1029,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.githubapp.findone",{"_index":1047,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.githubapp.updateone",{"_index":1038,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.githubappmodel.find",{"_index":1362,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.githubappservice.checkstatus(req['user'].userid",{"_index":938,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["this.githubappservice.createinstallationtoken",{"_index":1401,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.githubappservice.deletegithubapp(req['user'].userid",{"_index":941,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["this.githubappservice.handleappinstallations(data",{"_index":944,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["this.githubappservice.handlegithubrepositoryoperations(data",{"_index":945,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["this.githubappservice.installapp",{"_index":935,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["this.githubservice.getallrepos(dto.accesstoken",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.githubservice.getuseremails(dto.accesstoken",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.githubservice.readpackagejson",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.githubservice.verifyaccesstoken",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpservice.get",{"_index":573,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["this.httpservice.get(`${repository.repourl}/contents/package.json",{"_index":1403,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.httpservice.get(`https://registry.npmjs.org/${dep.dependencyname",{"_index":571,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.httpservice.get(repository.repourl",{"_index":1442,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.httpservice.post",{"_index":1013,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.httpservice.post(`https://api.osv.dev/v1/query",{"_index":1678,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.jwtservice.decode(refreshtoken",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{}}}],["this.licensemodel.findone",{"_index":1158,"title":{},"body":{"injectables/LicensesService.html":{}}}],["this.licensemodel.insertmany(jsondata",{"_index":1156,"title":{},"body":{"injectables/LicensesService.html":{}}}],["this.licensesservice.getdetails(spdxid",{"_index":1129,"title":{},"body":{"controllers/LicensesController.html":{}}}],["this.licensesservice.seed",{"_index":1126,"title":{},"body":{"controllers/LicensesController.html":{}}}],["this.logger.error",{"_index":1658,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.logger.error(`empty",{"_index":1644,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.logger.error(`error",{"_index":1768,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["this.logger.log",{"_index":692,"title":{},"body":{"classes/DependencyConsumer.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["this.logger.log(`fetching",{"_index":1635,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.logger.log(`finished",{"_index":1657,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.logger.log(`job",{"_index":700,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["this.logger.log(`no",{"_index":1682,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.logger.log(`processing",{"_index":698,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["this.logger.warn(`dependency",{"_index":1684,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.logger.warn(`no",{"_index":1648,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.mailerservice.sendmail",{"_index":856,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.otpsecretmodel.create",{"_index":848,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.otpsecretmodel.findone",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["this.parsenpmregistrydata(response.data",{"_index":577,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.parsenpmsdata(npmsresponse.data",{"_index":588,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["this.parsenvdresponse(response.data",{"_index":1646,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.parseosvdata(response.data",{"_index":1680,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.processaffectedversions(dependency",{"_index":1702,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.processvulnerability(dependency",{"_index":1686,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.repository.bulkwrite(bulkops",{"_index":1030,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.repositorymodel.aggregate(pipeline",{"_index":1369,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositorymodel.bulkwrite(bulkops",{"_index":1366,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositorymodel.find",{"_index":1377,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositorymodel.findone",{"_index":1334,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositorymodel.updatemany",{"_index":1389,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositorymodel.updateone",{"_index":1392,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositorymodel.watch",{"_index":1319,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.repositoryservice.getallrepos",{"_index":1247,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["this.repositoryservice.readdependencies",{"_index":1259,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["this.repositoryservice.selectall(req['user'].userid",{"_index":1256,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["this.repositoryservice.selectedrepos",{"_index":1254,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["this.repositoryservice.selectrepo",{"_index":1252,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["this.repositoryservice.selectrepos(selectrepourlsdto.selectedrepos",{"_index":1250,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["this.sanitizeuser(user",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.savedependencies",{"_index":1339,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.updaterefreshtoken(user.id",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updateseveritydata(vulndata",{"_index":1654,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.usermodel",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.create",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(userid",{"_index":1036,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["this.usermodel.findbyid(userid).exec",{"_index":1357,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.usermodel.findone",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["this.vulnerabilitiesservice.create(createvulnerabilitydto",{"_index":1501,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["this.vulnerabilitiesservice.getbycveid(cveid",{"_index":1504,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["this.vulnerabilitiesservice.getcveinfofromnvd",{"_index":1764,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["this.vulnerabilitiesservice.getvulnerabilityinfofromosv",{"_index":1761,"title":{},"body":{"classes/VulnerabilityConsumer.html":{}}}],["this.vulnerabilitymodel.findone",{"_index":1575,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.vulnerabilitymodel.findoneandupdate",{"_index":1656,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.vulnerabilityqueue.add",{"_index":1571,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.vulnerabilityversionmodel.bulkwrite(bulkops",{"_index":1721,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["this.watchrepositoryselection",{"_index":1314,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["throw",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/RepositoryService.html":{}}}],["time",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailTemplate.html":{},"injectables/GithubAppService.html":{}}}],["timedifference",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["timeout",{"_index":1642,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["timestamp",{"_index":844,"title":{},"body":{"injectables/EmailService.html":{}}}],["timestamps",{"_index":621,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/GithubApp.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"classes/User.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["token'})@isstring()@isnotempty({message",{"_index":1052,"title":{},"body":{"classes/GithubTokenDTO.html":{}}}],["tokenentry",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenentry.secret",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenentry.updatedat.gettime",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenresponse",{"_index":1012,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["tokenresponse.data.token",{"_index":1020,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["tokens",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens.refreshtoken",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["tool",{"_index":1843,"title":{},"body":{"index.html":{}}}],["tostring('utf8",{"_index":1005,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["totalcount",{"_index":1355,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["totalcountresult",{"_index":1372,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["tr",{"_index":1926,"title":{},"body":{"index.html":{}}}],["track",{"_index":1862,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1873,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":801,"title":{},"body":{"modules/EmailModule.html":{}}}],["trim",{"_index":1069,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["true",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/User.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["try",{"_index":1009,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{}}}],["type",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"controllers/DependenciesController.html":{},"injectables/DependenciesService.html":{},"classes/Dependency.html":{},"classes/DependencyConsumer.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/EmailDTO.html":{},"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"classes/GithubApp.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/License.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"classes/LoginDto.html":{},"classes/OTPSecret.html":{},"classes/Repository.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"controllers/VulnerabilitiesController.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2039,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1397,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["types",{"_index":511,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["types.objectid(dependencyid",{"_index":535,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["types.objectid(repoid",{"_index":1335,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["types.objectid(userid",{"_index":1048,"title":{},"body":{"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["types.objectid.isvalid(dependencyid",{"_index":541,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["unauthorizedexception",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/RepositoryService.html":{}}}],["unauthorizedexception('invalid",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{}}}],["unauthorizedexception('user",{"_index":1361,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["uncomment",{"_index":1154,"title":{},"body":{"injectables/LicensesService.html":{}}}],["undefined",{"_index":612,"title":{},"body":{"classes/Dependency.html":{},"classes/DependencyRepository.html":{},"classes/DependencyVersion.html":{},"classes/License.html":{},"classes/OTPSecret.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/User.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityVersion.html":{}}}],["undefined})@isarray()@ismongoid({each",{"_index":1461,"title":{},"body":{"classes/SelectRepoUrlsDto.html":{}}}],["unique",{"_index":1168,"title":{},"body":{"classes/OTPSecret.html":{},"classes/User.html":{}}}],["unknown",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DependenciesService.html":{},"injectables/EmailService.html":{},"controllers/GithubAppController.html":{},"injectables/GithubAppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["unlicensed",{"_index":2037,"title":{},"body":{"properties.html":{}}}],["unwind",{"_index":1349,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["up",{"_index":1935,"title":{},"body":{"index.html":{}}}],["update",{"_index":843,"title":{},"body":{"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"index.html":{}}}],["updated",{"_index":863,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RepositoryService.html":{}}}],["updatedat",{"_index":1166,"title":{},"body":{"classes/OTPSecret.html":{}}}],["updateddata",{"_index":575,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["updateddata['homepage",{"_index":589,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["updateddata['repository",{"_index":591,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["updatedescription",{"_index":1328,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["updatedescription.updatedfields.isselected",{"_index":1321,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["updateone",{"_index":1430,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["updaterefreshtoken",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["updaterefreshtoken(userid",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateseveritydata",{"_index":1521,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["updateseveritydata(vulndata",{"_index":1558,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["uppercase,lowercase",{"_index":785,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["upsert",{"_index":524,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["uri",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"classes/Repository.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"index.html":{}}}],["urlid",{"_index":1305,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["urlids",{"_index":1308,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["urlids.filter((id",{"_index":1384,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["urls",{"_index":1454,"title":{},"body":{"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["use",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailTemplate.html":{}}}],["usecase",{"_index":1091,"title":{},"body":{"classes/License.html":{}}}],["used",{"_index":1269,"title":{},"body":{"modules/RepositoryModule.html":{},"index.html":{}}}],["usefactory",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{}}}],["useguards",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"injectables/LicensesService.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["useguards(accesstokenguard",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DependenciesController.html":{},"controllers/GithubAppController.html":{},"controllers/LicensesController.html":{},"controllers/RepositoryController.html":{},"controllers/VulnerabilitiesController.html":{}}}],["useguards(accesstokenguard)@apibearerauth()@get('check",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GithubAppController.html":{}}}],["useguards(accesstokenguard)@apibearerauth()@get('disconnect",{"_index":918,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["useguards(accesstokenguard)@apibearerauth()@get('install",{"_index":921,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["useguards(accesstokenguard)@apibearerauth()@get('read",{"_index":1223,"title":{},"body":{"controllers/RepositoryController.html":{}}}],["useguards(refreshtokenguard",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(refreshtokenguard)@apibearerauth()@post('refresh",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":231,"title":{"classes/User.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/GithubApp.html":{},"injectables/GithubAppService.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/Repository.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"index.html":{}}}],["user.displayname",{"_index":855,"title":{},"body":{"injectables/EmailService.html":{}}}],["user.emailaddress",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.githubaccesstoken",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubAppService.html":{}}}],["user.isverified",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["user.name",{"_index":1483,"title":{},"body":{"modules/UserSchemaModule.html":{}}}],["user.password",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1482,"title":{},"body":{"modules/UserSchemaModule.html":{}}}],["user.toobject",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["user@example.com",{"_index":746,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["userdocument",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubAppService.html":{},"injectables/JwtStrategy.html":{},"injectables/RepositoryService.html":{}}}],["userinfo",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinteraction",{"_index":1742,"title":{},"body":{"classes/Vulnerability.html":{}}}],["usermodel",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GithubAppService.html":{},"injectables/RepositoryService.html":{}}}],["username",{"_index":872,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["usernamefield",{"_index":1063,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["username},verify",{"_index":874,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["userobject",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["userobject.password",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"modules/UserSchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschemamodule",{"_index":59,"title":{"modules/UserSchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/RepositoryModule.html":{},"modules/UserSchemaModule.html":{},"modules.html":{},"overview.html":{}}}],["userverificationotpemailtemplate",{"_index":868,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["userverificationotpemailtemplate(username",{"_index":869,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["uses",{"_index":1892,"title":{},"body":{"index.html":{}}}],["using",{"_index":812,"title":{},"body":{"modules/EmailModule.html":{},"injectables/RepositoryService.html":{}}}],["utf",{"_index":1147,"title":{},"body":{"injectables/LicensesService.html":{}}}],["utilizes",{"_index":1870,"title":{},"body":{"index.html":{}}}],["v._id",{"_index":1719,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["valid",{"_index":751,"title":{},"body":{"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"injectables/RepositoryService.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"injectables/VulnerabilitiesService.html":{}}}],["validate",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JWTRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{}}}],["validate(payload",{"_index":1074,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":1059,"title":{},"body":{"injectables/JWTRefreshTokenStrategy.html":{}}}],["validateauthcode",{"_index":982,"title":{},"body":{"injectables/GithubAppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateauthcode(authcode",{"_index":1031,"title":{},"body":{"injectables/GithubAppService.html":{},"miscellaneous/functions.html":{}}}],["validateinstallationid",{"_index":983,"title":{},"body":{"injectables/GithubAppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateinstallationid(installationid",{"_index":1032,"title":{},"body":{"injectables/GithubAppService.html":{},"miscellaneous/functions.html":{}}}],["validatepagination",{"_index":1310,"title":{},"body":{"injectables/RepositoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatepagination(page",{"_index":1360,"title":{},"body":{"injectables/RepositoryService.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":422,"title":{},"body":{"classes/CreateDependencyDTO.html":{},"classes/CreateVulnerabilityDTO.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SelectRepoUrlSingleDTO.html":{},"classes/SelectRepoUrlsDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"dependencies.html":{}}}],["validator/pagination.validator",{"_index":1311,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["validator/validate",{"_index":984,"title":{},"body":{"injectables/GithubAppService.html":{}}}],["value",{"_index":653,"title":{},"body":{"classes/DependencyConsumer.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1944,"title":{},"body":{"index.html":{}}}],["variable",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":114,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1965,"title":{},"body":{"index.html":{}}}],["vectorstring",{"_index":1668,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["vercel",{"_index":1968,"title":{},"body":{"index.html":{}}}],["vercel:example",{"_index":1977,"title":{},"body":{"index.html":{}}}],["vercel’s",{"_index":1994,"title":{},"body":{"index.html":{}}}],["verification",{"_index":789,"title":{},"body":{"classes/EmailDTO.html":{},"classes/EmailTemplate.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["verified",{"_index":852,"title":{},"body":{"injectables/EmailService.html":{}}}],["verify",{"_index":861,"title":{},"body":{"injectables/EmailService.html":{},"classes/EmailTemplate.html":{},"index.html":{}}}],["verifyemail",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail(@body",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail(verifyemaildto",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemaildto",{"_index":170,"title":{"classes/VerifyEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["verifyemaildto.emailaddress",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemaildto.token",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken(verifyemaildto",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":491,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/DependencyVersion.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"properties.html":{}}}],["version.publishdate",{"_index":583,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["version.replace(/^[^\\d",{"_index":1398,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["version.schema",{"_index":518,"title":{},"body":{"injectables/DependenciesService.html":{},"modules/DependencySchemaModule.html":{},"injectables/VulnerabilitiesService.html":{},"modules/VulnerabilitySchemaModule.html":{}}}],["version.schema.ts",{"_index":735,"title":{},"body":{"classes/DependencyVersion.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version.schema.ts:13",{"_index":736,"title":{},"body":{"classes/DependencyVersion.html":{},"classes/VulnerabilityVersion.html":{}}}],["version.schema.ts:16",{"_index":738,"title":{},"body":{"classes/DependencyVersion.html":{}}}],["version.schema.ts:19",{"_index":739,"title":{},"body":{"classes/DependencyVersion.html":{}}}],["version.schema.ts:20",{"_index":1773,"title":{},"body":{"classes/VulnerabilityVersion.html":{}}}],["version.schema.ts:22",{"_index":737,"title":{},"body":{"classes/DependencyVersion.html":{}}}],["version.schema.ts:27",{"_index":1776,"title":{},"body":{"classes/VulnerabilityVersion.html":{}}}],["version.schema.ts:30",{"_index":1775,"title":{},"body":{"classes/VulnerabilityVersion.html":{}}}],["version.schema.ts:33",{"_index":1774,"title":{},"body":{"classes/VulnerabilityVersion.html":{}}}],["version.version",{"_index":582,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["version.versionid",{"_index":580,"title":{},"body":{"injectables/DependenciesService.html":{}}}],["versionid",{"_index":553,"title":{},"body":{"injectables/DependenciesService.html":{},"classes/DependencyVersion.html":{}}}],["versions",{"_index":499,"title":{},"body":{"injectables/DependenciesService.html":{},"injectables/VulnerabilitiesService.html":{}}}],["visit",{"_index":888,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["void",{"_index":659,"title":{},"body":{"classes/DependencyConsumer.html":{},"injectables/RepositoryService.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"miscellaneous/functions.html":{}}}],["vuln",{"_index":1535,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.affected.map((affected",{"_index":1701,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.affected?.map((aff",{"_index":1621,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.aliases?.[0",{"_index":1608,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.cveid",{"_index":1695,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.cvssseverity",{"_index":1655,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.cweid",{"_index":1696,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.database_specific?.cwe_ids",{"_index":1612,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.database_specific?.nvd_published_at",{"_index":1614,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.database_specific?.severity",{"_index":1616,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.db_severity",{"_index":1699,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.details",{"_index":1607,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.id",{"_index":1604,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.nvd_published_at",{"_index":1697,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.published",{"_index":1610,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.references",{"_index":1700,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.references?.map((ref",{"_index":1617,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.severity",{"_index":1620,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vuln.summary",{"_index":1605,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulndata",{"_index":1561,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulndata.severity.cvssmetricv2",{"_index":1674,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulndata.severity.cvssmetricv30",{"_index":1673,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulndata.severity.cvssmetricv31",{"_index":1670,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulndata.severity.cvssmetricv40",{"_index":1663,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulnerabilities",{"_index":1489,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"index.html":{}}}],["vulnerabilities.consumer",{"_index":1511,"title":{},"body":{"modules/VulnerabilitiesModule.html":{}}}],["vulnerabilities.controller",{"_index":1509,"title":{},"body":{"modules/VulnerabilitiesModule.html":{}}}],["vulnerabilities.service",{"_index":1498,"title":{},"body":{"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"classes/VulnerabilityConsumer.html":{}}}],["vulnerabilitiescontroller",{"_index":1487,"title":{"controllers/VulnerabilitiesController.html":{}},"body":{"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"coverage.html":{}}}],["vulnerabilitiesmodule",{"_index":60,"title":{"modules/VulnerabilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["vulnerabilitiesservice",{"_index":1497,"title":{"injectables/VulnerabilitiesService.html":{}},"body":{"controllers/VulnerabilitiesController.html":{},"modules/VulnerabilitiesModule.html":{},"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityConsumer.html":{},"coverage.html":{},"overview.html":{}}}],["vulnerability",{"_index":1563,"title":{"classes/Vulnerability.html":{}},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"classes/VulnerabilityConsumer.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"index.html":{}}}],["vulnerability.dto",{"_index":1499,"title":{},"body":{"controllers/VulnerabilitiesController.html":{}}}],["vulnerability.dto.ts",{"_index":427,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{},"coverage.html":{}}}],["vulnerability.dto.ts:11",{"_index":430,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{}}}],["vulnerability.dto.ts:19",{"_index":432,"title":{},"body":{"classes/CreateVulnerabilityDTO.html":{}}}],["vulnerability.name",{"_index":1771,"title":{},"body":{"modules/VulnerabilitySchemaModule.html":{}}}],["vulnerability.schema",{"_index":1769,"title":{},"body":{"modules/VulnerabilitySchemaModule.html":{}}}],["vulnerabilityconsumer",{"_index":1510,"title":{"classes/VulnerabilityConsumer.html":{}},"body":{"modules/VulnerabilitiesModule.html":{},"classes/VulnerabilityConsumer.html":{},"coverage.html":{}}}],["vulnerabilitydocument",{"_index":1564,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["vulnerabilitymodel",{"_index":1523,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulnerabilityqueue",{"_index":1522,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulnerabilityschema",{"_index":1747,"title":{},"body":{"classes/Vulnerability.html":{},"modules/VulnerabilitySchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vulnerabilityschema.index",{"_index":1749,"title":{},"body":{"classes/Vulnerability.html":{}}}],["vulnerabilityschemamodule",{"_index":61,"title":{"modules/VulnerabilitySchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VulnerabilitiesModule.html":{},"modules/VulnerabilitySchemaModule.html":{},"modules.html":{},"overview.html":{}}}],["vulnerabilityversion",{"_index":1566,"title":{"classes/VulnerabilityVersion.html":{}},"body":{"injectables/VulnerabilitiesService.html":{},"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{}}}],["vulnerabilityversion.name",{"_index":1772,"title":{},"body":{"modules/VulnerabilitySchemaModule.html":{}}}],["vulnerabilityversiondocument",{"_index":1567,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["vulnerabilityversionmodel",{"_index":1524,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulnerabilityversionschema",{"_index":1770,"title":{},"body":{"modules/VulnerabilitySchemaModule.html":{},"classes/VulnerabilityVersion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vulnerabilityversionschema.index",{"_index":1778,"title":{},"body":{"classes/VulnerabilityVersion.html":{}}}],["vulns",{"_index":1679,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulns.length",{"_index":1681,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vulns.map(async",{"_index":1685,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["vx.00.00x",{"_index":1895,"title":{},"body":{"index.html":{}}}],["waiting",{"_index":701,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["watchrepositoryselection",{"_index":1279,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["weakness",{"_index":1601,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["weakness.description?.[0]?.value",{"_index":1602,"title":{},"body":{"injectables/VulnerabilitiesService.html":{}}}],["weaknesses",{"_index":1545,"title":{},"body":{"injectables/VulnerabilitiesService.html":{},"classes/Vulnerability.html":{}}}],["webhook",{"_index":1911,"title":{},"body":{"index.html":{}}}],["webhooklistener",{"_index":913,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["webhooklistener(event",{"_index":924,"title":{},"body":{"controllers/GithubAppController.html":{}}}],["website",{"_index":1910,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":2007,"title":{},"body":{"index.html":{}}}],["window",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["windows",{"_index":1929,"title":{},"body":{"index.html":{}}}],["within",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["workerhost",{"_index":678,"title":{},"body":{"classes/DependencyConsumer.html":{},"classes/VulnerabilityConsumer.html":{}}}],["workflow",{"_index":1858,"title":{},"body":{"index.html":{}}}],["www.depshieldio",{"_index":889,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["x",{"_index":1404,"title":{},"body":{"injectables/RepositoryService.html":{},"index.html":{}}}],["yarn",{"_index":1952,"title":{},"body":{"index.html":{}}}],["you,the",{"_index":880,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["yourdeploymenturl",{"_index":1997,"title":{},"body":{"index.html":{}}}],["yourdomain.com",{"_index":1992,"title":{},"body":{"index.html":{}}}],["z\\s",{"_index":762,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["za",{"_index":761,"title":{},"body":{"classes/EmailDTO.html":{},"classes/GithubTokenDTO.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DependenciesModule.html":{},"modules/EmailModule.html":{},"modules/GithubAppModule.html":{},"modules/LicensesModule.html":{},"modules/RepositoryModule.html":{},"modules/VulnerabilitiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/accessToken.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDependenciesModule\n\nDependenciesModule\n\nAppModule -->\n\nDependenciesModule->AppModule\n\n\n\n\n\nDependencySchemaModule\n\nDependencySchemaModule\n\nAppModule -->\n\nDependencySchemaModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nGithubAppModule\n\nGithubAppModule\n\nAppModule -->\n\nGithubAppModule->AppModule\n\n\n\n\n\nGithubAppSchemaModule\n\nGithubAppSchemaModule\n\nAppModule -->\n\nGithubAppSchemaModule->AppModule\n\n\n\n\n\nLicenseSchemaModule\n\nLicenseSchemaModule\n\nAppModule -->\n\nLicenseSchemaModule->AppModule\n\n\n\n\n\nLicensesModule\n\nLicensesModule\n\nAppModule -->\n\nLicensesModule->AppModule\n\n\n\n\n\nOTPSecretSchemaModule\n\nOTPSecretSchemaModule\n\nAppModule -->\n\nOTPSecretSchemaModule->AppModule\n\n\n\n\n\nRepositoryModule\n\nRepositoryModule\n\nAppModule -->\n\nRepositoryModule->AppModule\n\n\n\n\n\nRepositorySchemaModule\n\nRepositorySchemaModule\n\nAppModule -->\n\nRepositorySchemaModule->AppModule\n\n\n\n\n\nUserSchemaModule\n\nUserSchemaModule\n\nAppModule -->\n\nUserSchemaModule->AppModule\n\n\n\n\n\nVulnerabilitiesModule\n\nVulnerabilitiesModule\n\nAppModule -->\n\nVulnerabilitiesModule->AppModule\n\n\n\n\n\nVulnerabilitySchemaModule\n\nVulnerabilitySchemaModule\n\nAppModule -->\n\nVulnerabilitySchemaModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAppModule -->\n\nEmailService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DependenciesModule\n                        \n                        \n                            DependencySchemaModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            GithubAppModule\n                        \n                        \n                            GithubAppSchemaModule\n                        \n                        \n                            LicenseSchemaModule\n                        \n                        \n                            LicensesModule\n                        \n                        \n                            OTPSecretSchemaModule\n                        \n                        \n                            RepositoryModule\n                        \n                        \n                            RepositorySchemaModule\n                        \n                        \n                            UserSchemaModule\n                        \n                        \n                            VulnerabilitiesModule\n                        \n                        \n                            VulnerabilitySchemaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app.module.ts\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { RepositoryModule } from './modules/repository/repository.module';\nimport { AuthController } from './modules/auth/auth.controller';\nimport { AuthService } from './modules/auth/auth.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { EmailModule } from './modules/email/email.module';\nimport { EmailService } from './modules/email/email.service';\nimport { GithubAppModule } from './modules/github-app/github-app.module';\nimport { GithubAppSchemaModule } from './database/githubapp-schema/github-app-schema.module';\nimport { UserSchemaModule } from './database/user-schema/user-schema.module';\nimport { OTPSecretSchemaModule } from './database/otpsecret-schema/otp-secret-schema.module';\nimport { RepositorySchemaModule } from './database/repository-schema/repository-schema.module';\nimport { DependencySchemaModule } from './database/dependency-schema/dependency-schema.module';\nimport { DependenciesModule } from './modules/dependencies/dependencies.module';\nimport { BullModule } from '@nestjs/bullmq';\nimport { LicenseSchemaModule } from './database/license-schema/license-schema.module';\nimport { LicensesModule } from './modules/licenses/licenses.module';\nimport { VulnerabilitiesModule } from './modules/vulnerabilities/vulnerabilities.module';\nimport { VulnerabilitySchemaModule } from './database/vulnerability-schema/vulnerability-schema.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }), // Load environment variables\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          url: configService.get('REDIS_URL'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          uri: configService.get('MONGODB_URI'),\n        };\n      },\n      inject: [ConfigService],\n    }),\n    // MongooseModule.forRoot(process.env.MONGODB_URI), // Mongoose connection\n    //Service Modules\n    AuthModule,\n    RepositoryModule,\n    EmailModule,\n    GithubAppModule,\n    DependenciesModule,\n    LicensesModule,\n    VulnerabilitiesModule,\n    //Schema Related Modules\n    GithubAppSchemaModule,\n    UserSchemaModule,\n    OTPSecretSchemaModule,\n    RepositorySchemaModule,\n    DependencySchemaModule,\n    LicenseSchemaModule,\n    VulnerabilitySchemaModule,\n  ],\n  controllers: [AppController, AuthController],\n  providers: [AppService, AuthService, JwtService, EmailService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Dep-shield backend';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                checkLogin\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                refreshTokens\n                            \n                            \n                                    \n                                sendOTP\n                            \n                            \n                                    \n                                signup\n                            \n                            \n                                    \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        checkLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@ApiBearerAuth()@Get('check-login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@ApiBearerAuth()@Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOTP(dto: EmailDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-otp')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            EmailDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(dto: SignupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(verifyEmailDTO: VerifyEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify-email')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyEmailDTO\n                                            \n                                                            VerifyEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, UseGuards, Req } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignupDto, LoginDto, VerifyEmailDto, EmailDTO } from './dto/auth.dto';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AccessTokenGuard } from './guards/accessToken.guard';\n// import { RefreshTokenGuard } from './guards/refreshToken.guard';\nimport { RefreshTokenGuard } from './guards/refreshToken.guard';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('signup')\n  signup(@Body() dto: SignupDto) {\n    return this.authService.signup(dto);\n  }\n  @Post('verify-email')\n  verifyEmail(@Body() verifyEmailDTO: VerifyEmailDto) {\n    return this.authService.verifyToken(verifyEmailDTO);\n  }\n\n  @Post('send-otp')\n  sendOTP(@Body() dto: EmailDTO) {\n    return this.authService.sendToken(dto.emailAddress);\n  }\n\n  @Post('login')\n  login(@Body() dto: LoginDto) {\n    return this.authService.login(dto);\n  }\n\n  @UseGuards(RefreshTokenGuard)\n  @ApiBearerAuth()\n  @Post('refresh')\n  refreshTokens(@Req() req: Request) {\n    const refreshToken: string = req['user'].refreshToken;\n\n    return this.authService.refreshTokens(refreshToken);\n  }\n  // @Post('social-login')\n  // socialLogin(@Body() dto: SocialLoginDto) {\n  //   return this.authService.socialLogin(dto);\n  // }\n\n  // @Post('github-login')\n  // githubLogin(@Body() dto: GithubTokenDTO) {\n  //   return this.authService.githubLogin(dto);\n  // }\n\n  @UseGuards(AccessTokenGuard)\n  @ApiBearerAuth()\n  @Get('check-login')\n  checkLogin() {\n    return 'Logged In';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nEmailModule->AuthModule\n\n\n\n\n\nOTPSecretSchemaModule\n\nOTPSecretSchemaModule\n\nAuthModule -->\n\nOTPSecretSchemaModule->AuthModule\n\n\n\n\n\nUserSchemaModule\n\nUserSchemaModule\n\nAuthModule -->\n\nUserSchemaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nJWTRefreshTokenStrategy\n\nJWTRefreshTokenStrategy\n\nAuthModule -->\n\nJWTRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            JWTRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                        \n                            OTPSecretSchemaModule\n                        \n                        \n                            UserSchemaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\n\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { AuthService } from './auth.service';\n// import { appConfig } from 'src/configuration/app.config';\nimport { JWTRefreshTokenStrategy } from './strategy/jwt-refresh.strategy';\n\nimport { HttpModule } from '@nestjs/axios';\nimport { EmailService } from '../email/email.service';\nimport { EmailModule } from '../email/email.module';\nimport { UserSchemaModule } from 'src/database/user-schema/user-schema.module';\nimport { OTPSecretSchemaModule } from 'src/database/otpsecret-schema/otp-secret-schema.module';\n// import { MongooseModule } from '@nestjs/mongoose';\n// import { User, UserSchema } from 'src/schemas/user.schema';\n// import { SchemasModule } from 'src/schemas/schemas.module';\n\n@Module({\n  imports: [\n    PassportModule,\n    UserSchemaModule,\n    OTPSecretSchemaModule,\n    JwtModule.register({}),\n    HttpModule,\n    EmailModule,\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    JWTRefreshTokenStrategy,\n    JwtService,\n    EmailService,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                    Private\n                                generateTokens\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Private\n                                sanitizeUser\n                            \n                            \n                                    Public\n                                    Async\n                                sendToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Private\n                                    Async\n                                updateRefreshToken\n                            \n                            \n                                    Public\n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, emailService: EmailService, userModel: Model, otpSecretModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSecretModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(userId: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { accessToken: any; refreshToken: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sanitizeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    sanitizeUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToken(emailAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(dto: SignupDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(verifyEmailDTO: VerifyEmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyEmailDTO\n                                            \n                                                            VerifyEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { SignupDto, LoginDto, VerifyEmailDto } from './dto/auth.dto';\nimport { User, UserDocument } from '../../database/user-schema/user.schema'; // Adjust the path as needed\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { EmailService } from '../email/email.service';\nimport {\n  OTPSecret,\n  OTPSecretDocument,\n} from '../../database/otpsecret-schema/otp-secret.schema';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private emailService: EmailService,\n    @InjectModel(User.name) private userModel: Model, // Inject Mongoose User model\n    @InjectModel(OTPSecret.name)\n    private otpSecretModel: Model,\n  ) {}\n\n  async signup(dto: SignupDto) {\n    const hashedPassword = await bcrypt.hash(\n      dto.password,\n      parseInt(process.env.SALT_ROUND),\n    );\n\n    const alreadyExists = await this.checkUser(dto.emailAddress);\n    if (alreadyExists) {\n      throw new ConflictException('User already exists');\n    }\n\n    const user = await this.userModel.create({\n      displayName: dto.displayName,\n      emailAddress: dto.emailAddress,\n      password: hashedPassword,\n    });\n    const { accessToken, refreshToken } = this.generateTokens(\n      user.id,\n      user.emailAddress,\n    ); // Use _id for Mongoose\n    this.emailService.sendEmail(dto.emailAddress);\n    await this.updateRefreshToken(user.id, refreshToken);\n    return { accessToken, refreshToken, userInfo: this.sanitizeUser(user) };\n  }\n\n  async checkUser(email: string): Promise {\n    const user = await this.userModel.findOne({ emailAddress: email }).exec();\n    return !!user; // Return true if user exists, false otherwise\n  }\n\n  async login(dto: LoginDto) {\n    const user = await this.userModel\n      .findOne({ emailAddress: dto.emailAddress, loginType: 'credential' })\n      .exec();\n    if (!user) {\n      throw new NotFoundException('No user found');\n    }\n    if (!(await bcrypt.compare(dto.password, user.password))) {\n      throw new BadRequestException('Invalid credentials');\n    }\n\n    const { accessToken, refreshToken } = this.generateTokens(\n      user.id,\n      user.emailAddress,\n    ); // Use _id for Mongoose\n    await this.updateRefreshToken(user.id, refreshToken);\n\n    return { accessToken, refreshToken, userInfo: this.sanitizeUser(user) };\n  }\n  private sanitizeUser(user: any) {\n    const userObject = user.toObject();\n    delete userObject.password;\n    return userObject;\n  }\n  private generateTokens(userId: string, email: string) {\n    const accessToken = this.jwtService.sign(\n      { userId, email },\n      { secret: process.env.JWT_SECRET, expiresIn: process.env.JWT_EXPIRE },\n    );\n    const refreshToken = this.jwtService.sign(\n      { userId, email },\n      {\n        secret: process.env.JWT_REFRESH_SECRET,\n        expiresIn: process.env.JWT_EXPIRE_REFRESH_TOKEN,\n      },\n    );\n    return { accessToken, refreshToken };\n  }\n\n  private async updateRefreshToken(userId: string, refreshToken: string) {\n    const hashedRefreshToken = await bcrypt.hash(\n      refreshToken,\n      parseInt(process.env.SALT_ROUND),\n    );\n    await this.userModel\n      .findByIdAndUpdate(userId, { refreshToken: hashedRefreshToken })\n      .exec();\n  }\n\n  async refreshTokens(refreshToken: string) {\n    const decoded = this.jwtService.decode(refreshToken);\n    if (!decoded) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    const user = await this.userModel\n      .findOne({ emailAddress: decoded.email })\n      .exec();\n    if (\n      !user ||\n      !(await this.jwtService.verify(refreshToken, {\n        secret: process.env.JWT_REFRESH_SECRET,\n      }))\n    ) {\n      throw new UnauthorizedException('Invalid refresh token');\n    }\n\n    const tokens = this.generateTokens(user.id, user.emailAddress); // Use _id for Mongoose\n    await this.updateRefreshToken(user.id, tokens.refreshToken);\n    return tokens;\n  }\n  public async sendToken(emailAddress: string) {\n    return this.emailService.sendEmail(emailAddress);\n  }\n  // Function to validate the code and check if it's within the 2-minute window\n  public async verifyToken(verifyEmailDTO: VerifyEmailDto) {\n    // Retrieve the latest entry from the database\n    const tokenEntry = await this.otpSecretModel.findOne({\n      emailAddress: verifyEmailDTO.emailAddress,\n    });\n\n    if (!tokenEntry) {\n      throw new BadRequestException('Invalid Token');\n    }\n\n    // Check if the provided code matches the stored code\n    if (tokenEntry.secret !== verifyEmailDTO.token) {\n      throw new BadRequestException('Invalid Token');\n    }\n\n    // Check if the time difference is within the allowed 2 minutes (120 seconds)\n    const currentTime = new Date();\n    const timeDifference =\n      (currentTime.getTime() - tokenEntry.updatedAt.getTime()) / 1000;\n    // console.log(timeDifference);\n    if (timeDifference > 120) {\n      throw new BadRequestException('Token Expired');\n    }\n    const user = await this.userModel.findOne({\n      emailAddress: verifyEmailDTO.emailAddress,\n    });\n    user.isVerified = true;\n    await user.save();\n    return { isValidated: true };\n  }\n\n  // async githubLogin(dto: GithubTokenDTO) {\n  //   const response = await this.githubService.verifyAccessToken(\n  //     dto.accessToken,\n  //   );\n  //   if (!response) {\n  //     throw new UnauthorizedException('Invalid access token');\n  //   }\n  //   // await this.githubService.getAllRepos(dto.accessToken);\n  //   const data = await this.githubService.getUserEmails(dto.accessToken);\n  //   if (data) {\n  //     let user = await this.userModel\n  //       .findOne({ email: data.email, loginType: 'github' })\n  //       .exec();\n\n  //     if (!user) {\n  //       user = await this.userModel.create({\n  //         email: data.email,\n  //         name: response.data.login,\n  //         password: 'null',\n  //         loginType: 'github',\n  //         githubAccessToken: dto.accessToken,\n  //       });\n  //     } else {\n  //       user.githubAccessToken = dto.accessToken;\n  //       await user.save();\n  //     }\n  //     const userId = user.id;\n  //     const { accessToken, refreshToken } = this.generateTokens(\n  //       userId,\n  //       data.email,\n  //     );\n  //     return {\n  //       accessToken,\n  //       refreshToken,\n  //       userInfo: this.sanitizeUser(user),\n  //     };\n  //   }\n  //   // const repo = await this.githubService.readPackageJson(\n  //   //   dto.accessToken,\n  //   //   allRepos[0].repo,\n  //   // );\n  //   // console.log(repo);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDependencyDTO.html":{"url":"classes/CreateDependencyDTO.html","title":"class - CreateDependencyDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDependencyDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dependencies/dto/create-dependency.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dependencyName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the dependency', type: String, example: 'express'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dependencies/dto/create-dependency.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateDependencyDTO {\n  @ApiProperty({\n    description: 'Name of the dependency',\n    type: String,\n    example: 'express',\n  })\n  dependencyName: string; // Name of the dependency\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVulnerabilityDTO.html":{"url":"classes/CreateVulnerabilityDTO.html","title":"class - CreateVulnerabilityDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVulnerabilityDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vulnerabilities/dto/create-vulnerability.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dependencyName\n                            \n                            \n                                    \n                                    \n                                ecosystem\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dependencyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the dependency', type: String, example: 'express'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vulnerabilities/dto/create-vulnerability.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ecosystem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the ecosystem', type: String, example: 'npm'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vulnerabilities/dto/create-vulnerability.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateVulnerabilityDTO {\n  @ApiProperty({\n    description: 'Name of the dependency',\n    type: String,\n    example: 'express',\n  })\n  @IsNotEmpty()\n  dependencyName: string;\n\n  @ApiProperty({\n    description: 'Name of the ecosystem',\n    type: String,\n    example: 'npm',\n  })\n  @IsNotEmpty()\n  ecosystem: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DependenciesController.html":{"url":"controllers/DependenciesController.html","title":"controller - DependenciesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DependenciesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dependencies/dependencies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dependencies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                getDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDependencyDTO: CreateDependencyDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDependencyDTO\n                                            \n                                                            CreateDependencyDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDetails(dependencyId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { DependenciesService } from './dependencies.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AccessTokenGuard } from '../auth/guards/accessToken.guard';\nimport { CreateDependencyDTO } from './dto/create-dependency.dto';\n\n@Controller('dependencies')\nexport class DependenciesController {\n  constructor(private readonly dependenciesService: DependenciesService) {}\n\n  @Post('create')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  create(@Body() createDependencyDTO: CreateDependencyDTO) {\n    return this.dependenciesService.create(createDependencyDTO);\n  }\n\n  @Get(':id')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  getDetails(@Param('id') dependencyId: string) {\n    return this.dependenciesService.getDetails(dependencyId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DependenciesModule.html":{"url":"modules/DependenciesModule.html","title":"module - DependenciesModule","body":"\n                   \n\n\n\n\n    Modules\n    DependenciesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DependenciesModule\n\n\n\ncluster_DependenciesModule_imports\n\n\n\ncluster_DependenciesModule_exports\n\n\n\ncluster_DependenciesModule_providers\n\n\n\n\nDependencySchemaModule\n\nDependencySchemaModule\n\n\n\nDependenciesModule\n\nDependenciesModule\n\nDependenciesModule -->\n\nDependencySchemaModule->DependenciesModule\n\n\n\n\n\nDependenciesService \n\nDependenciesService \n\nDependenciesService  -->\n\nDependenciesModule->DependenciesService \n\n\n\n\n\nDependenciesService\n\nDependenciesService\n\nDependenciesModule -->\n\nDependenciesService->DependenciesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/dependencies/dependencies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DependenciesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DependenciesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DependencySchemaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DependenciesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DependenciesService } from './dependencies.service';\nimport { DependenciesController } from './dependencies.controller';\nimport { DependencySchemaModule } from 'src/database/dependency-schema/dependency-schema.module';\nimport { BullModule } from '@nestjs/bullmq';\nimport { DependencyConsumer } from './dependencies.consumer';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [\n    HttpModule,\n    DependencySchemaModule,\n    BullModule.registerQueue({\n      name: 'dependency',\n    }),\n  ],\n  controllers: [DependenciesController],\n  providers: [DependenciesService, DependencyConsumer],\n  exports: [DependenciesService],\n})\nexport class DependenciesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DependenciesService.html":{"url":"injectables/DependenciesService.html","title":"injectable - DependenciesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DependenciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dependencies/dependencies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getDependencyInfo\n                            \n                            \n                                    Async\n                                getDetails\n                            \n                            \n                                    Async\n                                getDetailsByDependencyName\n                            \n                            \n                                    Async\n                                getVersionByDepVersion\n                            \n                            \n                                    Async\n                                getVersionsInPublishRange\n                            \n                            \n                                parseNPMRegistryData\n                            \n                            \n                                parseNPMSData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, dependencyModel: Model, dependencyVersionModel: Model, dependencyQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/dependencies/dependencies.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dependencyModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dependencyVersionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dependencyQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDependencyDTO: CreateDependencyDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDependencyDTO\n                                            \n                                                            CreateDependencyDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDependencyInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDependencyInfo(dep: DependencyDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dep\n                                            \n                                                            DependencyDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDetails(dependencyId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDetailsByDependencyName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDetailsByDependencyName(dependencyName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVersionByDepVersion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVersionByDepVersion(dependencyId: string, version: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                version\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVersionsInPublishRange\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVersionsInPublishRange(dependencyId: string, introducedVersionDate: Date, fixedVersionDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                introducedVersionDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fixedVersionDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseNPMRegistryData\n                        \n                    \n                \n            \n            \n                \nparseNPMRegistryData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { dependencyName: any; description: any; versions: any; license: any; homepage: any; repository: any; maintainers: any; currentVersion: any; lastPublishDate: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseNPMSData\n                        \n                    \n                \n            \n            \n                \nparseNPMSData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { description: any; license: any; homepage: any; npm: any; repository: any; evaluation: any; score: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateDependencyDTO } from './dto/create-dependency.dto';\nimport {\n  Dependency,\n  DependencyDocument,\n} from 'src/database/dependency-schema/dependency.schema';\nimport { Model, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { InjectQueue } from '@nestjs/bullmq';\nimport { Queue } from 'bullmq';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport {\n  DependencyVersion,\n  DependencyVersionDocument,\n} from 'src/database/dependency-schema/dependency-version.schema';\n\n@Injectable()\nexport class DependenciesService {\n  constructor(\n    private readonly httpService: HttpService,\n    @InjectModel(Dependency.name)\n    private dependencyModel: Model,\n    @InjectModel(DependencyVersion.name)\n    private dependencyVersionModel: Model,\n    @InjectQueue('dependency') private dependencyQueue: Queue,\n  ) {}\n\n  async create(createDependencyDTO: CreateDependencyDTO) {\n    const dep = await this.dependencyModel.findOneAndUpdate(\n      createDependencyDTO,\n      { $set: createDependencyDTO },\n      {\n        upsert: true,\n        new: true,\n      },\n    );\n    await this.dependencyQueue.add('get-dependency-info', dep, {\n      delay: 1000,\n      attempts: 2,\n      removeOnComplete: true,\n    });\n    return dep;\n  }\n\n  async getDetailsByDependencyName(dependencyName: string) {\n    const dep = await this.dependencyModel.aggregate([\n      {\n        $match: {\n          dependencyName: dependencyName,\n        },\n      },\n    ]);\n    if (dep.length > 0) {\n      return dep[0];\n    }\n    return null;\n  }\n\n  async getVersionByDepVersion(dependencyId: string, version: string) {\n    return await this.dependencyVersionModel.findOne({\n      dependencyId: new Types.ObjectId(dependencyId),\n      version: version,\n    });\n  }\n\n  async getVersionsInPublishRange(\n    dependencyId: string,\n    introducedVersionDate: Date,\n    fixedVersionDate: Date,\n  ) {\n    return await this.dependencyVersionModel.find({\n      dependencyId: new Types.ObjectId(dependencyId),\n      publishDate: { $gt: introducedVersionDate, $lt: fixedVersionDate },\n    });\n  }\n\n  async getDetails(dependencyId: string) {\n    let aggregate = [];\n    if (!Types.ObjectId.isValid(dependencyId)) {\n      throw new NotFoundException(\n        `Dependency Not Found with id: ${dependencyId}`,\n      );\n    }\n    aggregate.push({\n      $match: {\n        _id: new Types.ObjectId(dependencyId),\n      },\n    });\n    aggregate.push({\n      $lookup: {\n        from: 'dependencyversions',\n        localField: '_id',\n        foreignField: 'dependencyId',\n        as: 'versions',\n      },\n    });\n    const dep = await this.dependencyModel.aggregate(aggregate);\n    if (dep.length > 0) {\n      return dep[0];\n    }\n    throw new NotFoundException(\n      `Dependency Not Found with id: ${dependencyId}`,\n    );\n  }\n\n  parseNPMRegistryData(data: any) {\n    return {\n      dependencyName: data.name || '',\n      description: data.description || '',\n      versions: Object.keys(data.versions || {}).map((version) => ({\n        version: version,\n        versionId: data.versions[version]._id || '',\n        publishDate: data.time ? data.time[version] || '' : '',\n      })),\n      license: data.license || '',\n      homepage: data.homepage || '',\n      repository: data.repository.url || '',\n      maintainers: data.maintainers || [],\n      currentVersion: data['dist-tags']?.latest || '',\n      lastPublishDate: data.time[data['dist-tags']?.latest] || '',\n    };\n  }\n\n  parseNPMSData(data: any) {\n    return {\n      description: data['collected']['metadata']['description'] || '',\n      license: data['collected']['metadata']['license'] || '',\n      homepage: data['collected']['metadata']['links']['homepage'] || '',\n      npm: data['collected']['metadata']['links']['npm'] || '',\n      repository: data['collected']['metadata']['links']['repository'] || '',\n      evaluation: data['evaluation'] || {},\n      score: data['score'] || {},\n    };\n  }\n\n  async getDependencyInfo(dep: DependencyDocument) {\n    const response = await firstValueFrom(\n      this.httpService.get(`https://registry.npmjs.org/${dep.dependencyName}`),\n    );\n\n    const npmsResponse = await firstValueFrom(\n      this.httpService.get(\n        `https://api.npms.io/v2/package/${encodeURIComponent(dep.dependencyName)}`,\n      ),\n    );\n    let updatedData = {};\n    if (response.data) {\n      const data = this.parseNPMRegistryData(response.data);\n      data.versions.forEach(async (version) => {\n        await this.dependencyVersionModel.updateOne(\n          { versionId: version.versionId, dependencyId: dep._id },\n          {\n            $set: {\n              version: version.version,\n              versionId: version.versionId,\n              publishDate: version.publishDate,\n            },\n          },\n          { upsert: true },\n        );\n      });\n\n      updatedData = {\n        ...updatedData,\n        ...{\n          description: data.description,\n          license: data.license,\n          homepage: data.homepage,\n          repository: data.repository,\n          maintainers: data.maintainers,\n          currentVersion: data.currentVersion,\n          lastPublishDate: data.lastPublishDate,\n        },\n      };\n    }\n\n    if (npmsResponse.data) {\n      const data = this.parseNPMSData(npmsResponse.data);\n      updatedData = {\n        ...updatedData,\n        ...{\n          description: data.description,\n          homepage: data.homepage || updatedData['homepage'] || '',\n          npm: data.npm || '',\n          repository: data.repository || updatedData['repository'] || '',\n          license: data.license,\n          evaluation: data.evaluation,\n          score: data.score,\n        },\n      };\n    }\n\n    if (updatedData) {\n      await this.dependencyModel.updateOne(\n        { dependencyName: dep.dependencyName },\n        { $set: updatedData },\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dependency.html":{"url":"classes/Dependency.html","title":"class - Dependency","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dependency\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/dependency-schema/dependency.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                currentVersion\n                            \n                            \n                                    \n                                dependencyName\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                ecosystem\n                            \n                            \n                                    \n                                    Optional\n                                evaluation\n                            \n                            \n                                    \n                                    Optional\n                                homepage\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    Optional\n                                lastPublishDate\n                            \n                            \n                                    \n                                    Optional\n                                license\n                            \n                            \n                                    \n                                    Optional\n                                maintainers\n                            \n                            \n                                    \n                                    Optional\n                                npm\n                            \n                            \n                                    \n                                    Optional\n                                repository\n                            \n                            \n                                    \n                                    Optional\n                                score\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        currentVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ecosystem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: 'npm'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        evaluation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        homepage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastPublishDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maintainers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        npm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        repository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency.schema.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type DependencyDocument = Dependency & Document;\n\n@NestSchema({ timestamps: true })\nexport class Dependency {\n  @Prop({ required: true })\n  dependencyName: string;\n\n  @Prop({ required: false, default: 'npm' })\n  ecosystem: string;\n\n  @Prop({ required: false })\n  description?: string;\n\n  @Prop({ required: false })\n  license?: string;\n\n  @Prop({ required: false })\n  homepage?: string;\n\n  @Prop({ required: false })\n  repository?: string;\n\n  @Prop({ required: false })\n  npm?: string;\n\n  @Prop({ required: false, type: [{ name: String, email: String }] })\n  maintainers?: { name: string; email: string }[];\n\n  @Prop({ required: false })\n  currentVersion?: string;\n\n  @Prop({ required: false })\n  lastPublishDate?: Date;\n\n  @Prop({ required: false, type: Object })\n  evaluation?: {\n    quality: {\n      carefulness: number;\n      tests: number;\n      health: number;\n      branding: number;\n    };\n    popularity: {\n      communityInterest: number;\n      downloadsCount: number;\n      downloadsAcceleration: number;\n      dependentsCount: number;\n    };\n    maintenance: {\n      releasesFrequency: number;\n      commitsFrequency: number;\n      openIssues: number;\n      issuesDistribution: number;\n    };\n  };\n\n  @Prop({ required: false, type: Object })\n  score?: {\n    final: number;\n    detail: {\n      quality: number;\n      popularity: number;\n      maintenance: number;\n    };\n  };\n\n  @Prop({ required: false, default: false })\n  isDeleted: boolean;\n}\n\nexport const DependencySchema = SchemaFactory.createForClass(Dependency);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DependencyConsumer.html":{"url":"classes/DependencyConsumer.html","title":"class - DependencyConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DependencyConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dependencies/dependencies.consumer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onActive\n                            \n                            \n                                    \n                                onCompleted\n                            \n                            \n                                    \n                                onDelayed\n                            \n                            \n                                    \n                                onEventActive\n                            \n                            \n                                    \n                                onWaiting\n                            \n                            \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dependenciesService: DependenciesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/dependencies/dependencies.consumer.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dependenciesService\n                                                  \n                                                        \n                                                                        DependenciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DependencyConsumer.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/dependencies/dependencies.consumer.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onActive\n                        \n                    \n                \n            \n            \n                \n                        \n                    onActive(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnWorkerEvent('active')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.consumer.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onCompleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCompleted(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnWorkerEvent('completed')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.consumer.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDelayed\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDelayed(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueEvent('delayed')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.consumer.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onEventActive\n                        \n                    \n                \n            \n            \n                \n                        \n                    onEventActive(job: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueEvent('active')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.consumer.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onWaiting\n                        \n                    \n                \n            \n            \n                \n                        \n                    onWaiting(jobId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueEvent('waiting')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.consumer.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        process\n                        \n                    \n                \n            \n            \n                \n                        \n                    process(job: Job)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dependencies/dependencies.consumer.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Processor,\n  OnWorkerEvent,\n  OnQueueEvent,\n  WorkerHost,\n} from '@nestjs/bullmq';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bullmq';\nimport { DependenciesService } from './dependencies.service';\n\n@Processor('dependency', {\n  concurrency: 2,\n  limiter: {\n    max: 5, // Allow max 5 jobs\n    duration: 1000, // Per 1000ms (1 second)\n  },\n})\nexport class DependencyConsumer extends WorkerHost {\n  private readonly logger = new Logger(DependencyConsumer.name);\n\n  constructor(private readonly dependenciesService: DependenciesService) {\n    super();\n  }\n\n  @OnWorkerEvent('active')\n  onActive(job: Job) {\n    this.logger.log(\n      `Processing job ${job.id} of type ${job.name} with data ${job.data}...`,\n    );\n  }\n\n  @OnQueueEvent('active')\n  onEventActive(job: { jobId: string; prev?: string }) {\n    this.logger.log(`Processing job ${job.jobId}...`);\n  }\n\n  @OnQueueEvent('waiting')\n  onWaiting(jobId: string) {\n    this.logger.log(`Job ${jobId} is waiting to be processed.`);\n  }\n\n  @OnQueueEvent('delayed')\n  onDelayed(job: Job) {\n    this.logger.log(`Job ${job.id} is delayed.`);\n  }\n\n  @OnWorkerEvent('completed')\n  onCompleted(job: Job) {\n    this.logger.log(`Job ${job.id} completed!`);\n  }\n\n  async process(job: Job) {\n    // Job processing logic here\n    switch (job.name) {\n      case 'get-dependency-info':\n        this.dependenciesService.getDependencyInfo(job.data);\n        break;\n      default:\n        break;\n    }\n    this.logger.log(`Processing ${job.name} job with data:`, job.data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DependencyRepository.html":{"url":"classes/DependencyRepository.html","title":"class - DependencyRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DependencyRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/dependency-repository-schema/dependency-repository.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dependencyId\n                            \n                            \n                                    \n                                installedVersion\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                repositoryId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Dependency'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-repository-schema/dependency-repository.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        installedVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-repository-schema/dependency-repository.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Dependency', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-repository-schema/dependency-repository.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        repositoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Repository'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-repository-schema/dependency-repository.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type DependencyRepositoryDocument = DependencyRepository & Document;\n\n@NestSchema({ timestamps: true })\nexport class DependencyRepository {\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Dependency',\n  })\n  dependencyId: MongooseSchema.Types.ObjectId;\n\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Repository',\n  })\n  repositoryId: MongooseSchema.Types.ObjectId;\n\n  @Prop({ required: true })\n  installedVersion: string;\n\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Dependency',\n    default: null,\n  })\n  parent: MongooseSchema.Types.ObjectId;\n}\n\nexport const DependencyRepositorySchema =\n  SchemaFactory.createForClass(DependencyRepository);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DependencyRepositorySchemaModule.html":{"url":"modules/DependencyRepositorySchemaModule.html","title":"module - DependencyRepositorySchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    DependencyRepositorySchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/dependency-repository-schema/dependency-repository-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  DependencyRepository,\n  DependencyRepositorySchema,\n} from './dependency-repository.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: DependencyRepository.name, schema: DependencyRepositorySchema },\n    ]),\n  ],\n  exports: [MongooseModule],\n})\nexport class DependencyRepositorySchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DependencySchemaModule.html":{"url":"modules/DependencySchemaModule.html","title":"module - DependencySchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    DependencySchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/dependency-schema/dependency-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Dependency, DependencySchema } from './dependency.schema';\nimport {\n  DependencyVersion,\n  DependencyVersionSchema,\n} from './dependency-version.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Dependency.name, schema: DependencySchema },\n      { name: DependencyVersion.name, schema: DependencyVersionSchema },\n    ]),\n  ],\n  exports: [MongooseModule],\n})\nexport class DependencySchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DependencyVersion.html":{"url":"classes/DependencyVersion.html","title":"class - DependencyVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DependencyVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/dependency-schema/dependency-version.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dependencyId\n                            \n                            \n                                    \n                                publishDate\n                            \n                            \n                                    \n                                version\n                            \n                            \n                                    \n                                versionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Dependency'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency-version.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publishDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency-version.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency-version.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        versionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/dependency-schema/dependency-version.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type DependencyVersionDocument = DependencyVersion & Document;\n\n@NestSchema({ timestamps: true })\nexport class DependencyVersion {\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Dependency',\n  })\n  dependencyId: MongooseSchema.Types.ObjectId;\n\n  @Prop({ required: true })\n  version: string;\n\n  @Prop({ required: true })\n  versionId: string;\n\n  @Prop({ required: true })\n  publishDate: Date;\n}\n\nexport const DependencyVersionSchema =\n  SchemaFactory.createForClass(DependencyVersion);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailController.html":{"url":"controllers/EmailController.html","title":"controller - EmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/email.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                email\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('email')\nexport class EmailController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDTO.html":{"url":"classes/EmailDTO.html","title":"class - EmailDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                emailAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        emailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email address of the user', example: 'user@example.com', type: String})@IsEmail({}, {message: 'Please provide a valid email address'})@IsNotEmpty({message: 'Email should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:116\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEmail,\n  IsNotEmpty,\n  IsStrongPassword,\n  Matches,\n} from 'class-validator';\n\nexport class SignupDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'John Doe',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Name should not be empty' })\n  @Matches(/^[A-Za-z\\s]+$/, {\n    message: 'Name can only contain letters and spaces',\n  })\n  displayName: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description:\n      'The password for the user account, must meet strong password criteria',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n      minNumbers: 0,\n    },\n    {\n      message:\n        'Invalid password format.Password mustbe 8 character long and must contain minimum one uppercase,lowercase and special symbol',\n    },\n  )\n  password: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Invalid password format.',\n    },\n  )\n  password: string;\n}\n\nexport class GithubTokenDTO {\n  @ApiProperty({\n    description: 'Github access token',\n    example: 'Some valid access token',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Github token should not be empty' })\n  accessToken: string;\n}\n\nexport class VerifyEmailDto {\n  @ApiProperty({\n    description: 'The email verification token',\n    example: 'abc123xyz',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Token should not be empty' })\n  token: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\nexport class EmailDTO {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_imports\n\n\n\ncluster_EmailModule_providers\n\n\n\n\nOTPSecretSchemaModule\n\nOTPSecretSchemaModule\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nOTPSecretSchemaModule->EmailModule\n\n\n\n\n\nUserSchemaModule\n\nUserSchemaModule\n\nEmailModule -->\n\nUserSchemaModule->EmailModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OTPSecretSchemaModule\n                        \n                        \n                            UserSchemaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmailController } from './email.controller';\nimport { EmailService } from './email.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UserSchemaModule } from 'src/database/user-schema/user-schema.module';\nimport { OTPSecretSchemaModule } from 'src/database/otpsecret-schema/otp-secret-schema.module';\n\n@Module({\n  imports: [\n    OTPSecretSchemaModule,\n    UserSchemaModule,\n    ConfigModule.forRoot(), // Load environment variables\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST', 'smtp.gmail.com'),\n          port: parseInt(\n            configService.get('EMAIL_SERVICE_PORT', '587'),\n          ), // Ensure port is a number\n          secure: configService.get('EMAIL_SERVICE_PORT') === '465', // Secure only if using 465\n          auth: {\n            user: configService.get('EMAIL_USERNAME'),\n            pass: configService.get('EMAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" ('EMAIL_SENDER')}>`, // Default sender\n        },\n      }),\n    }),\n  ],\n  controllers: [EmailController],\n  providers: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateAndStoreCode\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Public\n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, otpSecretModel: Model, mailerService: MailerService, userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/email/email.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSecretModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateAndStoreCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAndStoreCode(emailAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/email/email.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/email/email.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(emailAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/email/email.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { OTPSecret } from '../../database/otpsecret-schema/otp-secret.schema';\nimport { User } from '../../database/user-schema/user.schema';\nimport { EmailTemplate } from './templates/otp-email.template';\n\n@Injectable()\nexport class EmailService {\n  constructor(\n    private configService: ConfigService,\n    @InjectModel(OTPSecret.name)\n    private readonly otpSecretModel: Model,\n    private readonly mailerService: MailerService,\n    @InjectModel(User.name)\n    private readonly userModel: Model,\n  ) {}\n  // Function to generate a 6-digit code\n  private generateCode() {\n    return Math.floor(100000 + Math.random() * 900000).toString();\n  }\n  private async generateAndStoreCode(emailAddress: string) {\n    const code = this.generateCode();\n    const currentTime = new Date();\n    // Check if an entry for the email already exists\n    const existingEntry = await this.otpSecretModel.findOne({ emailAddress });\n    if (existingEntry) {\n      // Update the code and timestamp if an entry exists\n      existingEntry.secret = code;\n      await existingEntry.save();\n    } else {\n      // Create a new entry if none exists\n      await this.otpSecretModel.create({\n        emailAddress: emailAddress,\n        secret: code,\n        timestamp: currentTime,\n      });\n    }\n    return code;\n  }\n  // Function to send the email with the 6-digit code\n  public async sendEmail(emailAddress: string) {\n    const user = await this.userModel.findOne({ emailAddress: emailAddress });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    if (user.isVerified === true) {\n      throw new BadRequestException('User is already verified');\n    }\n    const code = await this.generateAndStoreCode(emailAddress);\n    const emailTemplate = EmailTemplate.userVerificationOTPEmailTemplate(\n      user.displayName,\n      code,\n    );\n    const response = await this.mailerService.sendMail({\n      from: `6sense Projects ${this.configService.get('EMAIL_SENDER')}`,\n      to: emailAddress,\n      subject: `Please Verify your account for ${emailAddress}`,\n      html: emailTemplate, //updated for gmail\n    });\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailTemplate.html":{"url":"classes/EmailTemplate.html","title":"class - EmailTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/templates/otp-email.template.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                userVerificationOTPEmailTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        userVerificationOTPEmailTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userVerificationOTPEmailTemplate(userName: string, otpCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/email/templates/otp-email.template.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otpCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class EmailTemplate {\n  static userVerificationOTPEmailTemplate(\n    userName: string,\n    otpCode: string,\n  ): string {\n    return `\n Hello ${userName},Verify Your Email AddressPlease use the following One-Time Password (OTP) to verify your email address. This code is valid for 2 minutes.${otpCode}If you did not request this verification, please ignore this email.Thank you,The depshieldQuestions or FAQ? Contact us at support@depshieldio. For more information about depshield, visit www.depshieldio.© 2025 depshield.\n  `;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GithubApp.html":{"url":"classes/GithubApp.html","title":"class - GithubApp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GithubApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/githubapp-schema/github-app.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appInstallationAccessToken\n                            \n                            \n                                    \n                                installationId\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appInstallationAccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/githubapp-schema/github-app.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        installationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/githubapp-schema/github-app.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/githubapp-schema/github-app.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'ObjectId', ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/githubapp-schema/github-app.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\nimport { User } from '../user-schema/user.schema'; // Import the User schema\n\nexport type GithubAppDocument = GithubApp & Document;\n\n@NestSchema({ timestamps: true })\nexport class GithubApp extends Document {\n  @Prop({ type: 'ObjectId', ref: 'User', required: true }) // Reference to the User schema\n  user: User;\n\n  @Prop({ required: true }) // installation access token\n  appInstallationAccessToken: string;\n\n  @Prop({ required: true }) // installation id\n  installationId: string;\n\n  @Prop({ required: false, default: false })\n  isDeleted: false;\n}\n\nexport const GithubAppSchema = SchemaFactory.createForClass(GithubApp);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GithubAppController.html":{"url":"controllers/GithubAppController.html","title":"controller - GithubAppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GithubAppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/github-app/github-app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                github-app\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                checkStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                disConnect\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getInstall\n                            \n                            \n                                    \n                                    Async\n                                webhookListener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        checkStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@ApiBearerAuth()@Get('check-status')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        disConnect\n                        \n                    \n                \n            \n            \n                \n                        \n                    disConnect(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@ApiBearerAuth()@Get('disconnect')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getInstall\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstall(authCode: string, installationId: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@ApiBearerAuth()@Get('install')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                installationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        webhookListener\n                        \n                    \n                \n            \n            \n                \n                        \n                    webhookListener(event: string, data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Headers,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { GithubAppService } from './github-app.service';\nimport { AccessTokenGuard } from '../auth/guards/accessToken.guard';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\n@Controller('github-app')\nexport class GithubAppController {\n  constructor(private githubAppService: GithubAppService) {}\n  @UseGuards(AccessTokenGuard)\n  @ApiBearerAuth()\n  @Get('install')\n  async getInstall(\n    @Query('code') authCode: string,\n    @Query('installation_id') installationId: string,\n    @Req() req: Request,\n  ) {\n    return await this.githubAppService.installApp(\n      authCode,\n      installationId,\n      req['user'].userId,\n    );\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @ApiBearerAuth()\n  @Get('check-status')\n  async checkStatus(@Req() req: Request) {\n    return await this.githubAppService.checkStatus(req['user'].userId);\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @ApiBearerAuth()\n  @Get('disconnect')\n  async disConnect(@Req() req: Request) {\n    return await this.githubAppService.deleteGithubApp(req['user'].userId);\n  }\n\n  @Post('webhook')\n  async webhookListener(\n    @Headers('X-GitHub-Event') event: string,\n    @Body() data: any,\n  ) {\n    if (event === 'installation' || event === 'installation_repositories') {\n      return await this.githubAppService.handleAppInstallations(data, event);\n    }\n    if (event === 'repository') {\n      return await this.githubAppService.handleGithubRepositoryOperations(data);\n    }\n    return 'No Action performed';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubAppModule.html":{"url":"modules/GithubAppModule.html","title":"module - GithubAppModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GithubAppModule\n\n\n\ncluster_GithubAppModule_imports\n\n\n\ncluster_GithubAppModule_exports\n\n\n\ncluster_GithubAppModule_providers\n\n\n\n\nGithubAppSchemaModule\n\nGithubAppSchemaModule\n\n\n\nGithubAppModule\n\nGithubAppModule\n\nGithubAppModule -->\n\nGithubAppSchemaModule->GithubAppModule\n\n\n\n\n\nRepositorySchemaModule\n\nRepositorySchemaModule\n\nGithubAppModule -->\n\nRepositorySchemaModule->GithubAppModule\n\n\n\n\n\nUserSchemaModule\n\nUserSchemaModule\n\nGithubAppModule -->\n\nUserSchemaModule->GithubAppModule\n\n\n\n\n\nGithubAppService \n\nGithubAppService \n\nGithubAppService  -->\n\nGithubAppModule->GithubAppService \n\n\n\n\n\nGithubAppService\n\nGithubAppService\n\nGithubAppModule -->\n\nGithubAppService->GithubAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/github-app/github-app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubAppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GithubAppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubAppSchemaModule\n                        \n                        \n                            RepositorySchemaModule\n                        \n                        \n                            UserSchemaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubAppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GithubAppService } from './github-app.service';\nimport { GithubAppController } from './github-app.controller';\nimport { HttpModule } from '@nestjs/axios';\nimport { GithubAppSchemaModule } from 'src/database/githubapp-schema/github-app-schema.module';\nimport { UserSchemaModule } from 'src/database/user-schema/user-schema.module';\nimport { RepositorySchemaModule } from 'src/database/repository-schema/repository-schema.module';\n\n@Module({\n  imports: [\n    HttpModule,\n    GithubAppSchemaModule,\n    UserSchemaModule,\n    RepositorySchemaModule,\n  ],\n  providers: [GithubAppService],\n  controllers: [GithubAppController],\n  exports: [GithubAppService],\n})\nexport class GithubAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubAppSchemaModule.html":{"url":"modules/GithubAppSchemaModule.html","title":"module - GithubAppSchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubAppSchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/githubapp-schema/github-app-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { GithubApp, GithubAppSchema } from './github-app.schema';\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: GithubApp.name, schema: GithubAppSchema },\n    ]),\n  ],\n  exports: [MongooseModule],\n})\nexport class GithubAppSchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubAppService.html":{"url":"injectables/GithubAppService.html","title":"injectable - GithubAppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/github-app/github-app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkStatus\n                            \n                            \n                                    Public\n                                    Async\n                                createInstallationToken\n                            \n                            \n                                    Public\n                                    Async\n                                deleteGithubApp\n                            \n                            \n                                    Private\n                                    Async\n                                fetchAllRepos\n                            \n                            \n                                    Private\n                                generateJwt\n                            \n                            \n                                    Public\n                                    Async\n                                handleAppInstallations\n                            \n                            \n                                    Public\n                                    Async\n                                handleGithubRepositoryOperations\n                            \n                            \n                                    Public\n                                    Async\n                                installApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, userModel: Model, githubApp: Model, repository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/github-app/github-app.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubApp\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkStatus(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createInstallationToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInstallationToken(installationId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                installationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteGithubApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGithubApp(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchAllRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAllRepos(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateJwt\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateJwt()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        handleAppInstallations\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAppInstallations(data: any, event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        handleGithubRepositoryOperations\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGithubRepositoryOperations(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:324\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        installApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    installApp(authCode: string, installationId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/github-app/github-app.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                installationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { firstValueFrom } from 'rxjs';\nimport {\n  GithubApp,\n  GithubAppDocument,\n} from '../../database/githubapp-schema/github-app.schema';\nimport { User, UserDocument } from '../../database/user-schema/user.schema';\nimport * as jwt from 'jsonwebtoken';\nimport { validateAuthCode, validateInstallationId } from './validator/validate';\nimport {\n  Repository,\n  RepositoryDocument,\n} from '../../database/repository-schema/repository.schema';\n@Injectable()\nexport class GithubAppService {\n  constructor(\n    private readonly httpService: HttpService,\n    @InjectModel(User.name) private userModel: Model,\n    @InjectModel(GithubApp.name) private githubApp: Model,\n    @InjectModel(Repository.name) private repository: Model,\n  ) {}\n  private generateJwt(): string {\n    const now = Math.floor(Date.now() / 1000); // Current time in seconds\n\n    const payload = {\n      iat: now, // Issued at time\n      exp: now + 600, // Expiration time (10 minutes from now)\n      iss: process.env.GITHUB_APP_ID, // GitHub App ID\n    };\n\n    const privateKey = Buffer.from(\n      process.env.GITHUB_PRIVATE_KEY,\n      'base64',\n    ).toString('utf8');\n\n    return jwt.sign(payload, privateKey, {\n      algorithm: 'RS256',\n    });\n  }\n  public async createInstallationToken(installationId: string) {\n    try {\n      console.log(installationId);\n      const jwt = this.generateJwt();\n      const tokenResponse = await firstValueFrom(\n        this.httpService.post(\n          `https://api.github.com/app/installations/${installationId}/access_tokens`,\n          {}, // Empty body\n          {\n            headers: {\n              Authorization: `Bearer ${jwt}`,\n              Accept: 'application/vnd.github.v3+json',\n            },\n          },\n        ),\n      );\n      const githubInstallationAccessToken = tokenResponse.data.token;\n      console.log(`Installation access token ${githubInstallationAccessToken}`);\n      return githubInstallationAccessToken;\n    } catch (error) {\n      console.log(`Error creating app installation token...`);\n      console.log(error.message);\n    }\n  }\n  private async fetchAllRepos(user: any) {\n    const bulkOps = [];\n    const githubApps = await this.githubApp.find({\n      user: user,\n      isDeleted: false,\n    });\n    for (let i = 0; i  0) {\n      response = await this.repository.bulkWrite(bulkOps);\n    }\n    return response;\n  }\n  public async installApp(\n    authCode: string,\n    installationId: string,\n    userId: string,\n  ) {\n    validateAuthCode(authCode);\n    validateInstallationId(installationId);\n    try {\n      console.log(\n        `Invoke with authCode: ${authCode}, InstallationId: ${installationId}, from User-${userId}`,\n      );\n\n      const jwt = this.generateJwt();\n\n      const tokenResponse = await firstValueFrom(\n        this.httpService.post(\n          `https://api.github.com/app/installations/${installationId}/access_tokens`,\n          {}, // Empty body\n          {\n            headers: {\n              Authorization: `Bearer ${jwt}`,\n              Accept: 'application/vnd.github.v3+json',\n            },\n          },\n        ),\n      );\n      const githubInstallationAccessToken = tokenResponse.data.token;\n\n      if (!githubInstallationAccessToken) {\n        throw new Error('Failed to retrieve installation access token');\n      }\n      const user = await this.userModel.findById(userId);\n      const githubAppInfo = await this.githubApp.updateOne(\n        { user: user.id, installationId: installationId }, // Query: Find by user\n        {\n          installationId: installationId,\n          appInstallationAccessToken: githubInstallationAccessToken,\n          isDeleted: false,\n        },\n        { upsert: true, new: true }, // Create if not exists, update if exists\n      );\n\n      const response = await this.fetchAllRepos(user);\n      console.log(response);\n\n      return githubAppInfo;\n    } catch (error) {\n      console.log(error);\n      console.error('Error creating app access token:', error.message);\n      throw new BadRequestException('Github App Installation failed');\n    }\n  }\n  public async checkStatus(userId: string) {\n    const githubApp = await this.githubApp.findOne({\n      user: new Types.ObjectId(userId),\n      isDeleted: false,\n    });\n    if (!githubApp) {\n      return { isConnected: false };\n    } else {\n      return { isConnected: true };\n    }\n  }\n  public async deleteGithubApp(userId: string) {\n    // console.log(userId);\n    const githubApps = await this.githubApp.find({\n      user: new Types.ObjectId(userId),\n      isDeleted: false,\n    });\n    console.log(githubApps);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GithubTokenDTO.html":{"url":"classes/GithubTokenDTO.html","title":"class - GithubTokenDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GithubTokenDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Github access token', example: 'Some valid access token'})@IsString()@IsNotEmpty({message: 'Github token should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEmail,\n  IsNotEmpty,\n  IsStrongPassword,\n  Matches,\n} from 'class-validator';\n\nexport class SignupDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'John Doe',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Name should not be empty' })\n  @Matches(/^[A-Za-z\\s]+$/, {\n    message: 'Name can only contain letters and spaces',\n  })\n  displayName: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description:\n      'The password for the user account, must meet strong password criteria',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n      minNumbers: 0,\n    },\n    {\n      message:\n        'Invalid password format.Password mustbe 8 character long and must contain minimum one uppercase,lowercase and special symbol',\n    },\n  )\n  password: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Invalid password format.',\n    },\n  )\n  password: string;\n}\n\nexport class GithubTokenDTO {\n  @ApiProperty({\n    description: 'Github access token',\n    example: 'Some valid access token',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Github token should not be empty' })\n  accessToken: string;\n}\n\nexport class VerifyEmailDto {\n  @ApiProperty({\n    description: 'The email verification token',\n    example: 'abc123xyz',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Token should not be empty' })\n  token: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\nexport class EmailDTO {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTRefreshTokenStrategy.html":{"url":"injectables/JWTRefreshTokenStrategy.html","title":"injectable - JWTRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JWTRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt-refresh.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt-refresh.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(req: Request, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/strategy/jwt-refresh.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request } from 'express';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class JWTRefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor(private jwtService: JwtService) {\n    super({\n      usernameField: 'email',\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_REFRESH_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  validate(req: Request, payload: any) {\n    const refreshToken = req.get('Authorization').replace('Bearer', '').trim();\n    const jwtObject = this.jwtService.verify(refreshToken, {\n      secret: process.env.JWT_REFRESH_SECRET,\n    });\n    if (jwtObject) {\n      return { ...payload, refreshToken };\n    } else {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/strategy/jwt.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    // console.log(payload);\n    return { userId: payload.userId, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/License.html":{"url":"classes/License.html","title":"class - License","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  License\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/license-schema/license.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                detailsUrl\n                            \n                            \n                                    \n                                    Optional\n                                isDeprecatedLicenseId\n                            \n                            \n                                    \n                                    Optional\n                                isOsiApproved\n                            \n                            \n                                    \n                                licenseId\n                            \n                            \n                                    \n                                    Optional\n                                licenseText\n                            \n                            \n                                    \n                                    Optional\n                                licenseTextHtml\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                reference\n                            \n                            \n                                    \n                                    Optional\n                                referenceNumber\n                            \n                            \n                                    \n                                    Optional\n                                references\n                            \n                            \n                                    \n                                    Optional\n                                standardLicenseTemplate\n                            \n                            \n                                    \n                                    Optional\n                                summary\n                            \n                            \n                                    \n                                    Optional\n                                useCase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        detailsUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeprecatedLicenseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isOsiApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        licenseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        licenseText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        licenseTextHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        referenceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        standardLicenseTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        useCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/license-schema/license.schema.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type LicenseDocument = License & Document;\n\n@NestSchema({ timestamps: true })\nexport class License {\n  @Prop({ required: true })\n  licenseId: string;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: false })\n  reference?: string;\n\n  @Prop({ required: false })\n  detailsUrl?: string;\n\n  @Prop({ required: false })\n  isDeprecatedLicenseId?: boolean;\n\n  @Prop({ required: false })\n  referenceNumber?: number;\n\n  @Prop({ required: false, type: [String] })\n  references?: string[];\n\n  @Prop({ required: false })\n  isOsiApproved?: boolean;\n\n  @Prop({ required: false })\n  licenseText?: string;\n\n  @Prop({ required: false })\n  standardLicenseTemplate?: string;\n\n  @Prop({ required: false })\n  licenseTextHtml?: string;\n\n  @Prop({ required: false, type: Object })\n  useCase?: {\n    category?: string;\n    licenseFamily?: string;\n    licenseRisk?: string;\n  };\n\n  @Prop({ required: false })\n  summary?: string;\n}\n\nexport const LicenseSchema = SchemaFactory.createForClass(License);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LicenseSchemaModule.html":{"url":"modules/LicenseSchemaModule.html","title":"module - LicenseSchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    LicenseSchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/license-schema/license-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { License, LicenseSchema } from './license.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: License.name, schema: LicenseSchema }]),\n  ],\n  exports: [MongooseModule],\n})\nexport class LicenseSchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LicensesController.html":{"url":"controllers/LicensesController.html","title":"controller - LicensesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LicensesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/licenses/licenses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                licenses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                getDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/licenses/licenses.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDetails(spdxId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':spdxId')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/licenses/licenses.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                spdxId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { LicensesService } from './licenses.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AccessTokenGuard } from '../auth/guards/accessToken.guard';\n\n@Controller('licenses')\nexport class LicensesController {\n  constructor(private readonly licensesService: LicensesService) {}\n\n  @Post('seed')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  create() {\n    return this.licensesService.seed();\n  }\n\n  @Get(':spdxId')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  getDetails(@Param('spdxId') spdxId: string) {\n    return this.licensesService.getDetails(spdxId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LicensesModule.html":{"url":"modules/LicensesModule.html","title":"module - LicensesModule","body":"\n                   \n\n\n\n\n    Modules\n    LicensesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LicensesModule\n\n\n\ncluster_LicensesModule_providers\n\n\n\ncluster_LicensesModule_imports\n\n\n\n\nLicenseSchemaModule\n\nLicenseSchemaModule\n\n\n\nLicensesModule\n\nLicensesModule\n\nLicensesModule -->\n\nLicenseSchemaModule->LicensesModule\n\n\n\n\n\nLicensesService\n\nLicensesService\n\nLicensesModule -->\n\nLicensesService->LicensesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/licenses/licenses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LicensesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LicensesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LicenseSchemaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LicensesService } from './licenses.service';\nimport { LicensesController } from './licenses.controller';\nimport { LicenseSchemaModule } from 'src/database/license-schema/license-schema.module';\n\n@Module({\n  imports: [LicenseSchemaModule],\n  controllers: [LicensesController],\n  providers: [LicensesService],\n})\nexport class LicensesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LicensesService.html":{"url":"injectables/LicensesService.html","title":"injectable - LicensesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LicensesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/licenses/licenses.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDetails\n                            \n                            \n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(licenseModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/licenses/licenses.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        licenseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDetails(spdxId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/licenses/licenses.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                spdxId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/licenses/licenses.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Get, Injectable, Param, Post, UseGuards } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport {\n  License,\n  LicenseDocument,\n} from 'src/database/license-schema/license.schema';\nimport * as fs from 'fs';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AccessTokenGuard } from '../auth/guards/accessToken.guard';\n\n@Injectable()\nexport class LicensesService {\n  constructor(\n    @InjectModel(License.name)\n    private licenseModel: Model,\n  ) {}\n\n  async seed() {\n    const jsonData = JSON.parse(fs.readFileSync('spdx.json', 'utf-8')); //spdx.json is added in the gitignore file. If needed get it from google drive.\n    // Danger: Uncomment the following only if you need to seed. \n    // await this.licenseModel.insertMany(jsonData); \n    return 'Seeded licenses';\n  }\n\n  async getDetails(spdxId: string) {\n    return await this.licenseModel.findOne({ licenseId: spdxId.toUpperCase() });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                emailAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        emailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email address of the user', example: 'johndoe@example.com'})@IsEmail({}, {message: 'Invalid email address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user', example: 'StrongP@ssw0rd!'})@IsString()@IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minSymbols: 1}, {message: 'Invalid password format.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEmail,\n  IsNotEmpty,\n  IsStrongPassword,\n  Matches,\n} from 'class-validator';\n\nexport class SignupDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'John Doe',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Name should not be empty' })\n  @Matches(/^[A-Za-z\\s]+$/, {\n    message: 'Name can only contain letters and spaces',\n  })\n  displayName: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description:\n      'The password for the user account, must meet strong password criteria',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n      minNumbers: 0,\n    },\n    {\n      message:\n        'Invalid password format.Password mustbe 8 character long and must contain minimum one uppercase,lowercase and special symbol',\n    },\n  )\n  password: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Invalid password format.',\n    },\n  )\n  password: string;\n}\n\nexport class GithubTokenDTO {\n  @ApiProperty({\n    description: 'Github access token',\n    example: 'Some valid access token',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Github token should not be empty' })\n  accessToken: string;\n}\n\nexport class VerifyEmailDto {\n  @ApiProperty({\n    description: 'The email verification token',\n    example: 'abc123xyz',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Token should not be empty' })\n  token: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\nexport class EmailDTO {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPSecret.html":{"url":"classes/OTPSecret.html","title":"class - OTPSecret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPSecret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/otpsecret-schema/otp-secret.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                emailAddress\n                            \n                            \n                                    \n                                secret\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/otpsecret-schema/otp-secret.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/otpsecret-schema/otp-secret.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/otpsecret-schema/otp-secret.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/otpsecret-schema/otp-secret.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema as NestSchema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nexport type OTPSecretDocument = OTPSecret & Document;\n\n@NestSchema({ timestamps: true })\nexport class OTPSecret extends Document {\n  @Prop({ required: true, unique: true })\n  emailAddress: string;\n\n  @Prop({ required: true })\n  secret: string;\n\n  @Prop({ type: Date, default: Date.now })\n  createdAt: Date;\n\n  @Prop({ type: Date, default: Date.now })\n  updatedAt: Date;\n}\n\nexport const OTPSecretSchema = SchemaFactory.createForClass(OTPSecret);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OTPSecretSchemaModule.html":{"url":"modules/OTPSecretSchemaModule.html","title":"module - OTPSecretSchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    OTPSecretSchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/otpsecret-schema/otp-secret-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OTPSecret, OTPSecretSchema } from './otp-secret.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: OTPSecret.name, schema: OTPSecretSchema },\n    ]),\n  ],\n  exports: [MongooseModule],\n})\nexport class OTPSecretSchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/refreshToken.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Repository.html":{"url":"classes/Repository.html","title":"class - Repository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Repository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/repository-schema/repository.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultBranch\n                            \n                            \n                                    \n                                githubApp\n                            \n                            \n                                    \n                                htmlUrl\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                isPrivate\n                            \n                            \n                                    \n                                isSelected\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                ownerType\n                            \n                            \n                                    \n                                repoDescription\n                            \n                            \n                                    \n                                repoName\n                            \n                            \n                                    \n                                repoUrl\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultBranch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        githubApp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GithubApp\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'ObjectId', ref: 'GithubApp', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        htmlUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPrivate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ownerType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        repoDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        repoName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        repoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'ObjectId', ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/repository-schema/repository.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\nimport { User } from '../user-schema/user.schema';\nimport { GithubApp } from '../githubapp-schema/github-app.schema';\n\nexport type RepositoryDocument = Repository & Document;\n\n@NestSchema({ timestamps: true })\nexport class Repository {\n  @Prop({ type: 'ObjectId', ref: 'User', required: true }) // Reference to the User schema\n  user: User;\n\n  @Prop({ required: true })\n  repoName: string;\n\n  @Prop({ required: true })\n  repoUrl: string;\n\n  @Prop({ required: true })\n  repoDescription: string;\n\n  @Prop({ required: true })\n  owner: string;\n\n  @Prop({ required: true })\n  ownerType: string;\n\n  @Prop({ required: true }) // GitHub repository URL\n  htmlUrl: string;\n\n  @Prop({ required: true })\n  isPrivate: boolean;\n\n  @Prop({ required: true })\n  defaultBranch: string;\n\n  @Prop({ type: 'ObjectId', ref: 'GithubApp', required: true })\n  githubApp: GithubApp;\n\n  @Prop({ default: false }) // Indicates if the repository is selected (defaults to false)\n  isSelected: boolean;\n\n  @Prop({ default: false })\n  isDeleted: boolean;\n}\n\nexport const RepositorySchema = SchemaFactory.createForClass(Repository);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepositoryController.html":{"url":"controllers/RepositoryController.html","title":"controller - RepositoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepositoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/repository/repository.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                repositories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAllRepos\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getSelectedRepos\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                readDependency\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                selectAllRepos\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                selectRepo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                selectRepos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAllRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRepos(page: string, limit: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('repos')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/repository/repository.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getSelectedRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSelectedRepos(page: string, limit: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('selected-repos')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/repository/repository.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        readDependency\n                        \n                    \n                \n            \n            \n                \n                        \n                    readDependency(repoId: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@ApiBearerAuth()@Get('read-dependencies')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/repository/repository.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                repoId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        selectAllRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectAllRepos(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('select-all')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/repository/repository.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        selectRepo\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectRepo(selectRepoUrlsSingleDTO: SelectRepoUrlSingleDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('select-repo')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/repository/repository.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectRepoUrlsSingleDTO\n                                            \n                                                            SelectRepoUrlSingleDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        selectRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectRepos(selectRepoUrlsDTO: SelectRepoUrlsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('select-repos')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/repository/repository.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectRepoUrlsDTO\n                                            \n                                                            SelectRepoUrlsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\n\nimport { RepositoryService } from './repository.service';\n// import { AccessTokenGuard } from '../auth/guards/accessToken.guard';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AccessTokenGuard } from '../auth/guards/accessToken.guard';\nimport {\n  SelectRepoUrlsDto,\n  SelectRepoUrlSingleDTO,\n} from './dto/bulkselect.dto';\n// import { SelectRepoUrlDto } from './dto/github.dto';\n\n@Controller('repositories')\nexport class RepositoryController {\n  constructor(private repositoryService: RepositoryService) {}\n  @Get('repos')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  async getAllRepos(\n    @Query('page') page: string,\n    @Query('limit') limit: string,\n    @Req() req: Request,\n  ) {\n    return this.repositoryService.getAllRepos(\n      req['user'].userId,\n      +page,\n      +limit,\n    );\n  }\n  @Post('select-repos')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  async selectRepos(@Body() selectRepoUrlsDTO: SelectRepoUrlsDto) {\n    return this.repositoryService.selectRepos(selectRepoUrlsDTO.selectedRepos);\n  }\n  @Post('select-repo')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  async selectRepo(@Body() selectRepoUrlsSingleDTO: SelectRepoUrlSingleDTO) {\n    return this.repositoryService.selectRepo(\n      selectRepoUrlsSingleDTO.selectedRepo,\n    );\n  }\n\n  @Get('selected-repos')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  async getSelectedRepos(\n    @Query('page') page: string,\n    @Query('limit') limit: string,\n    @Req() req: Request,\n  ) {\n    return this.repositoryService.selectedRepos(\n      +page,\n      +limit,\n      req['user'].userId,\n    );\n  }\n  @Post('select-all')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  async selectAllRepos(@Req() req: Request) {\n    return this.repositoryService.selectAll(req['user'].userId);\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @ApiBearerAuth()\n  @Get('read-dependencies')\n  async readDependency(@Query('repo-id') repoId: string, @Req() req: Request) {\n    return await this.repositoryService.readDependencies(\n      repoId,\n      req['user'].userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepositoryModule.html":{"url":"modules/RepositoryModule.html","title":"module - RepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    RepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RepositoryModule\n\n\n\ncluster_RepositoryModule_exports\n\n\n\ncluster_RepositoryModule_imports\n\n\n\ncluster_RepositoryModule_providers\n\n\n\n\nDependenciesModule\n\nDependenciesModule\n\n\n\nRepositoryModule\n\nRepositoryModule\n\nRepositoryModule -->\n\nDependenciesModule->RepositoryModule\n\n\n\n\n\nDependencyRepositorySchemaModule\n\nDependencyRepositorySchemaModule\n\nRepositoryModule -->\n\nDependencyRepositorySchemaModule->RepositoryModule\n\n\n\n\n\nGithubAppModule\n\nGithubAppModule\n\nRepositoryModule -->\n\nGithubAppModule->RepositoryModule\n\n\n\n\n\nGithubAppSchemaModule\n\nGithubAppSchemaModule\n\nRepositoryModule -->\n\nGithubAppSchemaModule->RepositoryModule\n\n\n\n\n\nRepositorySchemaModule\n\nRepositorySchemaModule\n\nRepositoryModule -->\n\nRepositorySchemaModule->RepositoryModule\n\n\n\n\n\nUserSchemaModule\n\nUserSchemaModule\n\nRepositoryModule -->\n\nUserSchemaModule->RepositoryModule\n\n\n\n\n\nRepositoryService \n\nRepositoryService \n\nRepositoryService  -->\n\nRepositoryModule->RepositoryService \n\n\n\n\n\nRepositoryService\n\nRepositoryService\n\nRepositoryModule -->\n\nRepositoryService->RepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/repository/repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepositoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepositoryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DependenciesModule\n                        \n                        \n                            DependencyRepositorySchemaModule\n                        \n                        \n                            GithubAppModule\n                        \n                        \n                            GithubAppSchemaModule\n                        \n                        \n                            RepositorySchemaModule\n                        \n                        \n                            UserSchemaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepositoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios'; // Import HttpModule\nimport { RepositoryService } from './repository.service';\n\nimport { RepositoryController } from './repository.controller';\nimport { GithubAppModule } from '../github-app/github-app.module';\nimport { UserSchemaModule } from 'src/database/user-schema/user-schema.module';\nimport { RepositorySchemaModule } from 'src/database/repository-schema/repository-schema.module';\nimport { GithubAppSchemaModule } from 'src/database/githubapp-schema/github-app-schema.module';\nimport { DependencyRepositorySchemaModule } from 'src/database/dependency-repository-schema/dependency-repository-schema.module';\nimport { DependenciesModule } from '../dependencies/dependencies.module';\nimport { DependencySchemaModule } from 'src/database/dependency-schema/dependency-schema.module';\n@Module({\n  imports: [\n    HttpModule,\n    GithubAppSchemaModule,\n    UserSchemaModule,\n    RepositorySchemaModule,\n    DependencyRepositorySchemaModule,\n    DependenciesModule,\n    GithubAppModule,\n  ], // Add HttpModule to imports\n  controllers: [RepositoryController],\n  providers: [RepositoryService],\n  exports: [RepositoryService], // Export GithubService if it will be used in other modules\n})\nexport class RepositoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepositorySchemaModule.html":{"url":"modules/RepositorySchemaModule.html","title":"module - RepositorySchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    RepositorySchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/repository-schema/repository-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Repository, RepositorySchema } from './repository.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Repository.name, schema: RepositorySchema },\n    ]),\n  ],\n  exports: [MongooseModule],\n})\nexport class RepositorySchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryService.html":{"url":"injectables/RepositoryService.html","title":"injectable - RepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/repository/repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDependencies\n                            \n                            \n                                    Async\n                                getAllRepos\n                            \n                            \n                                    Private\n                                getRepositoriesPipeline\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                readDependencies\n                            \n                            \n                                    Async\n                                saveDependencies\n                            \n                            \n                                    Async\n                                selectAll\n                            \n                            \n                                    Async\n                                selectedRepos\n                            \n                            \n                                    Async\n                                selectRepo\n                            \n                            \n                                    Async\n                                selectRepos\n                            \n                            \n                                    Private\n                                watchRepositorySelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubAppService: GithubAppService, dependencyService: DependenciesService, userModel: Model, RepositoryModel: Model, GithubAppModel: Model, DependencyRepositoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/repository/repository.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubAppService\n                                                  \n                                                        \n                                                                        GithubAppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dependencyService\n                                                  \n                                                        \n                                                                        DependenciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        RepositoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        GithubAppModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        DependencyRepositoryModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatDependencies\n                        \n                    \n                \n            \n            \n                \nformatDependencies(dependencies: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:330\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencies\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRepos(userId: string, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getRepositoriesPipeline\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRepositoriesPipeline(userId: string, skipVal: number, limit: number, onlySelected: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                onlySelected\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        readDependencies\n                        \n                    \n                \n            \n            \n                \n                        \n                    readDependencies(repoId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:408\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                repoId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDependencies\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDependencies(repoId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:339\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                repoId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:321\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectedRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectedRepos(page: number, limit: number, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:293\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectRepo\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectRepo(urlId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:274\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                urlId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectRepos\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectRepos(urlIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:245\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                urlIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        watchRepositorySelection\n                        \n                    \n                \n            \n            \n                \n                        \n                    watchRepositorySelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/repository/repository.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { User, UserDocument } from '../../database/user-schema/user.schema';\nimport { Model, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport {\n  Repository,\n  RepositoryDocument,\n} from '../../database/repository-schema/repository.schema';\nimport {\n  GithubApp,\n  GithubAppDocument,\n} from '../../database/githubapp-schema/github-app.schema';\nimport { GithubAppService } from '../github-app/github-app.service';\nimport { validatePagination } from './validator/pagination.validator';\nimport {\n  DependencyRepository,\n  DependencyRepositoryDocument,\n} from 'src/database/dependency-repository-schema/dependency-repository.schema';\nimport { DependenciesService } from '../dependencies/dependencies.service';\n@Injectable()\nexport class RepositoryService {\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly githubAppService: GithubAppService,\n    private readonly dependencyService: DependenciesService,\n    @InjectModel(User.name) private userModel: Model,\n    @InjectModel(Repository.name)\n    private RepositoryModel: Model,\n    @InjectModel(GithubApp.name)\n    private GithubAppModel: Model,\n    @InjectModel(DependencyRepository.name)\n    private DependencyRepositoryModel: Model,\n  ) {}\n  onModuleInit() {\n    this.watchRepositorySelection(); // listent to db changes\n  }\n  private watchRepositorySelection() {\n    const changeStream = this.RepositoryModel.watch([\n      {\n        $match: {\n          operationType: 'update',\n          'updateDescription.updatedFields.isSelected': true, // listen to db changes when isSelected is equal to true\n        },\n      },\n    ]);\n\n    changeStream.on('change', async (change) => {\n      console.log(change);\n\n      const { documentKey, updateDescription } = change;\n      console.log(\n        `Repository ID: ${documentKey._id}, isSelected: ${updateDescription.updatedFields.isSelected}`,\n      );\n\n      // Extract repository ID\n      const repoId = documentKey._id.toString();\n\n      try {\n        // Fetch the full repository document\n        const repository = await this.RepositoryModel.findOne({\n          _id: new Types.ObjectId(repoId),\n        })\n          .populate('user') // Optionally populate user and other references\n          .exec();\n\n        if (repository) {\n          await this.saveDependencies(\n            repository._id.toString(),\n            repository.user['_id'].toString(),\n          );\n        } else {\n          console.log('Repository not found');\n        }\n      } catch (error) {\n        console.error('Error fetching repository:', error);\n      }\n    });\n\n    changeStream.on('error', (error) => {\n      console.error('Change Stream Error:', error);\n    });\n  }\n  private getRepositoriesPipeline(\n    userId: string,\n    skipVal: number,\n    limit: number,\n    onlySelected: boolean = false,\n  ) {\n    const matchConditions: any = {\n      user: new Types.ObjectId(userId),\n      isDeleted: false,\n    };\n\n    if (onlySelected) {\n      matchConditions.isSelected = true;\n    }\n\n    return [\n      { $match: matchConditions },\n      {\n        $lookup: {\n          from: 'githubapps',\n          localField: 'githubApp',\n          foreignField: '_id',\n          as: 'githubApp',\n        },\n      },\n      {\n        $unwind: {\n          path: '$githubApp',\n          preserveNullAndEmptyArrays: false,\n        },\n      },\n      {\n        $match: {\n          'githubApp.isDeleted': false,\n        },\n      },\n      {\n        $facet: {\n          repositories: [\n            { $skip: skipVal },\n            { $limit: limit },\n            {\n              $project: {\n                githubApp: 0,\n              },\n            },\n          ],\n          totalCount: [{ $count: 'count' }],\n        },\n      },\n    ];\n  }\n  async getAllRepos(userId: string, page = 1, limit = 10) {\n    const user = await this.userModel.findById(userId).exec();\n    const { pageNum, limitNum } = validatePagination(page, limit);\n\n    const skipVal = (pageNum - 1) * limitNum;\n    if (!user) {\n      throw new UnauthorizedException('User is not valid');\n    }\n\n    const githubApps = await this.GithubAppModel.find({\n      user: user,\n      isDeleted: false,\n    });\n\n    if (githubApps.length === 0) {\n      throw new BadRequestException('No GitHub app is installed');\n    }\n\n    try {\n      const bulkOps = [];\n\n      for (let i = 0; i  0) {\n        await this.RepositoryModel.bulkWrite(bulkOps);\n      }\n      const pipeline = this.getRepositoriesPipeline(userId, skipVal, limitNum);\n      const repositories = await this.RepositoryModel.aggregate(pipeline);\n\n      const repositoriesResult = repositories[0].repositories;\n      const totalCountResult =\n        repositories[0].totalCount.length > 0\n          ? repositories[0].totalCount[0].count\n          : 0;\n\n      return {\n        repositories: repositoriesResult,\n        totalCount: totalCountResult,\n      };\n    } catch (error) {\n      console.error('Unexpected error in getAllRepos:', error.message);\n    }\n  }\n\n  async selectRepos(urlIds: string[]) {\n    // Find matching repositories\n    const matchedRepos = await this.RepositoryModel.find(\n      {\n        _id: { $in: urlIds },\n        isDeleted: false,\n      },\n      { _id: 1 },\n    );\n\n    // Extract matched IDs\n    const matchedIds = matchedRepos.map((repo) => repo._id.toString());\n\n    // Check if all urlIds are found\n    const notFoundIds = urlIds.filter((id) => !matchedIds.includes(id));\n    if (notFoundIds.length > 0) {\n      throw new NotFoundException(\n        `Repositories not found or deleted: ${notFoundIds.join(', ')}`,\n      );\n    }\n\n    // Update the matched repositories\n    const updated = await this.RepositoryModel.updateMany(\n      { _id: { $in: matchedIds } },\n      { $set: { isSelected: true } },\n    );\n\n    return updated;\n  }\n  async selectRepo(urlId: string) {\n    // Find the repository by ID and ensure it's not deleted\n    const repo = await this.RepositoryModel.findOne(\n      { _id: urlId, isDeleted: false },\n      { _id: 1 },\n    );\n\n    // If the repository is not found, throw an error\n    if (!repo) {\n      throw new NotFoundException(`Repository not found or deleted: ${urlId}`);\n    }\n\n    // Update the repository to mark it as selected\n    return await this.RepositoryModel.updateOne(\n      { _id: urlId },\n      { $set: { isSelected: true } },\n    );\n  }\n\n  async selectedRepos(page = 1, limit = 10, userId: string) {\n    const user = await this.userModel.findById(userId).exec();\n    const { pageNum, limitNum } = validatePagination(page, limit);\n    const skipVal = (pageNum - 1) * limitNum;\n\n    if (!user) {\n      throw new UnauthorizedException('User is not valid');\n    }\n\n    const pipeline = this.getRepositoriesPipeline(\n      userId,\n      skipVal,\n      limitNum,\n      true,\n    );\n    const repositories = await this.RepositoryModel.aggregate(pipeline);\n\n    const repositoriesResult = repositories[0].repositories;\n    const totalCountResult =\n      repositories[0].totalCount.length > 0\n        ? repositories[0].totalCount[0].count\n        : 0;\n\n    return {\n      repositories: repositoriesResult,\n      totalCount: totalCountResult,\n    };\n  }\n  async selectAll(userId: string) {\n    const response = await this.RepositoryModel.updateMany(\n      { user: new Types.ObjectId(userId), isDeleted: false },\n      {\n        $set: { isSelected: true },\n      },\n    );\n    return response;\n  }\n  formatDependencies(dependencies: Record) {\n    return Object.entries(dependencies).map(([pkg, version]) => ({\n      package: pkg,\n      version:\n        typeof version === 'string'\n          ? pkg + '-' + version.replace(/^[^\\d]+/, '')\n          : '',\n    }));\n  }\n  async saveDependencies(repoId: string, userId: string) {\n    const repository = await this.RepositoryModel.findOne({\n      _id: new Types.ObjectId(repoId),\n      user: new Types.ObjectId(userId),\n      isDeleted: false,\n    }).populate('githubApp');\n\n    if (!repository) {\n      throw new NotFoundException('Repository not found.');\n    }\n\n    const accessToken = await this.githubAppService.createInstallationToken(\n      repository.githubApp.installationId,\n    );\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(`${repository.repoUrl}/contents/package.json`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            Accept: 'application/vnd.github.v3+json',\n            'X-GitHub-Api-Version': '2022-11-28',\n          },\n        }),\n      );\n\n      const dependencyFile = response.data;\n      const dependencyFileContentDecoded = atob(dependencyFile.content);\n      const dependencyJSON = JSON.parse(dependencyFileContentDecoded);\n      const allDependencies = {\n        ...dependencyJSON['dependencies'],\n        ...dependencyJSON['devDependencies'],\n      };\n\n      // Format dependencies\n      const formattedDependencies = this.formatDependencies(allDependencies);\n\n      // Get dependency entries in bulk\n      const dependencyEntries = await Promise.all(\n        formattedDependencies.map((dep) =>\n          this.dependencyService.create({ dependencyName: dep.package }),\n        ),\n      );\n\n      // Prepare bulk insert operations\n      const bulkOps = dependencyEntries.map((entry, index) => ({\n        updateOne: {\n          filter: {\n            repositoryId: new Types.ObjectId(repoId),\n            dependencyId: entry._id,\n          },\n          update: {\n            $set: { installedVersion: formattedDependencies[index].version },\n          },\n          upsert: true,\n        },\n      }));\n\n      // Perform bulk insert/update\n      if (bulkOps.length > 0) {\n        await this.DependencyRepositoryModel.bulkWrite(bulkOps);\n      }\n\n      return 'Done';\n    } catch (error) {\n      console.error(error);\n      throw new NotFoundException('Could not retrieve package.json');\n    }\n  }\n  async readDependencies(repoId: string, userId: string) {\n    const repository = await this.RepositoryModel.findOne({\n      _id: new Types.ObjectId(repoId),\n      user: new Types.ObjectId(userId),\n      isDeleted: false,\n    }).populate('githubApp');\n    if (repository) {\n      const accessToken = await this.githubAppService.createInstallationToken(\n        repository.githubApp.installationId,\n      );\n\n      try {\n        const response = await firstValueFrom(\n          this.httpService.get(repository.repoUrl + `/contents/package.json`, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n              Accept: 'application/vnd.github.v3+json',\n              'X-GitHub-Api-Version': '2022-11-28',\n            },\n          }),\n        ); // files can be listed using repository.repoUrl/contents/\n\n        const dependencyFile = response.data;\n        const dependencyFileContentDecoded = atob(dependencyFile.content);\n        return dependencyFileContentDecoded;\n      } catch (error) {\n        console.log(error);\n        throw new NotFoundException('Could not retrieve repository listing');\n      }\n    } else {\n      throw new NotFoundException('Repository not found.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectRepoUrlSingleDTO.html":{"url":"classes/SelectRepoUrlSingleDTO.html","title":"class - SelectRepoUrlSingleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectRepoUrlSingleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/repository/dto/bulkselect.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                selectedRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        selectedRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Selected repository URL by its MongoDB ObjectId', type: String, example: '65b2a4e8a4b2d5c123456789'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/repository/dto/bulkselect.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class SelectRepoUrlsDto {\n  @ApiProperty({\n    description: 'Array of selected repository URLs by their MongoDB ObjectId',\n    type: [String], // Indicates an array of strings (ObjectIds)\n    example: ['65b2a4e8a4b2d5c123456789', '65b2a4e8a4b2d5c987654321'],\n  })\n  @IsArray()\n  @IsMongoId({ each: true }) // Validate each ID in the array\n  selectedRepos: string[]; // Array of selected URL IDs\n}\n\nexport class SelectRepoUrlSingleDTO {\n  @ApiProperty({\n    description: 'Selected repository URL by its MongoDB ObjectId',\n    type: String,\n    example: '65b2a4e8a4b2d5c123456789',\n  })\n  @IsMongoId() // Validate as a MongoDB ObjectId\n  selectedRepo: string; // Single selected URL ID\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectRepoUrlsDto.html":{"url":"classes/SelectRepoUrlsDto.html","title":"class - SelectRepoUrlsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectRepoUrlsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/repository/dto/bulkselect.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                selectedRepos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        selectedRepos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of selected repository URLs by their MongoDB ObjectId', type: undefined, example: undefined})@IsArray()@IsMongoId({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/repository/dto/bulkselect.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class SelectRepoUrlsDto {\n  @ApiProperty({\n    description: 'Array of selected repository URLs by their MongoDB ObjectId',\n    type: [String], // Indicates an array of strings (ObjectIds)\n    example: ['65b2a4e8a4b2d5c123456789', '65b2a4e8a4b2d5c987654321'],\n  })\n  @IsArray()\n  @IsMongoId({ each: true }) // Validate each ID in the array\n  selectedRepos: string[]; // Array of selected URL IDs\n}\n\nexport class SelectRepoUrlSingleDTO {\n  @ApiProperty({\n    description: 'Selected repository URL by its MongoDB ObjectId',\n    type: String,\n    example: '65b2a4e8a4b2d5c123456789',\n  })\n  @IsMongoId() // Validate as a MongoDB ObjectId\n  selectedRepo: string; // Single selected URL ID\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                displayName\n                            \n                            \n                                    \n                                    \n                                emailAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the user', example: 'John Doe'})@IsString()@IsNotEmpty({message: 'Name should not be empty'})@Matches(/^[A-Za-z\\s]+$/, {message: 'Name can only contain letters and spaces'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        emailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email address of the user', example: 'johndoe@example.com'})@IsEmail({}, {message: 'Invalid email address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password for the user account, must meet strong password criteria', example: 'StrongP@ssw0rd!'})@IsString()@IsNotEmpty()@IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minSymbols: 1, minNumbers: 0}, {message: 'Invalid password format.Password mustbe 8 character long and must contain minimum one uppercase,lowercase and special symbol'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEmail,\n  IsNotEmpty,\n  IsStrongPassword,\n  Matches,\n} from 'class-validator';\n\nexport class SignupDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'John Doe',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Name should not be empty' })\n  @Matches(/^[A-Za-z\\s]+$/, {\n    message: 'Name can only contain letters and spaces',\n  })\n  displayName: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description:\n      'The password for the user account, must meet strong password criteria',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n      minNumbers: 0,\n    },\n    {\n      message:\n        'Invalid password format.Password mustbe 8 character long and must contain minimum one uppercase,lowercase and special symbol',\n    },\n  )\n  password: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Invalid password format.',\n    },\n  )\n  password: string;\n}\n\nexport class GithubTokenDTO {\n  @ApiProperty({\n    description: 'Github access token',\n    example: 'Some valid access token',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Github token should not be empty' })\n  accessToken: string;\n}\n\nexport class VerifyEmailDto {\n  @ApiProperty({\n    description: 'The email verification token',\n    example: 'abc123xyz',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Token should not be empty' })\n  token: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\nexport class EmailDTO {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/user-schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                avatarUrl\n                            \n                            \n                                    \n                                displayName\n                            \n                            \n                                    \n                                emailAddress\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                isVerified\n                            \n                            \n                                    \n                                loginType\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loginType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: LoginType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user-schema/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type UserDocument = User & Document;\n\nexport enum LoginType {\n  CREDENTIAL = 'credential',\n  GITHUB = 'github',\n}\n\n@NestSchema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  displayName: string;\n\n  @Prop({ required: true, unique: true })\n  emailAddress: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ required: true, enum: LoginType, default: LoginType.CREDENTIAL })\n  loginType: LoginType;\n\n  @Prop({ required: false, default: '' })\n  avatarUrl: string;\n\n  @Prop({ required: false, default: false })\n  isVerified: boolean;\n\n  @Prop({ required: false, default: false })\n  isDeleted: boolean;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserSchemaModule.html":{"url":"modules/UserSchemaModule.html","title":"module - UserSchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    UserSchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/user-schema/user-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  exports: [MongooseModule],\n})\nexport class UserSchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyEmailDto.html":{"url":"classes/VerifyEmailDto.html","title":"class - VerifyEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                emailAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        emailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email address of the user', example: 'user@example.com', type: String})@IsEmail({}, {message: 'Please provide a valid email address'})@IsNotEmpty({message: 'Email should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email verification token', example: 'abc123xyz', type: String})@IsString()@IsNotEmpty({message: 'Token should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth.dto.ts:97\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEmail,\n  IsNotEmpty,\n  IsStrongPassword,\n  Matches,\n} from 'class-validator';\n\nexport class SignupDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'John Doe',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Name should not be empty' })\n  @Matches(/^[A-Za-z\\s]+$/, {\n    message: 'Name can only contain letters and spaces',\n  })\n  displayName: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description:\n      'The password for the user account, must meet strong password criteria',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n      minNumbers: 0,\n    },\n    {\n      message:\n        'Invalid password format.Password mustbe 8 character long and must contain minimum one uppercase,lowercase and special symbol',\n    },\n  )\n  password: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'johndoe@example.com',\n  })\n  @IsEmail({}, { message: 'Invalid email address' })\n  emailAddress: string;\n\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'StrongP@ssw0rd!',\n  })\n  @IsString()\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Invalid password format.',\n    },\n  )\n  password: string;\n}\n\nexport class GithubTokenDTO {\n  @ApiProperty({\n    description: 'Github access token',\n    example: 'Some valid access token',\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Github token should not be empty' })\n  accessToken: string;\n}\n\nexport class VerifyEmailDto {\n  @ApiProperty({\n    description: 'The email verification token',\n    example: 'abc123xyz',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty({ message: 'Token should not be empty' })\n  token: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\nexport class EmailDTO {\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'user@example.com',\n    type: String,\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  @IsNotEmpty({ message: 'Email should not be empty' })\n  emailAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VulnerabilitiesController.html":{"url":"controllers/VulnerabilitiesController.html","title":"controller - VulnerabilitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VulnerabilitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vulnerabilities/vulnerabilities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vulnerabilities\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                getByCVEId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVulnerabilityDTO: CreateVulnerabilityDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVulnerabilityDTO\n                                            \n                                                            CreateVulnerabilityDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getByCVEId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByCVEId(cveId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('cveId/:cveId')@ApiBearerAuth()@UseGuards(AccessTokenGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { VulnerabilitiesService } from './vulnerabilities.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AccessTokenGuard } from '../auth/guards/accessToken.guard';\nimport { CreateVulnerabilityDTO } from './dto/create-vulnerability.dto';\n\n@Controller('vulnerabilities')\nexport class VulnerabilitiesController {\n  constructor(\n    private readonly vulnerabilitiesService: VulnerabilitiesService,\n  ) {}\n\n  @Post('create')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  create(@Body() createVulnerabilityDTO: CreateVulnerabilityDTO) {\n    return this.vulnerabilitiesService.create(createVulnerabilityDTO);\n  }\n\n  @Get('cveId/:cveId')\n  @ApiBearerAuth()\n  @UseGuards(AccessTokenGuard)\n  getByCVEId(@Param('cveId') cveId: string) {\n    return this.vulnerabilitiesService.getByCVEId(cveId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VulnerabilitiesModule.html":{"url":"modules/VulnerabilitiesModule.html","title":"module - VulnerabilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    VulnerabilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VulnerabilitiesModule\n\n\n\ncluster_VulnerabilitiesModule_providers\n\n\n\ncluster_VulnerabilitiesModule_imports\n\n\n\n\nDependencySchemaModule\n\nDependencySchemaModule\n\n\n\nVulnerabilitiesModule\n\nVulnerabilitiesModule\n\nVulnerabilitiesModule -->\n\nDependencySchemaModule->VulnerabilitiesModule\n\n\n\n\n\nVulnerabilitySchemaModule\n\nVulnerabilitySchemaModule\n\nVulnerabilitiesModule -->\n\nVulnerabilitySchemaModule->VulnerabilitiesModule\n\n\n\n\n\nDependenciesService\n\nDependenciesService\n\nVulnerabilitiesModule -->\n\nDependenciesService->VulnerabilitiesModule\n\n\n\n\n\nVulnerabilitiesService\n\nVulnerabilitiesService\n\nVulnerabilitiesModule -->\n\nVulnerabilitiesService->VulnerabilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vulnerabilities/vulnerabilities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DependenciesService\n                        \n                        \n                            VulnerabilitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VulnerabilitiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DependencySchemaModule\n                        \n                        \n                            VulnerabilitySchemaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VulnerabilitiesService } from './vulnerabilities.service';\nimport { VulnerabilitiesController } from './vulnerabilities.controller';\nimport { HttpModule } from '@nestjs/axios';\nimport { BullModule } from '@nestjs/bullmq';\nimport { VulnerabilityConsumer } from './vulnerabilities.consumer';\nimport { VulnerabilitySchemaModule } from 'src/database/vulnerability-schema/vulnerability-schema.module';\nimport { DependencySchemaModule } from 'src/database/dependency-schema/dependency-schema.module';\nimport { DependenciesService } from '../dependencies/dependencies.service';\n\n@Module({\n  imports: [\n    HttpModule,\n    BullModule.registerQueue({\n      name: 'vulnerabilities',\n    }),\n    BullModule.registerQueue({\n      name: 'dependency',\n    }),\n    DependencySchemaModule,\n    VulnerabilitySchemaModule,\n  ],\n  controllers: [VulnerabilitiesController],\n  providers: [VulnerabilitiesService, VulnerabilityConsumer, DependenciesService],\n})\nexport class VulnerabilitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VulnerabilitiesService.html":{"url":"injectables/VulnerabilitiesService.html","title":"injectable - VulnerabilitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VulnerabilitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vulnerabilities/vulnerabilities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                detectCVSSVersionFromScore\n                            \n                            \n                                    Async\n                                getByCVEId\n                            \n                            \n                                    Async\n                                getCVEInfoFromNVD\n                            \n                            \n                                    Async\n                                getVulnerabilityInfoFromOSV\n                            \n                            \n                                parseNvdResponse\n                            \n                            \n                                parseOSVData\n                            \n                            \n                                    Async\n                                processAffectedVersions\n                            \n                            \n                                    Async\n                                processVulnerability\n                            \n                            \n                                updateSeverityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService, dependenciesService: DependenciesService, vulnerabilityQueue: Queue, vulnerabilityModel: Model, vulnerabilityVersionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dependenciesService\n                                                  \n                                                        \n                                                                        DependenciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vulnerabilityQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vulnerabilityModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vulnerabilityVersionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVulnerabilityDTO: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVulnerabilityDTO\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detectCVSSVersionFromScore\n                        \n                    \n                \n            \n            \n                \ndetectCVSSVersionFromScore(cvssVector)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cvssVector\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"CVSS 3.0\" | \"CVSS 3.1\" | \"Unknown CVSS Version\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByCVEId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByCVEId(cveId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCVEInfoFromNVD\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCVEInfoFromNVD(dependencyId: string, cveId: string, vuln: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vuln\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVulnerabilityInfoFromOSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVulnerabilityInfoFromOSV(dependencyName: string, ecosystem: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependencyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ecosystem\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseNvdResponse\n                        \n                    \n                \n            \n            \n                \nparseNvdResponse(nvdData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nvdData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { error: string; nvdVulnStatus?: undefined; nvdDescription?: undefined; metrices?: undefined; weaknesses?: undefined; } | { nvdVulnStatus: any; nvdDescription: any; metrices: { cvssMetricV40: any; cvssMetricV31: any; cvssMetricV30: any; cvssMetricV2: any; }; weaknesses: any; error?: undefined; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseOSVData\n                        \n                    \n                \n            \n            \n                \nparseOSVData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processAffectedVersions\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAffectedVersions(dependency, savedVuln, affected)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependency\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                savedVuln\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                affected\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processVulnerability\n                        \n                    \n                \n            \n            \n                \n                        \n                    processVulnerability(dependency, vuln)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:275\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dependency\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vuln\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSeverityData\n                        \n                    \n                \n            \n            \n                \nupdateSeverityData(vulnData, cvssSeverities)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vulnData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cvssSeverities\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VulnerabilitiesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vulnerabilities/vulnerabilities.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { InjectQueue } from '@nestjs/bullmq';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { Queue } from 'bullmq';\nimport { firstValueFrom } from 'rxjs';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ConfigService } from '@nestjs/config';\nimport { DependenciesService } from '../dependencies/dependencies.service';\nimport {\n  Vulnerability,\n  VulnerabilityDocument,\n} from 'src/database/vulnerability-schema/vulnerability.schema';\nimport {\n  VulnerabilityVersion,\n  VulnerabilityVersionDocument,\n} from 'src/database/vulnerability-schema/vulnerability-version.schema';\n\n@Injectable()\nexport class VulnerabilitiesService {\n  private readonly logger = new Logger(VulnerabilitiesService.name);\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n    private readonly dependenciesService: DependenciesService,\n    @InjectQueue('vulnerabilities') private vulnerabilityQueue: Queue,\n    @InjectModel(Vulnerability.name)\n    private vulnerabilityModel: Model,\n    @InjectModel(VulnerabilityVersion.name)\n    private vulnerabilityVersionModel: Model,\n  ) {}\n\n  async create(createVulnerabilityDTO: any) {\n    await this.vulnerabilityQueue.add(\n      'get-vulnerability-info',\n      createVulnerabilityDTO,\n      {\n        delay: 1000,\n        attempts: 2,\n        removeOnComplete: true,\n        // repeat: { every: 24 * 60 * 60 * 1000 },\n      },\n    );\n  }\n\n  async getByCVEId(cveId: string) {\n    return await this.vulnerabilityModel.findOne({\n      cveId,\n    }).populate('dependencyId');\n  }\n\n  parseNvdResponse(nvdData) {\n    if (!nvdData?.vulnerabilities || nvdData.vulnerabilities.length === 0) {\n      return { error: 'No vulnerabilities found in the response' };\n    }\n\n    const cveData = nvdData.vulnerabilities[0]?.cve; // Assuming only one vulnerability\n    if (!cveData) return { error: 'Invalid CVE structure' };\n\n    return {\n      nvdVulnStatus: cveData.vulnStatus || '',\n      nvdDescription:\n        cveData.descriptions?.find((desc) => desc.lang === 'en')?.value || '',\n      metrices: {\n        cvssMetricV40:\n          cveData.metrics?.cvssMetricV40 &&\n          cveData.metrics?.cvssMetricV40.length > 0\n            ? cveData.metrics?.cvssMetricV40[0]\n            : null,\n        cvssMetricV31:\n          cveData.metrics?.cvssMetricV31 &&\n          cveData.metrics?.cvssMetricV31.length > 0\n            ? cveData.metrics?.cvssMetricV31[0]\n            : null,\n        cvssMetricV30:\n          cveData.metrics?.cvssMetricV30 &&\n          cveData.metrics?.cvssMetricV30.length > 0\n            ? cveData.metrics?.cvssMetricV30[0]\n            : null,\n        cvssMetricV2:\n          cveData.metrics?.cvssMetricV2 &&\n          cveData.metrics?.cvssMetricV2.length > 0\n            ? cveData.metrics?.cvssMetricV2[0]\n            : null,\n      },\n      weaknesses:\n        cveData.weaknesses?.map(\n          (weakness) => weakness.description?.[0]?.value,\n        ) || [],\n    };\n  }\n\n  parseOSVData(data: any) {\n    return data.vulns.map((vuln) => ({\n      id: vuln.id,\n      summary: vuln.summary,\n      details: vuln.details,\n      cveId: vuln.aliases?.[0] || '',\n      published: vuln.published,\n      cweId: vuln.database_specific?.cwe_ids || [],\n      nvd_published_at: vuln.database_specific?.nvd_published_at || '',\n      db_severity: vuln.database_specific?.severity || '',\n      references: vuln.references?.map((ref) => ref.url) || [],\n      CVSSseverity: vuln.severity || [],\n      affected:\n        vuln.affected?.map((aff) => ({\n          source: aff.database_specific?.source || '',\n          ranges:\n            aff.ranges?.map((range) => ({\n              introduced:\n                range.events?.find((event) => event.introduced)?.introduced ||\n                '',\n              fixed: range.events?.find((event) => event.fixed)?.fixed || '',\n            }))[0] || {}, // Pick first range if multiple exist\n        })) || [],\n    }));\n  }\n\n  async getCVEInfoFromNVD(dependencyId: string, cveId: string, vuln: any) {\n    try {\n      this.logger.log(`Fetching NVD data for ${cveId}...`);\n      const response = await firstValueFrom(\n        this.httpService.get(\n          `https://services.nvd.nist.gov/rest/json/cves/2.0`,\n          {\n            params: { cveId },\n            headers: {\n              apiKey: this.configService.get('NVD_API_KEY'),\n              Accept: 'application/json',\n            },\n            timeout: 10000,\n          },\n        ),\n      );\n\n      if (!response.data) {\n        this.logger.error(`Empty response for ${cveId}`);\n        return;\n      }\n\n      const cveInfo = this.parseNvdResponse(response.data);\n      if (!cveInfo || cveInfo.error) {\n        this.logger.warn(`No valid data found for CVE: ${cveId}`);\n        return;\n      }\n      let vulnData = {\n        nvdVulnStatus: cveInfo.nvdVulnStatus,\n        nvdDescription: cveInfo.nvdDescription,\n        weaknesses: cveInfo.weaknesses,\n        severity: cveInfo.metrices,\n      };\n\n      this.updateSeverityData(vulnData, vuln.CVSSseverity);\n\n      const savedVuln = await this.vulnerabilityModel.findOneAndUpdate(\n        { id: vuln.id },\n        { $set: vulnData },\n        { upsert: true, new: true },\n      );\n\n      this.logger.log(`Finished processing CVE ${cveId}`);\n    } catch (error) {\n      this.logger.error(\n        `Error processing NVD CVE: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  detectCVSSVersionFromScore(cvssVector) {\n    const match = cvssVector.match(/^CVSS:(\\d+\\.\\d+)/); // Extract version\n    if (match) {\n      const version = match[1];\n      if (version === '3.0') {\n        return 'CVSS 3.0';\n      } else if (version === '3.1') {\n        return 'CVSS 3.1';\n      }\n    }\n    return 'Unknown CVSS Version';\n  }\n\n  updateSeverityData(vulnData, cvssSeverities) {\n    if (cvssSeverities && cvssSeverities.length > 0) {\n      for (const severity of cvssSeverities) {\n        if (!vulnData.severity.cvssMetricV40 && severity['type'] == 'CVSS_V4') {\n          vulnData.severity.cvssMetricV40 = {\n            source: '',\n            type: '',\n            cvssData: { version: '4.0', vectorString: severity['score'] || '' },\n          };\n        } else if (\n          !vulnData.severity.cvssMetricV31 &&\n          severity['type'] == 'CVSS_V3' &&\n          this.detectCVSSVersionFromScore(severity['score']) === 'CVSS 3.1'\n        ) {\n          vulnData.severity.cvssMetricV31 = {\n            source: '',\n            type: '',\n            cvssData: { version: '3.1', vectorString: severity['score'] || '' },\n          };\n        } else if (\n          !vulnData.severity.cvssMetricV30 &&\n          severity['type'] == 'CVSS_V3' &&\n          this.detectCVSSVersionFromScore(severity['score']) === 'CVSS 3.0'\n        ) {\n          vulnData.severity.cvssMetricV30 = {\n            source: '',\n            type: '',\n            cvssData: { version: '3.0', vectorString: severity['score'] || '' },\n          };\n        } else if (\n          !vulnData.severity.cvssMetricV2 &&\n          severity['type'] == 'CVSS_V2'\n        ) {\n          vulnData.severity.cvssMetricV2 = {\n            source: '',\n            type: '',\n            cvssData: { version: '2.0', vectorString: severity['score'] || '' },\n          };\n        }\n      }\n    }\n  }\n\n  async getVulnerabilityInfoFromOSV(dependencyName: string, ecosystem: string) {\n    try {\n      this.logger.log(`Fetching OSV data for ${dependencyName}...`);\n      const response = await firstValueFrom(\n        this.httpService.post(`https://api.osv.dev/v1/query`, {\n          package: { name: dependencyName, ecosystem },\n        }),\n      );\n\n      if (!response.data) {\n        this.logger.error(`Empty response for ${dependencyName}`);\n        return;\n      }\n\n      const vulns = this.parseOSVData(response.data);\n      if (vulns.length === 0) {\n        this.logger.log(`No vulnerabilities found for ${dependencyName}`);\n        return;\n      }\n\n      this.logger.log(\n        `Processing ${vulns.length} vulnerabilities for ${dependencyName}`,\n      );\n\n      const dependency =\n        await this.dependenciesService.getDetailsByDependencyName(\n          dependencyName,\n        );\n      if (!dependency) {\n        this.logger.warn(`Dependency ${dependencyName} not found in DB`);\n        return;\n      }\n\n      await Promise.all(\n        vulns.map(async (vuln) => this.processVulnerability(dependency, vuln)),\n      );\n\n      this.logger.log(\n        `Finished processing vulnerabilities for ${dependencyName}`,\n      );\n    } catch (error) {\n      this.logger.error(\n        `Error processing OSV vulnerabilities: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  async processVulnerability(dependency, vuln) {\n    await this.vulnerabilityQueue.add(\n      'get-cve-info',\n      { dependency: dependency._id, vuln },\n      {\n        delay: 20000,\n        attempts: 2,\n        backoff: {\n          type: 'exponential',\n          delay: 5000, // Increase delay for each retry\n        },\n        removeOnComplete: true,\n      },\n    );\n\n    const vulnData = {\n      dependencyId: dependency._id,\n      id: vuln.id,\n      summary: vuln.summary,\n      details: vuln.details,\n      cveId: vuln.cveId,\n      published: vuln.published,\n      cweId: vuln.cweId,\n      nvd_published_at: vuln.nvd_published_at,\n      intensity: vuln.db_severity,\n      references: vuln.references,\n    };\n\n    const savedVuln = await this.vulnerabilityModel.findOneAndUpdate(\n      { id: vuln.id },\n      { $set: vulnData },\n      { upsert: true, new: true },\n    );\n\n    await Promise.all(\n      vuln.affected.map((affected) =>\n        this.processAffectedVersions(dependency, savedVuln, affected),\n      ),\n    );\n  }\n\n  async processAffectedVersions(dependency, savedVuln, affected) {\n    const introducedVersion =\n      await this.dependenciesService.getVersionByDepVersion(\n        dependency._id,\n        affected.ranges.introduced,\n      );\n    const fixedVersion = await this.dependenciesService.getVersionByDepVersion(\n      dependency._id,\n      affected.ranges.fixed,\n    );\n\n    if (introducedVersion && fixedVersion) {\n      this.logger.log(\n        `Found versions ${introducedVersion.version} to ${fixedVersion.version} for ${savedVuln.id}`,\n      );\n\n      // const notFixedVersions =\n      //   await this.dependenciesService.getVersionsInPublishRange(\n      //     dependency._id,\n      //     introducedVersion.publishDate,\n      //     fixedVersion.publishDate,\n      //   );\n\n      const bulkOps = [\n        {\n          updateOne: {\n            filter: {\n              dependencyId: dependency._id,\n              vulnerability: savedVuln._id,\n              dependencyVersion: introducedVersion._id,\n              status: 'introduced',\n            },\n            update: { $set: { source: affected.source } },\n            upsert: true,\n          },\n        },\n        // ...notFixedVersions.map((v) => ({\n        //   updateOne: {\n        //     filter: {\n        //       dependencyId: dependency._id,\n        //       vulnerability: savedVuln._id,\n        //       dependencyVersion: v._id,\n        //       status: 'not-fixed',\n        //     },\n        //     update: { $set: { source: affected.source } },\n        //     upsert: true,\n        //   },\n        // })),\n        {\n          updateOne: {\n            filter: {\n              dependencyId: dependency._id,\n              vulnerability: savedVuln._id,\n              dependencyVersion: fixedVersion._id,\n              status: 'fixed',\n            },\n            update: { $set: { source: affected.source } },\n            upsert: true,\n          },\n        },\n      ];\n\n      await this.vulnerabilityVersionModel.bulkWrite(bulkOps);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vulnerability.html":{"url":"classes/Vulnerability.html","title":"class - Vulnerability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vulnerability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/vulnerability-schema/vulnerability.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                cveId\n                            \n                            \n                                    \n                                    Optional\n                                cweId\n                            \n                            \n                                    \n                                dependencyId\n                            \n                            \n                                    \n                                details\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                intensity\n                            \n                            \n                                    \n                                    Optional\n                                nvd_published_at\n                            \n                            \n                                    \n                                    Optional\n                                nvdDescription\n                            \n                            \n                                    \n                                    Optional\n                                nvdVulnStatus\n                            \n                            \n                                    \n                                published\n                            \n                            \n                                    \n                                    Optional\n                                references\n                            \n                            \n                                    \n                                    Optional\n                                severity\n                            \n                            \n                                    \n                                summary\n                            \n                            \n                                    \n                                    Optional\n                                weaknesses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        cveId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        cweId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Dependency'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        intensity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        nvd_published_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        nvdDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        nvdVulnStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        published\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        weaknesses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability.schema.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type VulnerabilityDocument = Vulnerability & Document;\n\n@NestSchema({ timestamps: true })\nexport class Vulnerability {\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Dependency',\n  })\n  dependencyId: MongooseSchema.Types.ObjectId;\n\n  @Prop({ required: false })\n  id: string;\n\n  @Prop({ required: false })\n  summary: string;\n\n  @Prop({ required: false })\n  details: string;\n\n  @Prop({ required: false })\n  cveId?: string;\n\n  @Prop({ required: false })\n  published: string;\n\n  @Prop({ required: false, type: [String] })\n  cweId?: string[];\n\n  @Prop({ required: false })\n  nvd_published_at?: string;\n\n  @Prop({ required: false })\n  intensity?: string;\n\n  @Prop({ required: false, type: [String] })\n  references?: string[];\n\n  @Prop({ required: false })\n  nvdVulnStatus?: string;\n\n  @Prop({ required: false })\n  nvdDescription?: string;\n\n  @Prop({ required: false, type: [String] })\n  weaknesses?: string[];\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  severity?: {\n    cvssMetricV40?: {\n      source: string;\n      type: string;\n      cvssData: {\n        version: string;\n        vectorString: string;\n        baseScore: number;\n        baseSeverity: string;\n        attackVector: string;\n        attackComplexity: string;\n        privilegesRequired: string;\n        userInteraction: string;\n        scope: string;\n        confidentialityImpact: string;\n        integrityImpact: string;\n        availabilityImpact: string;\n      };\n    };\n    cvssMetricV31?: {\n      source: string;\n      type: string;\n      cvssData: {\n        version: string;\n        vectorString: string;\n        baseScore: number;\n        baseSeverity: string;\n        attackVector: string;\n        attackComplexity: string;\n        privilegesRequired: string;\n        userInteraction: string;\n        scope: string;\n        confidentialityImpact: string;\n        integrityImpact: string;\n        availabilityImpact: string;\n      };\n    };\n    cvssMetricV30?: {\n      source: string;\n      type: string;\n      cvssData: {\n        version: string;\n        vectorString: string;\n        baseScore: number;\n        baseSeverity: string;\n        attackVector: string;\n        attackComplexity: string;\n        privilegesRequired: string;\n        userInteraction: string;\n        scope: string;\n        confidentialityImpact: string;\n        integrityImpact: string;\n        availabilityImpact: string;\n      };\n    };\n    cvssMetricV2?: {\n      source: string;\n      type: string;\n      cvssData: {\n        version: string;\n        vectorString: string;\n        baseScore: number;\n        baseSeverity: string;\n        attackVector: string;\n        attackComplexity: string;\n        privilegesRequired: string;\n        userInteraction: string;\n        scope: string;\n        confidentialityImpact: string;\n        integrityImpact: string;\n        availabilityImpact: string;\n      };\n    };\n  };\n}\n\nexport const VulnerabilitySchema = SchemaFactory.createForClass(Vulnerability);\nVulnerabilitySchema.index({ dependencyId: 1 });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VulnerabilityConsumer.html":{"url":"classes/VulnerabilityConsumer.html","title":"class - VulnerabilityConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VulnerabilityConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vulnerabilities/vulnerabilities.consumer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onActive\n                            \n                            \n                                    \n                                onCompleted\n                            \n                            \n                                    \n                                onDelayed\n                            \n                            \n                                    \n                                onEventActive\n                            \n                            \n                                    \n                                onWaiting\n                            \n                            \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vulnerabilitiesService: VulnerabilitiesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vulnerabilitiesService\n                                                  \n                                                        \n                                                                        VulnerabilitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VulnerabilityConsumer.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onActive\n                        \n                    \n                \n            \n            \n                \n                        \n                    onActive(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnWorkerEvent('active')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onCompleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCompleted(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnWorkerEvent('completed')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDelayed\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDelayed(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueEvent('delayed')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onEventActive\n                        \n                    \n                \n            \n            \n                \n                        \n                    onEventActive(job: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueEvent('active')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onWaiting\n                        \n                    \n                \n            \n            \n                \n                        \n                    onWaiting(jobId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueEvent('waiting')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jobId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        process\n                        \n                    \n                \n            \n            \n                \n                        \n                    process(job: Job)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vulnerabilities/vulnerabilities.consumer.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Processor,\n  OnWorkerEvent,\n  OnQueueEvent,\n  WorkerHost,\n} from '@nestjs/bullmq';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bullmq';\nimport { VulnerabilitiesService } from './vulnerabilities.service';\n\n@Processor('vulnerabilities', {\n  concurrency: 2,\n  limiter: {\n    max: 5, // Allow max 5 jobs\n    duration: 1000, // Per 1000ms (1 second)\n  },\n})\nexport class VulnerabilityConsumer extends WorkerHost {\n  private readonly logger = new Logger(VulnerabilityConsumer.name);\n\n  constructor(private readonly vulnerabilitiesService: VulnerabilitiesService) {\n    super();\n  }\n\n  @OnWorkerEvent('active')\n  onActive(job: Job) {\n    this.logger.log(\n      `Processing job ${job.id} of type ${job.name} with data ${job.data}...`,\n    );\n  }\n\n  @OnQueueEvent('active')\n  onEventActive(job: { jobId: string; prev?: string }) {\n    this.logger.log(`Processing job ${job.jobId}...`);\n  }\n\n  @OnQueueEvent('waiting')\n  onWaiting(jobId: string) {\n    this.logger.log(`Job ${jobId} is waiting to be processed.`);\n  }\n\n  @OnQueueEvent('delayed')\n  onDelayed(job: Job) {\n    this.logger.log(`Job ${job.id} is delayed.`);\n  }\n\n  @OnWorkerEvent('completed')\n  onCompleted(job: Job) {\n    this.logger.log(`Job ${job.id} completed!`);\n  }\n\n  async process(job: Job) {\n    // Job processing logic here\n    try {\n      this.logger.log(`Processing ${job.name} job with data`);\n      switch (job.name) {\n        case 'get-vulnerability-info':\n          await this.vulnerabilitiesService.getVulnerabilityInfoFromOSV(\n            job.data.dependencyName,\n            job.data.ecosystem,\n          );\n          break;\n        case 'get-cve-info':\n          await this.vulnerabilitiesService.getCVEInfoFromNVD(\n            job.data.dependency,\n            job.data.vuln.cveId,\n            job.data.vuln,\n          );\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      this.logger.error(`Error processing job ${job.name}: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VulnerabilitySchemaModule.html":{"url":"modules/VulnerabilitySchemaModule.html","title":"module - VulnerabilitySchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    VulnerabilitySchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/vulnerability-schema/vulnerability-schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Vulnerability, VulnerabilitySchema } from './vulnerability.schema';\nimport {\n  VulnerabilityVersion,\n  VulnerabilityVersionSchema,\n} from './vulnerability-version.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Vulnerability.name, schema: VulnerabilitySchema },\n      { name: VulnerabilityVersion.name, schema: VulnerabilityVersionSchema },\n    ]),\n  ],\n  exports: [MongooseModule],\n})\nexport class VulnerabilitySchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VulnerabilityVersion.html":{"url":"classes/VulnerabilityVersion.html","title":"class - VulnerabilityVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VulnerabilityVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/vulnerability-schema/vulnerability-version.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dependencyId\n                            \n                            \n                                    \n                                dependencyVersion\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                vulnerability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Dependency'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability-version.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dependencyVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'DependencyVersion'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability-version.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability-version.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability-version.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vulnerability\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Vulnerability'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/vulnerability-schema/vulnerability-version.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema } from 'mongoose';\nimport { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';\n\nexport type VulnerabilityVersionDocument = VulnerabilityVersion & Document;\n\n@NestSchema({ timestamps: true })\nexport class VulnerabilityVersion {\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Dependency',\n  })\n  dependencyId: MongooseSchema.Types.ObjectId;\n\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'DependencyVersion',\n  })\n  dependencyVersion: MongooseSchema.Types.ObjectId;\n\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'Vulnerability',\n  })\n  vulnerability: MongooseSchema.Types.ObjectId;\n\n  @Prop({ required: false, default: '' })\n  status: string;\n\n  @Prop({ required: false, default: '' })\n  source: string;\n}\n\nexport const VulnerabilityVersionSchema =\n  SchemaFactory.createForClass(VulnerabilityVersion);\n\nVulnerabilityVersionSchema.index({ dependencyId: 1 });\nVulnerabilityVersionSchema.index({ vulnerability: 1 });\nVulnerabilityVersionSchema.index({ dependencyId: 1, vulnerability: 1 });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/dependency-repository-schema/dependency-repository.schema.ts\n            \n            class\n            DependencyRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/database/dependency-repository-schema/dependency-repository.schema.ts\n            \n            variable\n            DependencyRepositorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/dependency-repository-schema/dependency-repository.schema.ts\n            \n            type alias\n            DependencyRepositoryDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/dependency-schema/dependency-version.schema.ts\n            \n            class\n            DependencyVersion\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/database/dependency-schema/dependency-version.schema.ts\n            \n            variable\n            DependencyVersionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/dependency-schema/dependency-version.schema.ts\n            \n            type alias\n            DependencyVersionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/dependency-schema/dependency.schema.ts\n            \n            class\n            Dependency\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/database/dependency-schema/dependency.schema.ts\n            \n            variable\n            DependencySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/dependency-schema/dependency.schema.ts\n            \n            type alias\n            DependencyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/githubapp-schema/github-app.schema.ts\n            \n            class\n            GithubApp\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/database/githubapp-schema/github-app.schema.ts\n            \n            variable\n            GithubAppSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/githubapp-schema/github-app.schema.ts\n            \n            type alias\n            GithubAppDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/license-schema/license.schema.ts\n            \n            class\n            License\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/database/license-schema/license.schema.ts\n            \n            variable\n            LicenseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/license-schema/license.schema.ts\n            \n            type alias\n            LicenseDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/otpsecret-schema/otp-secret.schema.ts\n            \n            class\n            OTPSecret\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/database/otpsecret-schema/otp-secret.schema.ts\n            \n            variable\n            OTPSecretSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/otpsecret-schema/otp-secret.schema.ts\n            \n            type alias\n            OTPSecretDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/repository-schema/repository.schema.ts\n            \n            class\n            Repository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/database/repository-schema/repository.schema.ts\n            \n            variable\n            RepositorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/repository-schema/repository.schema.ts\n            \n            type alias\n            RepositoryDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/user-schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/database/user-schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/user-schema/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/vulnerability-schema/vulnerability-version.schema.ts\n            \n            class\n            VulnerabilityVersion\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/database/vulnerability-schema/vulnerability-version.schema.ts\n            \n            variable\n            VulnerabilityVersionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/vulnerability-schema/vulnerability-version.schema.ts\n            \n            type alias\n            VulnerabilityVersionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/vulnerability-schema/vulnerability.schema.ts\n            \n            class\n            Vulnerability\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/database/vulnerability-schema/vulnerability.schema.ts\n            \n            variable\n            VulnerabilitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/vulnerability-schema/vulnerability.schema.ts\n            \n            type alias\n            VulnerabilityDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth.dto.ts\n            \n            class\n            EmailDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth.dto.ts\n            \n            class\n            GithubTokenDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth.dto.ts\n            \n            class\n            SignupDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth.dto.ts\n            \n            class\n            VerifyEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/accessToken.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/refreshToken.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt-refresh.strategy.ts\n            \n            injectable\n            JWTRefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/dependencies/dependencies.consumer.ts\n            \n            class\n            DependencyConsumer\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/dependencies/dependencies.controller.ts\n            \n            controller\n            DependenciesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/dependencies/dependencies.service.ts\n            \n            injectable\n            DependenciesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/dependencies/dto/create-dependency.dto.ts\n            \n            class\n            CreateDependencyDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/email/email.controller.ts\n            \n            controller\n            EmailController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/email/templates/otp-email.template.ts\n            \n            class\n            EmailTemplate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/github-app/github-app.controller.ts\n            \n            controller\n            GithubAppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/github-app/github-app.service.ts\n            \n            injectable\n            GithubAppService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/modules/github-app/validator/validate.ts\n            \n            function\n            validateAuthCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/github-app/validator/validate.ts\n            \n            function\n            validateInstallationId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/licenses/licenses.controller.ts\n            \n            controller\n            LicensesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/licenses/licenses.service.ts\n            \n            injectable\n            LicensesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/repository/dto/bulkselect.dto.ts\n            \n            class\n            SelectRepoUrlsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/repository/dto/bulkselect.dto.ts\n            \n            class\n            SelectRepoUrlSingleDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/repository/repository.controller.ts\n            \n            controller\n            RepositoryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/repository/repository.service.ts\n            \n            injectable\n            RepositoryService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/modules/repository/validator/pagination.validator.ts\n            \n            function\n            validatePagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/vulnerabilities/dto/create-vulnerability.dto.ts\n            \n            class\n            CreateVulnerabilityDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/vulnerabilities/vulnerabilities.consumer.ts\n            \n            class\n            VulnerabilityConsumer\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/vulnerabilities/vulnerabilities.controller.ts\n            \n            controller\n            VulnerabilitiesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/vulnerabilities/vulnerabilities.service.ts\n            \n            injectable\n            VulnerabilitiesService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/axios : ^4.0.0\n        \n            @nestjs/bullmq : ^11.0.2\n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.11\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.1\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.11\n        \n            @nestjs/swagger : ^11.0.3\n        \n            axios : ^1.7.9\n        \n            bcrypt : ^5.1.1\n        \n            bcryptjs : ^3.0.0\n        \n            bullmq : ^5.41.9\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            google-auth-library : ^9.15.1\n        \n            jsonwebtoken : ^9.0.2\n        \n            mongoose : ^8.10.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginType   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/user-schema/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginType\n                    \n                \n                        \n                            \n                                 CREDENTIAL\n                            \n                        \n                        \n                            \n                                Value : credential\n                            \n                        \n                        \n                            \n                                 GITHUB\n                            \n                        \n                        \n                            \n                                Value : github\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            validateAuthCode   (src/.../validate.ts)\n                        \n                        \n                            validateInstallationId   (src/.../validate.ts)\n                        \n                        \n                            validatePagination   (src/.../pagination.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/modules/github-app/validator/validate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateAuthCode\n                        \n                    \n                \n            \n            \n                \nvalidateAuthCode(authCode: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authCode\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateInstallationId\n                        \n                    \n                \n            \n            \n                \nvalidateInstallationId(installationId: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                installationId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/modules/repository/validator/pagination.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validatePagination\n                        \n                    \n                \n            \n            \n                \nvalidatePagination(page: any, limit: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDepshield Backend Documentation\nDepshield is a powerful tool designed to analyze and monitor the security and integrity of your code repositories. It scans for vulnerabilities, dependency limitations, and potential security risks across different branches, ensuring a secure and optimized development workflow.\n\nFeatures\n\nDependency Analysis: Identify and track dependencies within your project.\nVulnerability Scanning: Detect security vulnerabilities and limitations in dependencies.\nBranch Monitoring: Scan and retrieve data from repositories efficiently.\nAuthentication & Security: Utilizes Auth.js for authentication and Codecy for tracking code errors and duplication.\nComprehensive Testing: Ensures reliability with Jest and Playwright.\n\n\nBranching Strategy\nDepshield follows a structured branching strategy:\n\nTest Branch: Internal testing and debugging.\nBeta Branch: For client testing before release.\nDevelopment Branch: Uses the naming convention depshield-client-vX.00.00X, where X changes with each iteration.\n\n\nConfiguration\nTo configure the GitHub App credentials for the Depshield backend, set the following environment variables in your .env file:\nExample :GITHUB_APP_ID=your_app_id\nGITHUB_APP_CLIENT_ID=your_client_id\nGITHUB_APP_CLIENT_SECRET=your_client_secret\nGITHUB_PRIVATE_KEY=your_base64_encoded_private_keyStep 1: Create a GitHub App\n\nNavigate to Settings > Developer settings > GitHub Apps on GitHub.\nClick New GitHub App and provide:\nGitHub App Name (e.g., \"Depshield App\")\nHomepage URL (your repository or website URL)\nWebhook URL (optional)\nPermissions: \"Contents: Read-only\" and \"Metadata: Read-only\"\n\n\nClick Create GitHub App and copy the App ID (GITHUB_APP_ID).\n\nStep 2: Generate a Private Key\n\nIn the GitHub App settings, go to Private keys.\nClick Generate a private key (downloads a .pem file).\nConvert the .pem file to a base64 string:\nmacOS/Linux:Example :base64 -i private-key.pem | tr -d '\\n'\nWindows (PowerShell):Example :[Convert]::ToBase64String([IO.File]::ReadAllBytes(\"private-key.pem\"))\n\n\nCopy the output as GITHUB_PRIVATE_KEY.\n\nStep 3: Set Up OAuth for the GitHub App\n\nIn the GitHub App settings, enter your User authorization callback URL (e.g., http://localhost:3000/api/auth/callback).\nSave changes and copy the Client ID (GITHUB_APP_CLIENT_ID).\nGenerate a Client Secret (GITHUB_APP_CLIENT_SECRET).\n\nStep 4: Add to .env File\nEnsure all values are correctly set in your .env file as shown above.\n\nTechnologies Used\n\nFramework: Nest.js\nCode Quality Monitoring: Codecy\n\n\nGetting Started\nInstall Dependencies\nDepshield uses Yarn as its package manager. If you don’t have Yarn installed, follow the installation guide.\nTo install all dependencies, run:\nExample :yarn installStart the Development Server\nExample :yarn start:devOpen http://localhost:3000 to access the application.\n\nDeployment\nDepshield can be deployed on various platforms, including Vercel and Koyeb. Below are deployment steps for Vercel.\nDeploying with Vercel CLI\n\nInstall Vercel CLI:Example :npm install -g vercel\nLog in to Vercel:Example :vercel login\nNavigate to your project directory and deploy:Example :vercel\nFor production deployment:Example :vercel --prod\n\nDeploying to Development and Preview Environments\n\nDevelopment Environment:Example :vercel --env development\nPreview Deployment (for testing branches before merging):Example :vercel --pre\n\nAssigning a Custom Domain\n\nAdd your domain to Vercel:Example :vercel domains add yourdomain.com\nUpdate DNS settings as per Vercel’s instructions.\nSet the domain for production:Example :vercel alias yourdeploymenturl yourdomain.com\nVerify the domain:Example :vercel domains inspect yourdomain.com\n\nLogging Out of Vercel CLI\nExample :vercel logout\nAdditional Resources\n\nNest.js Documentation - Backend framework documentation.\nGitHub App Documentation - Guide on building GitHub Apps.\nVercel Documentation - Deployment and configuration guidance.\n\n\nContributing\nWe welcome contributions! Please adhere to branch naming conventions and test all changes before submitting pull requests.\nContribution Guidelines\n\nFork the repository.\nCreate a feature branch (e.g., feature/new-feature).\nCommit changes with meaningful messages.\nRun tests before submitting a pull request.\nSubmit a pull request for review.\n\n\nLicense\nDepshield is an open-source project. See the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DependenciesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DependencyRepositorySchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DependencySchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubAppSchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LicenseSchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LicensesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OTPSecretSchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepositorySchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserSchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VulnerabilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VulnerabilitySchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DependenciesModule\n\n\n\ncluster_DependenciesModule_exports\n\n\n\ncluster_DependenciesModule_providers\n\n\n\ncluster_GithubAppModule\n\n\n\ncluster_GithubAppModule_exports\n\n\n\ncluster_GithubAppModule_providers\n\n\n\ncluster_LicensesModule\n\n\n\ncluster_LicensesModule_providers\n\n\n\ncluster_RepositoryModule\n\n\n\ncluster_RepositoryModule_imports\n\n\n\ncluster_RepositoryModule_exports\n\n\n\ncluster_RepositoryModule_providers\n\n\n\ncluster_VulnerabilitiesModule\n\n\n\ncluster_VulnerabilitiesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDependenciesModule\n\nDependenciesModule\n\n\n\nRepositoryModule\n\nRepositoryModule\n\nRepositoryModule -->\n\nDependenciesModule->RepositoryModule\n\n\n\nAppModule -->\n\nDependenciesModule->AppModule\n\n\n\n\n\nDependenciesService \n\nDependenciesService \n\nDependenciesService  -->\n\nDependenciesModule->DependenciesService \n\n\n\n\n\nDependencySchemaModule\n\nDependencySchemaModule\n\nDependenciesModule -->\n\nDependencySchemaModule->DependenciesModule\n\n\n\n\n\nVulnerabilitiesModule\n\nVulnerabilitiesModule\n\nVulnerabilitiesModule -->\n\nDependencySchemaModule->VulnerabilitiesModule\n\n\n\nAppModule -->\n\nDependencySchemaModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAuthModule -->\n\nEmailModule->AuthModule\n\n\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nGithubAppModule\n\nGithubAppModule\n\nRepositoryModule -->\n\nGithubAppModule->RepositoryModule\n\n\n\nAppModule -->\n\nGithubAppModule->AppModule\n\n\n\n\n\nGithubAppService \n\nGithubAppService \n\nGithubAppService  -->\n\nGithubAppModule->GithubAppService \n\n\n\n\n\nGithubAppSchemaModule\n\nGithubAppSchemaModule\n\nGithubAppModule -->\n\nGithubAppSchemaModule->GithubAppModule\n\n\n\nRepositoryModule -->\n\nGithubAppSchemaModule->RepositoryModule\n\n\n\nAppModule -->\n\nGithubAppSchemaModule->AppModule\n\n\n\n\n\nLicenseSchemaModule\n\nLicenseSchemaModule\n\n\n\nLicensesModule\n\nLicensesModule\n\nLicensesModule -->\n\nLicenseSchemaModule->LicensesModule\n\n\n\nAppModule -->\n\nLicenseSchemaModule->AppModule\n\n\n\nAppModule -->\n\nLicensesModule->AppModule\n\n\n\n\n\nOTPSecretSchemaModule\n\nOTPSecretSchemaModule\n\nAuthModule -->\n\nOTPSecretSchemaModule->AuthModule\n\n\n\nEmailModule -->\n\nOTPSecretSchemaModule->EmailModule\n\n\n\nAppModule -->\n\nOTPSecretSchemaModule->AppModule\n\n\n\nAppModule -->\n\nRepositoryModule->AppModule\n\n\n\n\n\nRepositoryService \n\nRepositoryService \n\nRepositoryService  -->\n\nRepositoryModule->RepositoryService \n\n\n\n\n\nRepositorySchemaModule\n\nRepositorySchemaModule\n\nGithubAppModule -->\n\nRepositorySchemaModule->GithubAppModule\n\n\n\nRepositoryModule -->\n\nRepositorySchemaModule->RepositoryModule\n\n\n\nAppModule -->\n\nRepositorySchemaModule->AppModule\n\n\n\n\n\nUserSchemaModule\n\nUserSchemaModule\n\nAuthModule -->\n\nUserSchemaModule->AuthModule\n\n\n\nEmailModule -->\n\nUserSchemaModule->EmailModule\n\n\n\nGithubAppModule -->\n\nUserSchemaModule->GithubAppModule\n\n\n\nRepositoryModule -->\n\nUserSchemaModule->RepositoryModule\n\n\n\nAppModule -->\n\nUserSchemaModule->AppModule\n\n\n\nAppModule -->\n\nVulnerabilitiesModule->AppModule\n\n\n\n\n\nVulnerabilitySchemaModule\n\nVulnerabilitySchemaModule\n\nVulnerabilitiesModule -->\n\nVulnerabilitySchemaModule->VulnerabilitiesModule\n\n\n\nAppModule -->\n\nVulnerabilitySchemaModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\nAppModule -->\n\nEmailService->AppModule\n\n\n\n\n\nJWTRefreshTokenStrategy\n\nJWTRefreshTokenStrategy\n\nAuthModule -->\n\nJWTRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nDependenciesService\n\nDependenciesService\n\nDependenciesModule -->\n\nDependenciesService->DependenciesModule\n\n\n\nVulnerabilitiesModule -->\n\nDependenciesService->VulnerabilitiesModule\n\n\n\n\n\nGithubAppService\n\nGithubAppService\n\nGithubAppModule -->\n\nGithubAppService->GithubAppModule\n\n\n\n\n\nLicensesService\n\nLicensesService\n\nLicensesModule -->\n\nLicensesService->LicensesModule\n\n\n\n\n\nDependencyRepositorySchemaModule\n\nDependencyRepositorySchemaModule\n\nRepositoryModule -->\n\nDependencyRepositorySchemaModule->RepositoryModule\n\n\n\n\n\nRepositoryService\n\nRepositoryService\n\nRepositoryModule -->\n\nRepositoryService->RepositoryModule\n\n\n\n\n\nVulnerabilitiesService\n\nVulnerabilitiesService\n\nVulnerabilitiesModule -->\n\nVulnerabilitiesService->VulnerabilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DependencyDocument   (src/.../dependency.schema.ts)\n                        \n                        \n                            DependencyRepositoryDocument   (src/.../dependency-repository.schema.ts)\n                        \n                        \n                            DependencyVersionDocument   (src/.../dependency-version.schema.ts)\n                        \n                        \n                            GithubAppDocument   (src/.../github-app.schema.ts)\n                        \n                        \n                            LicenseDocument   (src/.../license.schema.ts)\n                        \n                        \n                            OTPSecretDocument   (src/.../otp-secret.schema.ts)\n                        \n                        \n                            RepositoryDocument   (src/.../repository.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                        \n                            VulnerabilityDocument   (src/.../vulnerability.schema.ts)\n                        \n                        \n                            VulnerabilityVersionDocument   (src/.../vulnerability-version.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/dependency-schema/dependency.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DependencyDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/dependency-repository-schema/dependency-repository.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DependencyRepositoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/dependency-schema/dependency-version.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DependencyVersionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/githubapp-schema/github-app.schema.ts\n    \n    \n        \n            \n                \n                    \n                    GithubAppDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/license-schema/license.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LicenseDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/otpsecret-schema/otp-secret.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OTPSecretDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/repository-schema/repository.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RepositoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/user-schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/vulnerability-schema/vulnerability.schema.ts\n    \n    \n        \n            \n                \n                    \n                    VulnerabilityDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/database/vulnerability-schema/vulnerability-version.schema.ts\n    \n    \n        \n            \n                \n                    \n                    VulnerabilityVersionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DependencyRepositorySchema   (src/.../dependency-repository.schema.ts)\n                        \n                        \n                            DependencySchema   (src/.../dependency.schema.ts)\n                        \n                        \n                            DependencyVersionSchema   (src/.../dependency-version.schema.ts)\n                        \n                        \n                            GithubAppSchema   (src/.../github-app.schema.ts)\n                        \n                        \n                            LicenseSchema   (src/.../license.schema.ts)\n                        \n                        \n                            OTPSecretSchema   (src/.../otp-secret.schema.ts)\n                        \n                        \n                            RepositorySchema   (src/.../repository.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            VulnerabilitySchema   (src/.../vulnerability.schema.ts)\n                        \n                        \n                            VulnerabilityVersionSchema   (src/.../vulnerability-version.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/dependency-repository-schema/dependency-repository.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DependencyRepositorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DependencyRepository)\n                    \n                \n\n\n        \n    \n\n    src/database/dependency-schema/dependency.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DependencySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Dependency)\n                    \n                \n\n\n        \n    \n\n    src/database/dependency-schema/dependency-version.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DependencyVersionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DependencyVersion)\n                    \n                \n\n\n        \n    \n\n    src/database/githubapp-schema/github-app.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GithubAppSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(GithubApp)\n                    \n                \n\n\n        \n    \n\n    src/database/license-schema/license.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LicenseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(License)\n                    \n                \n\n\n        \n    \n\n    src/database/otpsecret-schema/otp-secret.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTPSecretSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(OTPSecret)\n                    \n                \n\n\n        \n    \n\n    src/database/repository-schema/repository.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RepositorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Repository)\n                    \n                \n\n\n        \n    \n\n    src/database/user-schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    src/database/vulnerability-schema/vulnerability.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VulnerabilitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Vulnerability)\n                    \n                \n\n\n        \n    \n\n    src/database/vulnerability-schema/vulnerability-version.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VulnerabilityVersionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(VulnerabilityVersion)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
