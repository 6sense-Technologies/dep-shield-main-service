import { Document, Schema as MongooseSchema } from 'mongoose';
import { Prop, SchemaFactory, Schema as NestSchema } from '@nestjs/mongoose';

export type VulnerabilityVersionDocument = VulnerabilityVersion & Document;

@NestSchema({ timestamps: true })
export class VulnerabilityVersion {
  @Prop({
    required: true,
    type: MongooseSchema.Types.ObjectId,
    ref: 'Dependency',
  })
  dependencyId: MongooseSchema.Types.ObjectId;

  @Prop({
    required: true,
    type: MongooseSchema.Types.ObjectId,
    ref: 'DependencyVersion',
  })
  dependencyVersion: MongooseSchema.Types.ObjectId;

  @Prop({
    required: true,
    type: MongooseSchema.Types.ObjectId,
    ref: 'Vulnerability',
  })
  vulnerability: MongooseSchema.Types.ObjectId;

  @Prop({ required: false, default: '' })
  status: string;

  @Prop({ required: false, default: '' })
  source: string;
}

export const VulnerabilityVersionSchema =
  SchemaFactory.createForClass(VulnerabilityVersion);

VulnerabilityVersionSchema.index({ dependencyId: 1 });
VulnerabilityVersionSchema.index({ vulnerability: 1 });
VulnerabilityVersionSchema.index({ dependencyId: 1, vulnerability: 1 });
